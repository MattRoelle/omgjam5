!function(Q){var U={};function F(B){if(U[B])return U[B].exports;var I=U[B]={i:B,l:!1,exports:{}};return Q[B].call(I.exports,I,I.exports,F),I.l=!0,I.exports}F.m=Q,F.c=U,F.d=function(Q,U,B){F.o(Q,U)||Object.defineProperty(Q,U,{enumerable:!0,get:B})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,U){if(1&U&&(Q=F(Q)),8&U)return Q;if(4&U&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(F.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&U&&"string"!=typeof Q)for(var I in Q)F.d(B,I,function(U){return Q[U]}.bind(null,I));return B},F.n=function(Q){var U=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(U,"a",U),U},F.o=function(Q,U){return Object.prototype.hasOwnProperty.call(Q,U)},F.p="",F(F.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/Loader.ts\nvar Loader = /** @class */ (function () {\r\n    function Loader(_scene) {\r\n        this._scene = _scene;\r\n    }\r\n    Loader.prototype.load = function () {\r\n        this._scene.load.json("shapes", "/assets/physics.json");\r\n        this._scene.load.image("terrain1", "/assets/terrain1.png");\r\n        this._scene.load.image("uibg", "/assets/uibg.png");\r\n        this._scene.load.image("finish", "/assets/finish.png");\r\n        this._scene.load.image("finishtxt", "/assets/finishtxt.png");\r\n        this._scene.load.image("store", "/assets/store.png");\r\n        this._scene.load.image("bg1", "/assets/bg1.png");\r\n        this._scene.load.image("bg2", "/assets/bg2.png");\r\n        this._scene.load.image("bg3", "/assets/bg3.png");\r\n        this._scene.load.image("rock1", "/assets/rock1.png");\r\n        this._scene.load.image("rock2", "/assets/rock2.png");\r\n        this._scene.load.image("rock3", "/assets/rock3.png");\r\n        this._scene.load.image("rock4", "/assets/rock4.png");\r\n        this._scene.load.image("rock5", "/assets/rock5.png");\r\n        this._scene.load.image("starting", "/assets/starting.png");\r\n        this._scene.load.image("starting_close", "/assets/starting_close.png");\r\n        this._scene.load.image("jump1", "/assets/jump1.png");\r\n        this._scene.load.image("platform1", "/assets/platform1.png");\r\n        this._scene.load.image("platform2", "/assets/platform2.png");\r\n        this._scene.load.image("platform3", "/assets/platform3.png");\r\n        this._scene.load.image("storeitem", "/assets/storeitem.png");\r\n        this._scene.load.image("storeitem_s", "/assets/storeitem_s.png");\r\n        this._scene.load.image("jumpmod1", "/assets/jumpmod1.png");\r\n        this._scene.load.image("jumpmod2", "/assets/jumpmod2.png");\r\n        this._scene.load.image("tank1", "/assets/tank1.png");\r\n        this._scene.load.image("tank2", "/assets/tank2.png");\r\n        this._scene.load.image("tank3", "/assets/tank3.png");\r\n        this._scene.load.image("tank4", "/assets/tank4.png");\r\n        this._scene.load.image("bumpers1", "/assets/bumpers1.png");\r\n        this._scene.load.image("buybtn", "/assets/buybtn.png");\r\n        this._scene.load.image("jumpbar", "/assets/jumpbar.png");\r\n        this._scene.load.image("fuelbar", "/assets/fuelbar.png");\r\n        this._scene.load.image("rocket1", "/assets/rocket1.png");\r\n        this._scene.load.image("rocket2", "/assets/rocket2.png");\r\n        this._scene.load.image("rocket3", "/assets/rocket3.png");\r\n        this._scene.load.image("spinner", "/assets/spinner.png");\r\n        this._scene.load.image("finishbg", "/assets/finishbg.png");\r\n        this._scene.load.image("finishfg", "/assets/finishfg.png");\r\n        this._scene.load.image("splashbg", "/assets/splashbg.png");\r\n        this._scene.load.image("splashfg", "/assets/splashfg.png");\r\n        this._scene.load.image("title", "/assets/title.png");\r\n        this._scene.load.spritesheet("boost1", "/assets/boost.png", {\r\n            frameWidth: 100,\r\n            frameHeight: 100,\r\n            endFrame: 30\r\n        });\r\n        this._scene.load.spritesheet("321", "/assets/321.png", {\r\n            frameWidth: 181,\r\n            frameHeight: 181,\r\n            endFrame: 22\r\n        });\r\n        this._scene.load.audio("bgm", [\r\n            "/assets/sounds/bgm.mp3",\r\n        ]);\r\n        this._scene.load.audio("chaching", [\r\n            "/assets/sounds/chaching.mp3",\r\n        ]);\r\n        this._scene.load.audio("start1", [\r\n            "/assets/sounds/start1.mp3",\r\n        ]);\r\n        this._scene.load.audio("start2", [\r\n            "/assets/sounds/start2.mp3",\r\n        ]);\r\n        this._scene.load.audio("blip1", [\r\n            "/assets/sounds/blip1.wav",\r\n        ]);\r\n        this._scene.load.audio("blip2", [\r\n            "/assets/sounds/blip2.wav",\r\n        ]);\r\n        this._scene.load.audio("uiselect", [\r\n            "/assets/sounds/uiselect.wav",\r\n        ]);\r\n        this._scene.load.audio("cheering", [\r\n            "/assets/sounds/cheering.mp3",\r\n        ]);\r\n        this._scene.load.audio("boostsfx", [\r\n            "/assets/sounds/boost.mp3",\r\n        ]);\r\n        /*\r\n        this._scene.load.image("tiles", "/assets/tilemap.png");\r\n        this._scene.load.spritesheet("water", "/assets/water.png", {\r\n            frameWidth: 40,\r\n            frameHeight: 40,\r\n            endFrame: 6\r\n        });\r\n        */\r\n    };\r\n    return Loader;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/shaders/ShaderManager.ts\nvar ShaderManager = /** @class */ (function () {\r\n    function ShaderManager(_game, _scene) {\r\n        this._game = _game;\r\n        this._scene = _scene;\r\n        var r = this._game.renderer;\r\n        /*\r\n        this.snake = r.addPipeline("Snake", new SnakePipeline(this._game));\r\n        this.snake.setFloat2("uResolution", <number>this._game.config.width, <number>this._game.config.height);\r\n        */\r\n    }\r\n    ShaderManager.prototype.update = function () {\r\n    };\r\n    return ShaderManager;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/scaleManager.js\nclass ScaleManager {\r\n    constructor(canvas, isMobile) {\r\n        this.canvas = canvas;\r\n        this.mobile = isMobile;\r\n\r\n        window.addEventListener(\'resize\', () => {\r\n            this.resize(this.canvas);\r\n\r\n            if (this.mobile) {\r\n                if (window.innerWidth < window.innerHeight) {\r\n                    this.leaveIncorrectOrientation();\r\n                } else {\r\n                    this.enterIncorrectOrientation();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.resize(this.canvas);\r\n    }\r\n\r\n    resize(canvas) {\r\n        let scale = Math.min(window.innerWidth / canvas.width, window.innerHeight / canvas.height);\r\n        let orientation = \'left\';\r\n        let extra = (this.mobile) ? \'margin-left: -50%\': \'\';\r\n        let margin = window.innerWidth / 2 - (canvas.width / 2) * scale;\r\n\r\n        canvas.setAttribute(\'style\', \'-ms-transform-origin: \' + orientation + \' top; -webkit-transform-origin: \' + orientation + \' top;\' +\r\n            \' -moz-transform-origin: \' + orientation + \' top; -o-transform-origin: \' + orientation + \' top; transform-origin: \' + orientation + \' top;\' +\r\n            \' -ms-transform: scale(\' + scale + \'); -webkit-transform: scale3d(\' + scale + \', 1);\' +\r\n            \' -moz-transform: scale(\' + scale + \'); -o-transform: scale(\' + scale + \'); transform: scale(\' + scale + \');\' +\r\n            \' display: block; margin-left: \' + margin + \'px;\'\r\n        );\r\n    }\r\n\r\n    enterIncorrectOrientation() {\r\n        document.getElementById("orientation").style.display = "block";\r\n        document.getElementById("content").style.display = "none";\r\n    }\r\n\r\n    leaveIncorrectOrientation() {\r\n        document.getElementById("orientation").style.display = "none";\r\n        document.getElementById("content").style.display = "block";\r\n    }\r\n}\r\n/* harmony default export */ var scaleManager = (ScaleManager);\n// CONCATENATED MODULE: ./src/helpers/InputManager.ts\nvar InputManager = /** @class */ (function () {\r\n    function InputManager(scene) {\r\n        this.up = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.UP);\r\n        this.down = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN);\r\n        this.left = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT);\r\n        this.right = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT);\r\n        this.w = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W);\r\n        this.a = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A);\r\n        this.s = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S);\r\n        this.d = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D);\r\n        this.space = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\r\n    }\r\n    Object.defineProperty(InputManager.prototype, "axisY", {\r\n        get: function () {\r\n            if (this.up.isDown || this.w.isDown)\r\n                return -1;\r\n            else if (this.down.isDown || this.s.isDown)\r\n                return 1;\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputManager.prototype, "axisX", {\r\n        get: function () {\r\n            if (this.left.isDown || this.a.isDown)\r\n                return -1;\r\n            else if (this.right.isDown || this.d.isDown)\r\n                return 1;\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return InputManager;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/helpers/EffectHelper.ts\nvar EffectHelper = /** @class */ (function () {\r\n    function EffectHelper(_scene) {\r\n        this._scene = _scene;\r\n    }\r\n    return EffectHelper;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/controllers/BaseController.ts\n\r\n\r\nvar ignoreFade = false;\r\nvar BaseController_BaseController = /** @class */ (function () {\r\n    function BaseController(_args, _scene, _shaderManager, _matter, _game) {\r\n        this._args = _args;\r\n        this._scene = _scene;\r\n        this._shaderManager = _shaderManager;\r\n        this._matter = _matter;\r\n        this._game = _game;\r\n        this._entities = [];\r\n        this._destroyables = [];\r\n        this.destroyed = false;\r\n        this._fadedOut = false;\r\n        this._input = new InputManager(this._scene);\r\n        this.effects = new EffectHelper(this._scene);\r\n        this.init();\r\n        this._splashBg = this._scene.add.sprite(0, 0, "splashbg");\r\n        this._splashBg.setOrigin(0, 0);\r\n        this._splashFg = this._scene.add.sprite(440, 200, "rocket1");\r\n        this._splashFg.setOrigin(0.5, 0.5);\r\n        this._splashFg.setScale(8, 8);\r\n        this.boostSprite = this._scene.add.sprite(256, 300, "boost1");\r\n        this._scene.anims.create({\r\n            key: "boost_anim",\r\n            frames: this._scene.anims.generateFrameNumbers("boost1", {\r\n                start: 0,\r\n                end: 30,\r\n            }),\r\n            frameRate: 60,\r\n            repeat: -1\r\n        });\r\n        this.boostSprite.setOrigin(0.5, 0.5);\r\n        this.boostSprite.anims.play("boost_anim");\r\n        this.boostSprite.setScale(12, 12);\r\n        this.boostSprite.alpha = 0;\r\n        this._splashFg.alpha = 0;\r\n        this.addD(this.boostSprite);\r\n        this.addD(this._splashBg);\r\n        this.addD(this._splashFg);\r\n        if (ignoreFade) {\r\n            this._splashBg.y = -1000;\r\n            this._splashFg.y = -1000;\r\n            this.boostSprite.y = -1000;\r\n            ignoreFade = false;\r\n        }\r\n        else {\r\n            this._scene.add.tween({\r\n                targets: this._splashBg,\r\n                y: 1000,\r\n                duration: 1000,\r\n                ease: \'Power2\'\r\n            });\r\n            this._scene.add.tween({\r\n                targets: this._splashFg,\r\n                y: 1000,\r\n                duration: 500,\r\n                ease: \'Power2\'\r\n            });\r\n            this._scene.add.tween({\r\n                targets: this.boostSprite,\r\n                y: 1000,\r\n                duration: 500,\r\n                ease: \'Power2\'\r\n            });\r\n        }\r\n    }\r\n    BaseController.prototype.ignoreFade = function () {\r\n        ignoreFade = true;\r\n    };\r\n    BaseController.prototype.fadeOut = function (cb) {\r\n        if (this._fadedOut)\r\n            return;\r\n        this._fadedOut = true;\r\n        this._scene.add.tween({\r\n            targets: this._splashBg,\r\n            y: 0,\r\n            duration: 500,\r\n            ease: \'Power2\'\r\n        });\r\n        this._scene.add.tween({\r\n            targets: this._splashFg,\r\n            y: 200,\r\n            duration: 1000,\r\n            ease: \'Power2\'\r\n        });\r\n        this._scene.add.tween({\r\n            targets: this.boostSprite,\r\n            y: 300,\r\n            duration: 1000,\r\n            ease: \'Power2\'\r\n        });\r\n        setTimeout(cb, 500);\r\n    };\r\n    BaseController.prototype.create = function (typ, params) {\r\n        var e = (new typ(this._scene, this._input, this._shaderManager, params, this));\r\n        return this.add(e);\r\n    };\r\n    BaseController.prototype.add = function (e) {\r\n        this._entities.push(e);\r\n        return e;\r\n    };\r\n    BaseController.prototype.addD = function (e) {\r\n        this._destroyables.push(e);\r\n        return e;\r\n    };\r\n    BaseController.prototype.update = function () {\r\n        for (var _i = 0, _a = this._entities; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            e.update();\r\n        }\r\n    };\r\n    BaseController.prototype.destroy = function () {\r\n        if (this.destroyed)\r\n            return;\r\n        this.destroyed = true;\r\n        for (var _i = 0, _a = this._entities; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            e.destroy();\r\n        }\r\n        for (var _b = 0, _c = this._destroyables; _b < _c.length; _b++) {\r\n            var e = _c[_b];\r\n            e.destroy();\r\n        }\r\n    };\r\n    return BaseController;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/services/careerService.ts\n/* harmony default export */ var careerService = ({\r\n    money: 1000,\r\n    nRaces: 0,\r\n    ownedItems: []\r\n});\r\n\n// CONCATENATED MODULE: ./src/services/itemsService.ts\nvar itemService = {\r\n    ITEMS: {\r\n        AI_HANDICAP1: {\r\n            id: "ai1",\r\n            name: "x",\r\n            description: "x",\r\n            price: 50,\r\n            effect: { speed: 0.2 },\r\n            priority: 0,\r\n            aiOnly: true\r\n        },\r\n        WR1: {\r\n            id: "wr1",\r\n            name: "Weight Reduction 1",\r\n            description: "Carve out the center of your rock a bit.",\r\n            price: 100,\r\n            spriteKey: "rock2",\r\n            effect: { speed: 0.1 },\r\n            priority: 0,\r\n            replacesBaseSprite: true,\r\n            ignoreRotation: false\r\n        },\r\n        WR2: {\r\n            id: "wr2",\r\n            requirements: ["wr1"],\r\n            name: "Weight Reduction 2",\r\n            description: "It loks like a deformed donut...",\r\n            price: 250,\r\n            spriteKey: "rock3",\r\n            effect: { speed: 0.2 },\r\n            priority: 0,\r\n            replacesBaseSprite: true,\r\n            ignoreRotation: false\r\n        },\r\n        WR3: {\r\n            id: "wr3",\r\n            requirements: ["wr2"],\r\n            name: "Weight Reduction 3",\r\n            description: "Is that even legal?",\r\n            price: 600,\r\n            spriteKey: "rock4",\r\n            effect: { speed: 0.3 },\r\n            priority: 0,\r\n            replacesBaseSprite: true,\r\n            ignoreRotation: false\r\n        },\r\n        WR4: {\r\n            id: "wr4",\r\n            requirements: ["wr3"],\r\n            name: "Carbon Fiber",\r\n            description: "That\'s not even a rock!",\r\n            price: 1000,\r\n            spriteKey: "rock5",\r\n            effect: { speed: 0.4 },\r\n            priority: 0,\r\n            replacesBaseSprite: true,\r\n            ignoreRotation: false\r\n        },\r\n        JUMP1: {\r\n            id: "jump1",\r\n            category: "jump",\r\n            name: "Jump Module 1",\r\n            description: "Allows you to jump more frequently",\r\n            price: 250,\r\n            spriteKey: "jumpmod1",\r\n            effect: { jumpDelay: -200 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n        },\r\n        JUMP2: {\r\n            id: "jump2",\r\n            requirements: ["jump1"],\r\n            category: "jump",\r\n            name: "Super Jump Module",\r\n            description: "Allows you to jump more frequently",\r\n            price: 500,\r\n            spriteKey: "jumpmod2",\r\n            effect: { jumpDelay: -200 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n        },\r\n        GAS1: {\r\n            id: "gas1",\r\n            category: "gas",\r\n            name: "Small Gas Tank",\r\n            description: "A little goes a long way",\r\n            price: 100,\r\n            spriteKey: "tank1",\r\n            effect: { fuel: 25 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n            origin: { x: 0.5, y: 1 }\r\n        },\r\n        GAS2: {\r\n            id: "gas2",\r\n            category: "gas",\r\n            requirements: ["gas1"],\r\n            name: "Medium Gas Tank",\r\n            description: "Now we\'re cooking with gas.",\r\n            price: 250,\r\n            spriteKey: "tank2",\r\n            effect: { fuel: 25 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n            origin: { x: 0.5, y: 1 }\r\n        },\r\n        GAS3: {\r\n            id: "gas3",\r\n            category: "gas",\r\n            requirements: ["gas2"],\r\n            name: "Large Gas Tank",\r\n            description: "Maximum Capacity!",\r\n            price: 400,\r\n            spriteKey: "tank3",\r\n            effect: { fuel: 25 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n            origin: { x: 0.5, y: 1 }\r\n        },\r\n        GAS4: {\r\n            id: "gas4",\r\n            category: "gas",\r\n            requirements: ["gas3"],\r\n            name: "Top Secret Tank",\r\n            description: "Shhhhhhh...",\r\n            price: 750,\r\n            spriteKey: "tank4",\r\n            effect: { fuel: 25 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n            origin: { x: 0.5, y: 1 }\r\n        },\r\n        BUMPERS1: {\r\n            id: "b1",\r\n            name: "Bumpers",\r\n            description: "Put a rubber ring around your rock to help it\'s bounciness",\r\n            price: 300,\r\n            spriteKey: "bumpers1",\r\n            effect: { bounce: 0.09 },\r\n            priority: 5,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n        },\r\n        ROCKET1: {\r\n            category: "rocket",\r\n            requirements: ["gas1"],\r\n            id: "rocket1",\r\n            name: "Rocket Mk 1",\r\n            description: "Better than nothing.",\r\n            price: 150,\r\n            spriteKey: "rocket1",\r\n            effect: { rocket: 1 },\r\n            priority: -30,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: true,\r\n        },\r\n        ROCKET2: {\r\n            category: "rocket",\r\n            id: "rocket2",\r\n            requirements: ["rocket1"],\r\n            name: "Rocket Mk 2",\r\n            description: "Now that\'s a real rocket.",\r\n            price: 400,\r\n            spriteKey: "rocket2",\r\n            effect: { rocket: 0.6 },\r\n            priority: -30,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: true,\r\n        },\r\n        ROCKET3: {\r\n            category: "rocket",\r\n            id: "rocket3",\r\n            requirements: ["rocket2"],\r\n            name: "Rocket Mk 3",\r\n            description: "Did you steal this from NASA?",\r\n            price: 700,\r\n            spriteKey: "rocket3",\r\n            effect: { rocket: 0.8 },\r\n            priority: -30,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: true,\r\n        }\r\n    },\r\n};\r\nvar n = 0;\r\nfor (var k in itemService.ITEMS)\r\n    n++;\r\nconsole.log(n + " items");\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/BaseEntity.ts\nvar BaseEntity = /** @class */ (function () {\r\n    function BaseEntity(_scene, _input, _shaderManager, _params, _controller) {\r\n        this._scene = _scene;\r\n        this._input = _input;\r\n        this._shaderManager = _shaderManager;\r\n        this._params = _params;\r\n        this._controller = _controller;\r\n        this._destroyables = [];\r\n        this.init();\r\n    }\r\n    BaseEntity.prototype.add = function (d) {\r\n        this._destroyables.push(d);\r\n        return d;\r\n    };\r\n    BaseEntity.prototype.destroySingle = function (d) {\r\n        this._destroyables = this._destroyables.filter(function (d2) { return d2 != d; });\r\n        d.destroy();\r\n    };\r\n    BaseEntity.prototype.destroy = function () {\r\n        for (var _i = 0, _a = this._destroyables; _i < _a.length; _i++) {\r\n            var d = _a[_i];\r\n            d.destroy();\r\n        }\r\n    };\r\n    return BaseEntity;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Racer.ts\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Racer = /** @class */ (function (_super) {\r\n    __extends(Racer, _super);\r\n    function Racer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.active = false;\r\n        _this.finishT = 0;\r\n        _this.isPlayer = false;\r\n        _this.lastJumpAt = -1000;\r\n        return _this;\r\n    }\r\n    Racer.prototype.init = function () {\r\n        this.boostSprite = this.add(this._scene.add.sprite(0, 0, "boost1"));\r\n        this._scene.anims.create({\r\n            key: "boost_anim",\r\n            frames: this._scene.anims.generateFrameNumbers("boost1", {\r\n                start: 0,\r\n                end: 30,\r\n            }),\r\n            frameRate: 60,\r\n            repeat: -1\r\n        });\r\n        this.boostSprite.anims.play("boost_anim");\r\n        this.boostSprite.setScale(2, 2);\r\n        this.rocket = 1;\r\n        this.speed = 0.2;\r\n        this.jumpDelay = 1500;\r\n        if (!!this._params.x) {\r\n            this.sprite = this.add(this._scene.matter.add.image(this._params.x, this._params.y, "rock1"));\r\n        }\r\n        else {\r\n            this.sprite = this.add(this._scene.matter.add.image(0, 0, "rock1"));\r\n            this.boostSprite.setVisible(false);\r\n        }\r\n        this.sprite.setCircle(26, {});\r\n        this.sprite.setBounce(0.9);\r\n        this.sprite.setMass(5);\r\n        //this.sprite.setVisible(false);\r\n        if (!this._params.x) {\r\n            this.sprite.setStatic(true);\r\n            this.sprite.setIgnoreGravity(true);\r\n        }\r\n        var weight = 10000;\r\n        var bounce = 0.9;\r\n        var af = 0.02;\r\n        this.fuel = 0;\r\n        this.itemSprites = [];\r\n        var _loop_1 = function (i) {\r\n            if (i.replacesBaseSprite) {\r\n                this_1.sprite.setTexture(i.spriteKey);\r\n            }\r\n            else if (!!i.spriteKey) {\r\n                var createSprite = true;\r\n                if (!!i.category) {\r\n                    var otherSprite = this_1.itemSprites.find(function (s) { return s.__item.category == i.category; });\r\n                    if (!!otherSprite) {\r\n                        createSprite = false;\r\n                        otherSprite.setTexture(i.spriteKey);\r\n                    }\r\n                }\r\n                if (createSprite) {\r\n                    var spr = this_1._scene.add.sprite(this_1.sprite.x, this_1.sprite.y, i.spriteKey);\r\n                    if (!!i.origin) {\r\n                        spr.setOrigin(i.origin.x, i.origin.y);\r\n                    }\r\n                    else {\r\n                        spr.setOrigin(0.5, 0.5);\r\n                    }\r\n                    spr.__item = i;\r\n                    this_1.itemSprites.push(spr);\r\n                    this_1.add(spr);\r\n                }\r\n                if (i.effect.airFriction)\r\n                    af += i.effect.airFriction;\r\n                if (i.effect.speed)\r\n                    this_1.speed += i.effect.speed;\r\n                if (i.effect.weight)\r\n                    weight += i.effect.weight;\r\n                if (i.effect.bounce)\r\n                    bounce += i.effect.bounce;\r\n                if (i.effect.fuel)\r\n                    this_1.fuel += i.effect.fuel;\r\n                if (i.effect.jumpDelay)\r\n                    this_1.jumpDelay += i.effect.jumpDelay;\r\n                if (i.effect.rocket) {\r\n                    this_1.hasRocket = true;\r\n                    this_1.rocket += i.effect.rocket;\r\n                }\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var _i = 0, _a = this._params.items.sort(function (a, b) { return b.priority - a.priority; }); _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            _loop_1(i);\r\n        }\r\n        this.sprite.setFrictionAir(af);\r\n        this.sprite.setMass(weight);\r\n        this.sprite.setBounce(bounce);\r\n    };\r\n    Racer.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n        for (var _i = 0, _a = this.itemSprites; _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            cb(i, x, y);\r\n        }\r\n        cb(this.boostSprite, x, y);\r\n    };\r\n    Racer.prototype.jump = function () {\r\n        var t = this._scene.time.now;\r\n        if (t - this.lastJumpAt > this.jumpDelay && this.active) {\r\n            this.lastJumpAt = t;\r\n            this.sprite.setVelocityY(-9);\r\n        }\r\n    };\r\n    Racer.prototype.update = function () {\r\n        if (this.active) {\r\n            if (!this.isPlayer) {\r\n                this.move(1);\r\n                if (this.sprite.y > 160) {\r\n                    this.jump();\r\n                    this.boosting = false;\r\n                }\r\n                else {\r\n                    this.boosting = true;\r\n                }\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        if (this.boosting && this.hasRocket) {\r\n            this.fuel -= 0.5;\r\n        }\r\n        this.boostSprite.alpha = (this.boosting && this.hasRocket && this.fuel > 0) ? 1 : 0;\r\n        for (var _i = 0, _a = this.itemSprites; _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            var itm = i.__item;\r\n            i.x = this.sprite.x;\r\n            i.y = this.sprite.y;\r\n            i.setScale(this.sprite.scaleX, this.sprite.scaleY);\r\n            if (!itm.ignoreRotation) {\r\n                i.angle = this.sprite.angle;\r\n            }\r\n        }\r\n        this.boostSprite.x = this.sprite.x - 21;\r\n        this.boostSprite.y = this.sprite.y + 12;\r\n    };\r\n    Racer.prototype.previewUpdate = function () {\r\n        this.sprite.angle += 0.5;\r\n        for (var _i = 0, _a = this.itemSprites; _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            var itm = i.__item;\r\n            i.x = this.sprite.x;\r\n            i.y = this.sprite.y;\r\n            i.setScale(this.sprite.scaleX, this.sprite.scaleY);\r\n            if (!itm.ignoreRotation) {\r\n                i.angle = this.sprite.angle;\r\n            }\r\n        }\r\n    };\r\n    Racer.prototype.move = function (dx) {\r\n        if (!this.active)\r\n            return;\r\n        var scale = 1;\r\n        if (this.boosting && this.hasRocket && this.fuel > 0) {\r\n            scale = this.rocket;\r\n        }\r\n        this.sprite.setVelocityX(this.sprite.body.velocity.x + (this.speed * dx) * scale);\r\n    };\r\n    return Racer;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Jump1.ts\nvar Jump1_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Jump1 = /** @class */ (function (_super) {\r\n    Jump1_extends(Jump1, _super);\r\n    function Jump1() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Jump1.prototype.init = function () {\r\n        var shapes = this._scene.cache.json.get("shapes");\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 170, "jump1", null, { shape: shapes.jump1 });\r\n        this.add(this.sprite);\r\n        this.sprite.setStatic(true);\r\n    };\r\n    Jump1.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Jump1.prototype.update = function () {\r\n    };\r\n    return Jump1;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Platform1.ts\nvar Platform1_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Platform1 = /** @class */ (function (_super) {\r\n    Platform1_extends(Platform1, _super);\r\n    function Platform1() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Platform1.prototype.init = function () {\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 180, "platform1", null, {});\r\n        this.sprite.setStatic(true);\r\n        this.add(this.sprite);\r\n    };\r\n    Platform1.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Platform1.prototype.update = function () {\r\n    };\r\n    return Platform1;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Platform2.ts\nvar Platform2_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Platform2 = /** @class */ (function (_super) {\r\n    Platform2_extends(Platform2, _super);\r\n    function Platform2() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Platform2.prototype.init = function () {\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 175, "platform2", null, {});\r\n        this.sprite.setStatic(true);\r\n        this.add(this.sprite);\r\n    };\r\n    Platform2.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Platform2.prototype.update = function () {\r\n    };\r\n    return Platform2;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Spinner.ts\nvar Spinner_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Spinner = /** @class */ (function (_super) {\r\n    Spinner_extends(Spinner, _super);\r\n    function Spinner() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Spinner.prototype.init = function () {\r\n        var shapes = this._scene.cache.json.get("shapes");\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 130, "spinner", null, {\r\n            shape: shapes.spinner\r\n        });\r\n        this.sprite.setStatic(true);\r\n        this.add(this.sprite);\r\n    };\r\n    Spinner.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Spinner.prototype.update = function () {\r\n        this.sprite.setVelocity(0, 0);\r\n        this.sprite.angle += 2;\r\n    };\r\n    return Spinner;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/services/opponentService.ts\n\r\nfunction getOpponent(difficulty) {\r\n    var items = [\r\n        itemService.ITEMS.AI_HANDICAP1,\r\n    ];\r\n    if (difficulty >= 1) {\r\n        items.push(itemService.ITEMS.WR1);\r\n    }\r\n    if (difficulty >= 3) {\r\n        items.push(itemService.ITEMS.GAS1);\r\n        items.push(itemService.ITEMS.ROCKET1);\r\n    }\r\n    if (difficulty >= 7) {\r\n        var r = Math.random();\r\n        if (r > 0.5) {\r\n            items.push(itemService.ITEMS.GAS2);\r\n        }\r\n        else {\r\n            items.push(itemService.ITEMS.WR2);\r\n        }\r\n    }\r\n    if (difficulty >= 9) {\r\n        var r = Math.random();\r\n        if (r > 0.5) {\r\n            items.push(itemService.ITEMS.GAS2);\r\n        }\r\n        else {\r\n            items.push(itemService.ITEMS.ROCKET2);\r\n        }\r\n    }\r\n    if (difficulty >= 10) {\r\n        items.push(itemService.ITEMS.WR3);\r\n    }\r\n    if (difficulty >= 11) {\r\n        items.push(itemService.ITEMS.JUMP1);\r\n    }\r\n    if (difficulty >= 13) {\r\n        var r = Math.random();\r\n        if (r > 0.5) {\r\n            items.push(itemService.ITEMS.BUMPERS1);\r\n        }\r\n    }\r\n    if (difficulty >= 16) {\r\n        items.push(itemService.ITEMS.ROCKET3);\r\n    }\r\n    if (difficulty >= 19) {\r\n        items.push(itemService.ITEMS.GAS3);\r\n    }\r\n    if (difficulty >= 23) {\r\n        items.push(itemService.ITEMS.ROCKET3);\r\n    }\r\n    if (difficulty >= 25) {\r\n        items.push(itemService.ITEMS.GAS4);\r\n    }\r\n    if (difficulty >= 28) {\r\n        items.push(itemService.ITEMS.WR4);\r\n    }\r\n    return items;\r\n}\r\n\n// CONCATENATED MODULE: ./src/services/raceFinishService.ts\n/* harmony default export */ var raceFinishService = ({\r\n    placement: 0,\r\n    earnings: 1\r\n});\r\n\n// CONCATENATED MODULE: ./src/controllers/RaceFinishController.ts\nvar RaceFinishController_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar RaceFinishController_RaceFinishController = /** @class */ (function (_super) {\r\n    RaceFinishController_extends(RaceFinishController, _super);\r\n    function RaceFinishController() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RaceFinishController.prototype.init = function () {\r\n        this._bg = this._scene.add.tileSprite(0, 0, 800, 600, "finishbg");\r\n        this._bg.setOrigin(0, 0);\r\n        this.addD(this._bg);\r\n        this._fg = this._scene.add.sprite(0, 0, "finishfg");\r\n        this._fg.setOrigin(0, 0);\r\n        this.addD(this._fg);\r\n        var placementText = this._scene.add.text(335, 125, raceFinishService.placement.toString(), {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 108,\r\n            color: raceFinishService.placement == 1 ? "#11EF11" : raceFinishService.placement == 2 ? "#FF0000" : "#ff0000",\r\n            align: "left",\r\n        });\r\n        placementText.setStroke("#000000", 12);\r\n        this.addD(placementText);\r\n        var earningText = this._scene.add.text(445, 235, raceFinishService.earnings.toString(), {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 108,\r\n            color: "#9933ff",\r\n            align: "left",\r\n        });\r\n        earningText.setStroke("#000000", 12);\r\n        this.addD(earningText);\r\n    };\r\n    RaceFinishController.prototype.update = function () {\r\n        this._bg.tilePositionY += 0.5;\r\n        this._bg.tilePositionX += 1;\r\n        if (this._input.space.isDown) {\r\n            var _this_1 = this;\r\n            this.fadeOut(function () {\r\n                _this_1._game.switchController(StoreController_StoreController);\r\n            });\r\n        }\r\n    };\r\n    RaceFinishController.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return RaceFinishController;\r\n}(BaseController_BaseController));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Platform3.ts\nvar Platform3_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Platform3 = /** @class */ (function (_super) {\r\n    Platform3_extends(Platform3, _super);\r\n    function Platform3() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Platform3.prototype.init = function () {\r\n        var shapes = this._scene.cache.json.get("shapes");\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 200, "platform3", null, {\r\n            shape: shapes.platform3\r\n        });\r\n        this.sprite.setStatic(true);\r\n        this.add(this.sprite);\r\n    };\r\n    Platform3.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Platform3.prototype.update = function () {\r\n    };\r\n    return Platform3;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Spinner2.ts\nvar Spinner2_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Spinner2 = /** @class */ (function (_super) {\r\n    Spinner2_extends(Spinner2, _super);\r\n    function Spinner2() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Spinner2.prototype.init = function () {\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 80, "platform1", null, {});\r\n        this.sprite.setStatic(true);\r\n        this.add(this.sprite);\r\n    };\r\n    Spinner2.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Spinner2.prototype.update = function () {\r\n        this.sprite.angle -= 2;\r\n    };\r\n    return Spinner2;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/helpers/SoundManager.ts\n/* harmony default export */ var SoundManager = ({\r\n    init: function (scene) {\r\n        this.bgm = scene.sound.add("bgm", {\r\n            loop: true\r\n        });\r\n        this.chaching = scene.sound.add("chaching");\r\n        this.start1 = scene.sound.add("start1");\r\n        this.start2 = scene.sound.add("start2");\r\n        this.blip1 = scene.sound.add("blip1");\r\n        this.blip2 = scene.sound.add("blip2");\r\n        this.uiselect = scene.sound.add("uiselect");\r\n        this.cheering = scene.sound.add("cheering");\r\n        this.boost = scene.sound.add("boostsfx");\r\n    },\r\n    playBgm: function () {\r\n        this.bgm.play("", { loop: true });\r\n    },\r\n    pauseBgm: function () {\r\n        this.bgm.pause();\r\n    },\r\n    playsfx: function (s) {\r\n        switch (s) {\r\n            case "chaching":\r\n                this.chaching.play();\r\n                break;\r\n            case "start":\r\n                this.start1.play();\r\n                break;\r\n            case "start2":\r\n                this.start2.play();\r\n                break;\r\n            case "blip1":\r\n                this.blip1.play();\r\n                break;\r\n            case "blip2":\r\n                this.blip2.play();\r\n                break;\r\n            case "uiselect":\r\n                this.uiselect.play();\r\n                break;\r\n            case "cheering":\r\n                this.cheering.play();\r\n                break;\r\n            case "boost":\r\n                this.boost.play();\r\n                break;\r\n        }\r\n    },\r\n    stopSfx: function (s) {\r\n        switch (s) {\r\n            case "boost":\r\n                this.boost.pause();\r\n                break;\r\n        }\r\n    }\r\n});\r\n\n// CONCATENATED MODULE: ./src/controllers/PlayController.ts\nvar PlayController_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar USE_RT = true;\r\nvar PlayController_PlayController = /** @class */ (function (_super) {\r\n    PlayController_extends(PlayController, _super);\r\n    function PlayController() {\r\n        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\r\n        _this_1._finishes = 0;\r\n        _this_1._playerFinish = 0;\r\n        _this_1._lastBoost = 0;\r\n        _this_1._finished = false;\r\n        return _this_1;\r\n    }\r\n    PlayController.prototype.init = function () {\r\n        var _this_1 = this;\r\n        this._bg1 = this._scene.add.tileSprite(0, -100, 800, 600, "bg1");\r\n        this._bg1.setOrigin(0, 0);\r\n        this.addD(this._bg1);\r\n        this._bg3 = this._scene.add.tileSprite(0, 0, 800, 600, "bg3");\r\n        this._bg3.setOrigin(0, 0);\r\n        this.addD(this._bg3);\r\n        this._bg2 = this._scene.add.tileSprite(0, 0, 800, 600, "bg2");\r\n        this._bg2.setOrigin(0, 0);\r\n        this.addD(this._bg2);\r\n        this._startingTower = this._scene.add.sprite(-240, -170, "starting");\r\n        this._startingTower.setOrigin(0, 0);\r\n        this.addD(this._startingTower);\r\n        this._startingTowerClose = this._scene.add.sprite(-232, -170, "starting_close");\r\n        this._startingTowerClose.setOrigin(0, 0);\r\n        this._startingTowerClose.setVisible(false);\r\n        this.addD(this._startingTowerClose);\r\n        this._tileSprite = this._scene.add.tileSprite(-1000, 200, 2000, 400, "terrain1");\r\n        this._tileSprite.setOrigin(0, 0);\r\n        this.addD(this._tileSprite);\r\n        var floorRect = this._scene.matter.add.rectangle(0, 300, 100000, 200, { isStatic: true });\r\n        //this.addD(floorRect);\r\n        var adjDifficulty = careerService.nRaces - 1;\r\n        this._racers = [\r\n            this.create(Racer, { x: -205, y: 140, items: careerService.ownedItems }),\r\n            this.create(Racer, { x: -205, y: 70, items: getOpponent(adjDifficulty + 2) }),\r\n            this.create(Racer, { x: -205, y: 0, items: getOpponent(adjDifficulty + 4) }),\r\n        ];\r\n        var _this = this;\r\n        var _lastSfxPlay = -1000;\r\n        this._matter.world.on("collisionstart", function (ev) {\r\n            var plyr = _this._racers[0];\r\n            var t = _this._scene.time.now;\r\n            for (var _i = 0, _a = ev.pairs; _i < _a.length; _i++) {\r\n                var p = _a[_i];\r\n                if (p.bodyA == plyr.sprite.body || p.bodyB == plyr.sprite.body) {\r\n                    //if (p.bodyA == floorRect || p.bodyB == floorRect) return;\r\n                    if (t - _lastSfxPlay > 350) {\r\n                        _lastSfxPlay = t;\r\n                        var r = Math.random();\r\n                        if (r < 0.5)\r\n                            SoundManager.playsfx("blip1");\r\n                        else\r\n                            SoundManager.playsfx("blip2");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this._racers[0].isPlayer = true;\r\n        this._racers[1].jumpDelay = 3000;\r\n        this._matter.world.setGravity(0, 0);\r\n        this._rt = this._scene.add.renderTexture(0, 0, 2000, 2000);\r\n        this._rt.setOrigin(0, 0);\r\n        this._rt.angle = 10;\r\n        this.addD(this._rt);\r\n        this.generate();\r\n        var uiBg = this._scene.add.sprite(800, 600, "uibg");\r\n        uiBg.setOrigin(1, 1);\r\n        this.addD(uiBg);\r\n        this._jumpBar = this._scene.add.sprite(800, 600, "jumpbar");\r\n        this._jumpBar.setOrigin(1, 1);\r\n        this._jumpBar.setCrop(0, 126, 800, 600);\r\n        this.addD(this._jumpBar);\r\n        this._fuelBar = this._scene.add.sprite(800, 600, "fuelbar");\r\n        this._fuelBar.setOrigin(1, 1);\r\n        this._fuelBar.setCrop(0, 126, 800, 600);\r\n        this.addD(this._fuelBar);\r\n        this._speedText = this._scene.add.text(780, 560, "00", {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 72,\r\n            color: "#FFFFFF",\r\n            align: "right",\r\n            antialias: false\r\n        });\r\n        this._speedText.setStroke("#000000", 4);\r\n        this._speedText.setOrigin(1, 1);\r\n        this.addD(this._speedText);\r\n        this._raceNumberText = this._scene.add.text(10, 10, "RACE " + (careerService.nRaces + 1).toString(), {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 32,\r\n            color: "#FFFFFF",\r\n            align: "right",\r\n            antialias: false\r\n        });\r\n        this._raceNumberText.setOrigin(0, 0);\r\n        this.addD(this._speedText);\r\n        if (USE_RT) {\r\n            this._tileSprite.setVisible(false);\r\n            this._startingTower.setVisible(false);\r\n            this._startingTowerClose.setVisible(false);\r\n            this._finish.setVisible(false);\r\n            for (var _i = 0, _a = this._racers; _i < _a.length; _i++) {\r\n                var r = _a[_i];\r\n                r.sprite.setVisible(false);\r\n                r.boostSprite.setVisible(false);\r\n                for (var _b = 0, _c = r.itemSprites; _b < _c.length; _b++) {\r\n                    var is = _c[_b];\r\n                    is.setVisible(false);\r\n                }\r\n            }\r\n            for (var _d = 0, _e = this._obstacles; _d < _e.length; _d++) {\r\n                var o = _e[_d];\r\n                o.sprite.setVisible(false);\r\n            }\r\n        }\r\n        else {\r\n            this._scene.cameras.main.startFollow(this._racers[0].sprite);\r\n        }\r\n        var countdown = this.addD(this._scene.add.sprite(400, 300, "321"));\r\n        this._scene.anims.create({\r\n            key: "countdown_anim",\r\n            frames: this._scene.anims.generateFrameNumbers("321", {\r\n                start: 0,\r\n                end: 22,\r\n            }),\r\n            frameRate: 15,\r\n        });\r\n        countdown.alpha = 0;\r\n        setTimeout(function () {\r\n            countdown.alpha = 1;\r\n            countdown.anims.play("countdown_anim");\r\n            SoundManager.playsfx("start");\r\n            setTimeout(function () { SoundManager.playsfx("start"); }, 500);\r\n            setTimeout(function () { SoundManager.playsfx("start"); }, 1000);\r\n            setTimeout(function () { SoundManager.playsfx("start2"); }, 1500);\r\n            setTimeout(function () {\r\n                _this._startingTowerClose.alpha = 0;\r\n                _this._matter.world.setGravity(0.25, 1);\r\n                _this_1._racers[0].sprite.setVelocityX(7);\r\n                _this_1._racers[1].sprite.setVelocityX(5);\r\n                _this_1._racers[2].sprite.setVelocityX(3);\r\n                for (var _i = 0, _a = _this_1._racers; _i < _a.length; _i++) {\r\n                    var r = _a[_i];\r\n                    r.active = true;\r\n                }\r\n            }, 1500);\r\n        }, 1500);\r\n    };\r\n    PlayController.prototype.generate = function () {\r\n        var obstacles = [\r\n            Jump1,\r\n            Platform1,\r\n            Platform2,\r\n            Platform3,\r\n            Spinner,\r\n            Spinner2\r\n        ];\r\n        this._obstacles = [];\r\n        var nObstacles = 7 + Math.floor(careerService.nRaces * 1.25) + Math.floor(Math.random() * 3);\r\n        nObstacles = Math.min(22, nObstacles);\r\n        var offset = 500;\r\n        for (var i = 0; i < nObstacles; i++) {\r\n            var r = Math.random();\r\n            var x = (i * 600) + 200 + offset;\r\n            var c = obstacles[Math.floor(Math.random() * obstacles.length)];\r\n            this._obstacles.push(this.create(c, {\r\n                x: x\r\n            }));\r\n        }\r\n        this._finish = this._scene.add.sprite((nObstacles + 1) * 600 + 200 + offset, 106, "finish");\r\n    };\r\n    PlayController.prototype.finish = function () {\r\n        var _this_1 = this;\r\n        if (this._finished)\r\n            return;\r\n        this._finished = true;\r\n        var _this = this;\r\n        var g = this._scene.add.sprite(400, 300, "finishtxt");\r\n        g.alpha = 0;\r\n        g.setScale(0.5, 0.5);\r\n        g.setOrigin(0.5, 0.5);\r\n        SoundManager.playsfx("cheering");\r\n        this._scene.add.tween({\r\n            targets: g,\r\n            alpha: 1,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            duration: 700,\r\n            ease: \'Power2\'\r\n        });\r\n        setTimeout(function () {\r\n            careerService.nRaces++;\r\n            raceFinishService.placement = _this_1._playerFinish;\r\n            raceFinishService.earnings = (50 + Math.floor(Math.random() * 8) + (careerService.nRaces * 10)) * (4 - _this_1._playerFinish);\r\n            if (careerService.nRaces > 4)\r\n                raceFinishService.earnings += 30;\r\n            if (careerService.nRaces > 8)\r\n                raceFinishService.earnings += 30;\r\n            careerService.money += raceFinishService.earnings;\r\n            g.destroy();\r\n            _this.fadeOut(function () {\r\n                _this._game.switchController(RaceFinishController_RaceFinishController);\r\n            });\r\n        }, 1700);\r\n    };\r\n    PlayController.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    PlayController.prototype.adjDraw = function (spr, x, y) {\r\n        this._rt.draw(spr, x + spr.x, y + spr.y);\r\n    };\r\n    PlayController.prototype.update = function () {\r\n        if (this.destroyed)\r\n            return;\r\n        _super.prototype.update.call(this);\r\n        var ps = this._racers[0];\r\n        this._tileSprite.x = ps.sprite.x - 800;\r\n        this._tileSprite.tilePositionX += ps.sprite.body.velocity.x;\r\n        this._bg1.tilePositionX += ps.sprite.body.velocity.x * 0.2;\r\n        this._bg2.tilePositionX += ps.sprite.body.velocity.x * 0.8;\r\n        this._bg3.tilePositionX += ps.sprite.body.velocity.x * 0.5;\r\n        this._rt.clear();\r\n        var shakeX = 0;\r\n        var shakeY = 0;\r\n        var player = this._racers[0];\r\n        if (player.boosting && player.hasRocket && player.fuel > 0) {\r\n            shakeX = (Math.random() * 8) - 4;\r\n            shakeY = (Math.random() * 8) - 4;\r\n        }\r\n        var x = 300 - ps.sprite.x + shakeX;\r\n        var y = 270 - ps.sprite.y + shakeY;\r\n        var boundAdj = this.adjDraw.bind(this);\r\n        if (USE_RT) {\r\n            this.adjDraw(this._tileSprite, x, y);\r\n            this.adjDraw(this._startingTower, x, y);\r\n            this.adjDraw(this._startingTowerClose, x, y);\r\n            this.adjDraw(this._finish, x, y);\r\n            for (var _i = 0, _a = this._racers; _i < _a.length; _i++) {\r\n                var r = _a[_i];\r\n                r.draw(boundAdj, x, y);\r\n            }\r\n            for (var _b = 0, _c = this._obstacles; _b < _c.length; _b++) {\r\n                var o = _c[_b];\r\n                o.draw(boundAdj, x, y);\r\n            }\r\n        }\r\n        if (this._input.up.isDown) {\r\n            player.jump();\r\n        }\r\n        if (this._input.right.isDown) {\r\n            player.move(1);\r\n        }\r\n        if (this._input.left.isDown) {\r\n            player.move(-1);\r\n        }\r\n        player.boosting = this._input.space.isDown;\r\n        if (player.boosting && player.hasRocket && player.fuel > 0 && this._scene.time.now - this._lastBoost > 400) {\r\n            this._lastBoost = this._scene.time.now;\r\n            SoundManager.playsfx("boost");\r\n        }\r\n        if (!player.boosting) {\r\n            SoundManager.stopSfx("boost");\r\n        }\r\n        this._speedText.text = Math.floor(player.sprite.body.velocity.x * 5).toString();\r\n        for (var _d = 0, _e = this._racers; _d < _e.length; _d++) {\r\n            var r = _e[_d];\r\n            if (r.sprite.x > this._finish.x + 10) {\r\n                if (!r.finishT) {\r\n                    r.finishT = this._scene.time.now;\r\n                    this._finishes++;\r\n                    if (r.isPlayer) {\r\n                        this._playerFinish = this._finishes;\r\n                        this.finish();\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 126\r\n        // 244\r\n        var t = this._scene.time.now;\r\n        var jt = Math.min(1, (t - player.lastJumpAt) / player.jumpDelay);\r\n        this._jumpBar.setCrop(0, 244 - (jt * (244 - 126)), 800, 600);\r\n        var ft = Math.min(1, player.fuel / 100);\r\n        this._fuelBar.setCrop(0, 244 - (ft * (244 - 126)), 800, 600);\r\n    };\r\n    return PlayController;\r\n}(BaseController_BaseController));\r\n\r\n\n// CONCATENATED MODULE: ./src/controllers/StoreController.ts\nvar StoreController_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar StoreController_StoreController = /** @class */ (function (_super) {\r\n    StoreController_extends(StoreController, _super);\r\n    function StoreController() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    StoreController.prototype.init = function () {\r\n        this._storeBg = this._scene.add.sprite(0, 0, "store");\r\n        this._storeBg.setOrigin(0, 0);\r\n        this._moneyText = this._scene.add.text(755, 18, careerService.money.toString(), {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 48,\r\n            color: "#FFFFFF",\r\n            align: "right",\r\n            antialias: false\r\n        });\r\n        this._moneyText.setOrigin(1, 0);\r\n        this.addD(this._moneyText);\r\n        this._exitText = this._scene.add.text(40, 510, "exit", {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 60,\r\n            color: "#FF0000",\r\n            antialias: false\r\n        });\r\n        this._exitText.setStroke("#000000", 4);\r\n        this._exitText.setOrigin(0, 0);\r\n        this.addD(this._exitText);\r\n        this._exitText.setInteractive();\r\n        var _this = this;\r\n        this._exitText.on("pointerdown", function (pointer) {\r\n            SoundManager.playsfx("uiselect");\r\n            _this._preview.destroy();\r\n            _this.fadeOut(function () {\r\n                _this._game.switchController(PlayController_PlayController);\r\n            });\r\n        });\r\n        this._descText = this._scene.add.text(280, 386, "", {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 32,\r\n            color: "#FFFFFF",\r\n            align: "left",\r\n            antialias: false,\r\n            wordWrap: {\r\n                width: 500\r\n            }\r\n        });\r\n        this._descText.setOrigin(0, 0);\r\n        this.addD(this._descText);\r\n        this._priceText = this._scene.add.text(280, 90, "0", {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 40,\r\n            color: "#FFFFFF",\r\n            align: "left",\r\n            antialias: false,\r\n            wordWrap: {\r\n                width: 500\r\n            }\r\n        });\r\n        this._priceText.setOrigin(0, 0);\r\n        this.addD(this._priceText);\r\n        this._items = [];\r\n        var idx = 0;\r\n        var _loop_1 = function (key) {\r\n            var item = (itemService.ITEMS[key]);\r\n            var skip = false;\r\n            if (item.aiOnly || careerService.ownedItems.find(function (i) { return i.name == item.name; }))\r\n                skip = true;\r\n            if (!!item.requirements) {\r\n                var _loop_2 = function (r) {\r\n                    var has = careerService.ownedItems.findIndex(function (i) { return i.id == r; });\r\n                    console.log(r, careerService.ownedItems);\r\n                    console.log(has);\r\n                    if (has < 0) {\r\n                        skip = true;\r\n                    }\r\n                };\r\n                for (var _i = 0, _a = item.requirements; _i < _a.length; _i++) {\r\n                    var r = _a[_i];\r\n                    _loop_2(r);\r\n                }\r\n            }\r\n            if (skip)\r\n                return "continue";\r\n            var storeItem = new StoreController_StoreItem(this_1._scene, item, idx, this_1);\r\n            this_1._items.push(storeItem);\r\n            idx++;\r\n        };\r\n        var this_1 = this;\r\n        for (var key in itemService.ITEMS) {\r\n            _loop_1(key);\r\n        }\r\n        this._preview = new Racer(this._scene, this._input, this._shaderManager, {\r\n            items: careerService.ownedItems\r\n        }, this);\r\n        this._preview.sprite.x = 530;\r\n        this._preview.sprite.y = 220;\r\n        this._preview.sprite.setScale(4, 4);\r\n        this._buyBtn = this._scene.add.sprite(620, 320, "buybtn");\r\n        this._buyBtn.setOrigin(0, 0);\r\n        this._buyBtn.setVisible(false);\r\n        this._buyBtn.setInteractive();\r\n        this._buyBtn.on("pointerdown", function (pointer) {\r\n            _this.buy();\r\n        });\r\n        this._startT = this._scene.time.now;\r\n    };\r\n    StoreController.prototype.buy = function () {\r\n        if (careerService.money >= this._selItem.price) {\r\n            careerService.money -= this._selItem.price;\r\n            careerService.ownedItems.push(this._selItem);\r\n            this.ignoreFade();\r\n            this._game.switchController(StoreController);\r\n            SoundManager.playsfx("chaching");\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    StoreController.prototype.select = function (item) {\r\n        this._selItem = item;\r\n        this._buyBtn.setVisible(true);\r\n        this._descText.text = item.description.split("").map(function (c) { return c == " " ? "   " : c; }).join("");\r\n        this._priceText.text = item.price.toString();\r\n        this._preview.destroy();\r\n        this._preview = new Racer(this._scene, this._input, this._shaderManager, {\r\n            items: careerService.ownedItems.concat([item])\r\n        }, this);\r\n        this._preview.sprite.x = 530;\r\n        this._preview.sprite.y = 220;\r\n        this._preview.sprite.setScale(4, 4);\r\n    };\r\n    StoreController.prototype.deselectAll = function () {\r\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            i.deselect();\r\n        }\r\n    };\r\n    StoreController.prototype.update = function () {\r\n        if (this._fadedOut)\r\n            return;\r\n        if (this._input.space.isDown && this._scene.time.now - this._startT > 1000) {\r\n            var _this_1 = this;\r\n            this._preview.destroy();\r\n            this.fadeOut(function () {\r\n                _this_1._game.switchController(PlayController_PlayController);\r\n            });\r\n            return;\r\n        }\r\n        this._preview.previewUpdate();\r\n    };\r\n    StoreController.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        this._preview.destroy();\r\n        this._storeBg.destroy();\r\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n            var si = _a[_i];\r\n            si.destroy();\r\n        }\r\n    };\r\n    return StoreController;\r\n}(BaseController_BaseController));\r\n\r\nvar StoreController_StoreItem = /** @class */ (function () {\r\n    function StoreItem(scene, item, idx, controller) {\r\n        var _this_1 = this;\r\n        this.item = item;\r\n        this._controller = controller;\r\n        var y = 28 + (idx * 44);\r\n        this._sprite = scene.add.sprite(34, y, "storeitem");\r\n        this._sprite.setOrigin(0, 0);\r\n        this._text = scene.add.text(40, y + 8, item.name, {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 18,\r\n            color: "#FFFFFF",\r\n            align: "left"\r\n        });\r\n        this._sprite.setInteractive();\r\n        var _this = this;\r\n        this._sprite.on("pointerdown", function (pointer) {\r\n            SoundManager.playsfx("uiselect");\r\n            _this._controller.deselectAll();\r\n            _this.select();\r\n            _this._controller.select(_this_1.item);\r\n        });\r\n    }\r\n    StoreItem.prototype.select = function () {\r\n        this._selected = true;\r\n        this._sprite.setTexture("storeitem_s");\r\n    };\r\n    StoreItem.prototype.deselect = function () {\r\n        this._selected = false;\r\n        this._sprite.setTexture("storeitem");\r\n    };\r\n    StoreItem.prototype.destroy = function () {\r\n        this._sprite.destroy();\r\n        this._text.destroy();\r\n    };\r\n    return StoreItem;\r\n}());\r\n\n// CONCATENATED MODULE: ./src/controllers/TitleController.ts\nvar TitleController_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\nvar TitleController_TitleController = /** @class */ (function (_super) {\r\n    TitleController_extends(TitleController, _super);\r\n    function TitleController() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TitleController.prototype.init = function () {\r\n        this._bg = this._scene.add.sprite(0, 0, "title");\r\n        this._bg.setOrigin(0, 0);\r\n        this.addD(this._bg);\r\n    };\r\n    TitleController.prototype.update = function () {\r\n        if (this._input.space.isDown && !this._fadedOut) {\r\n            var _this_1 = this;\r\n            this.fadeOut(function () {\r\n                _this_1._game.switchController(StoreController_StoreController);\r\n            });\r\n        }\r\n    };\r\n    TitleController.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return TitleController;\r\n}(BaseController_BaseController));\r\n\r\n\n// CONCATENATED MODULE: ./src/RockRacingGame.ts\n\r\n\r\n\r\n\r\n\r\nvar RockRacingGame_RockRacingGame = /** @class */ (function () {\r\n    function RockRacingGame() {\r\n        var _this_1 = this;\r\n        var _this = this;\r\n        this._game = new Phaser.Game({\r\n            width: 800,\r\n            height: 600,\r\n            type: Phaser.AUTO,\r\n            render: {\r\n                pixelArt: true\r\n            },\r\n            scene: {\r\n                preload: function () {\r\n                    _this._scene = this;\r\n                    window.scene = this;\r\n                    _this.preload();\r\n                },\r\n                create: function () {\r\n                    SoundManager.init(this);\r\n                    SoundManager.playBgm();\r\n                    _this._matter = this.matter;\r\n                    _this.create();\r\n                },\r\n                update: function () {\r\n                    _this.update();\r\n                }\r\n            },\r\n            physics: {\r\n                default: "matter",\r\n                matter: {\r\n                //debug: true\r\n                }\r\n            },\r\n            callbacks: {\r\n                postBoot: function () {\r\n                    new scaleManager(_this_1._game.canvas, !_this_1._game.device.os.desktop);\r\n                }\r\n            }\r\n        });\r\n        window.game = this._game;\r\n        /*\r\n        document.addEventListener("keydown", ev => {\r\n            if (ev.which === 70)  {\r\n                (<any>_this._game.canvas)[_this._game.device.fullscreen.request]();\r\n            }\r\n        });\r\n        */\r\n    }\r\n    RockRacingGame.prototype.preload = function () {\r\n        var loader = new Loader(this._scene);\r\n        loader.load();\r\n    };\r\n    RockRacingGame.prototype.switchController = function (c) {\r\n        if (!!this._controller) {\r\n            this._controller.destroy();\r\n        }\r\n        this._controller = (new c(null, this._scene, this._shaderManager, this._matter, this));\r\n    };\r\n    RockRacingGame.prototype.create = function () {\r\n        this._shaderManager = new ShaderManager(this._game, this._scene);\r\n        this.switchController(TitleController_TitleController);\r\n    };\r\n    RockRacingGame.prototype.update = function () {\r\n        if (!!this._controller) {\r\n            this._controller.update();\r\n        }\r\n        this._shaderManager.update();\r\n    };\r\n    return RockRacingGame;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/index.ts\n\r\nvar src_g = new RockRacingGame_RockRacingGame();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvTG9hZGVyLnRzPzJlMTgiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NoYWRlcnMvU2hhZGVyTWFuYWdlci50cz83Mzk5Iiwid2VicGFjazovLy8uL3NyYy9zY2FsZU1hbmFnZXIuanM/NjA1YSIsIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9JbnB1dE1hbmFnZXIudHM/OWQ2NyIsIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9FZmZlY3RIZWxwZXIudHM/ZDEzYSIsIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlcnMvQmFzZUNvbnRyb2xsZXIudHM/ZWYwNCIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmljZXMvY2FyZWVyU2VydmljZS50cz8yNzJmIiwid2VicGFjazovLy8uL3NyYy9zZXJ2aWNlcy9pdGVtc1NlcnZpY2UudHM/ZWQzZSIsIndlYnBhY2s6Ly8vLi9zcmMvZW50aXRpZXMvQmFzZUVudGl0eS50cz8xYTA4Iiwid2VicGFjazovLy8uL3NyYy9lbnRpdGllcy9SYWNlci50cz9mM2Y1Iiwid2VicGFjazovLy8uL3NyYy9lbnRpdGllcy9KdW1wMS50cz9jYjA1Iiwid2VicGFjazovLy8uL3NyYy9lbnRpdGllcy9QbGF0Zm9ybTEudHM/YzZmOCIsIndlYnBhY2s6Ly8vLi9zcmMvZW50aXRpZXMvUGxhdGZvcm0yLnRzPzlkMWIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2VudGl0aWVzL1NwaW5uZXIudHM/ZmY3YyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmljZXMvb3Bwb25lbnRTZXJ2aWNlLnRzPzQ5MDQiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZpY2VzL3JhY2VGaW5pc2hTZXJ2aWNlLnRzP2Y2NGYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRyb2xsZXJzL1JhY2VGaW5pc2hDb250cm9sbGVyLnRzP2Y1MjAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2VudGl0aWVzL1BsYXRmb3JtMy50cz8xM2E5Iiwid2VicGFjazovLy8uL3NyYy9lbnRpdGllcy9TcGlubmVyMi50cz9lNTMxIiwid2VicGFjazovLy8uL3NyYy9oZWxwZXJzL1NvdW5kTWFuYWdlci50cz81NGM2Iiwid2VicGFjazovLy8uL3NyYy9jb250cm9sbGVycy9QbGF5Q29udHJvbGxlci50cz83YjViIiwid2VicGFjazovLy8uL3NyYy9jb250cm9sbGVycy9TdG9yZUNvbnRyb2xsZXIudHM/MjkwZSIsIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlcnMvVGl0bGVDb250cm9sbGVyLnRzPzY5NjQiLCJ3ZWJwYWNrOi8vLy4vc3JjL1JvY2tSYWNpbmdHYW1lLnRzPzllNDYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LnRzP2ZmYjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7SUFDSSxnQkFBb0IsTUFBb0I7UUFBcEIsV0FBTSxHQUFOLE1BQU0sQ0FBYztJQUN4QyxDQUFDO0lBRUQscUJBQUksR0FBSjtRQUNJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLHNCQUFzQixDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztRQUN2RCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLHVCQUF1QixDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVB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UUFDN0UsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRS9FLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN2RSxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkUsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUV2RSxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkYsQ0FBQztJQUVELHNCQUFXLCtCQUFLO2FBQWhCO1lBQ0ksSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU07Z0JBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztpQkFDMUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENB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QUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFHcEMsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUVwQixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFaEIsSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDckIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVoQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLFNBQVMsQ0FBQztRQUMzRCxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFekIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFN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LEVBQUUsQ0FBQztTQUM5QjtRQUNELElBQUksQ0FBQyxXQUFXLEdBQW1CLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDM0csQ0FBQztJQUVELCtCQUFNLEdBQU47UUFDSSxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2pFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQywrQkFBZSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELCtCQUFNLEdBQU47UUFDSSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUM7U0FDN0I7UUFDRCxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFDTCxxQkFBQztBQUFELENBQUM7Ozs7QUMxRitDO0FBRWhELElBQU0sS0FBQyxHQUFHLElBQUksNkJBQWMsRUFBRSxDQUFDIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgTG9hZGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX3NjZW5lOiBQaGFzZXIuU2NlbmUpIHtcclxuICAgIH1cclxuICAgIFxyXG4gICAgbG9hZCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmpzb24oXCJzaGFwZXNcIiwgXCIvYXNzZXRzL3BoeXNpY3MuanNvblwiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwidGVycmFpbjFcIiwgXCIvYXNzZXRzL3RlcnJhaW4xLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwidWliZ1wiLCBcIi9hc3NldHMvdWliZy5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcImZpbmlzaFwiLCBcIi9hc3NldHMvZmluaXNoLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwiZmluaXNodHh0XCIsIFwiL2Fzc2V0cy9maW5pc2h0eHQucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJzdG9yZVwiLCBcIi9hc3NldHMvc3RvcmUucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJiZzFcIiwgXCIvYXNzZXRzL2JnMS5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcImJnMlwiLCBcIi9hc3NldHMvYmcyLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwiYmczXCIsIFwiL2Fzc2V0cy9iZzMucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJyb2NrMVwiLCBcIi9hc3NldHMvcm9jazEucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJyb2NrMlwiLCBcIi9hc3NldHMvcm9jazIucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJyb2NrM1wiLCBcIi9hc3NldHMvcm9jazMucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJyb2NrNFwiLCBcIi9hc3NldHMvcm9jazQucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJyb2NrNVwiLCBcIi9hc3NldHMvcm9jazUucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJzdGFydGluZ1wiLCBcIi9hc3NldHMvc3RhcnRpbmcucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJzdGFydGluZ19jbG9zZVwiLCBcIi9hc3NldHMvc3RhcnRpbmdfY2xvc2UucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJqdW1wMVwiLCBcIi9hc3NldHMvanVtcDEucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJwbGF0Zm9ybTFcIiwgXCIvYXNzZXRzL3BsYXRmb3JtMS5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcInBsYXRmb3JtMlwiLCBcIi9hc3NldHMvcGxhdGZvcm0yLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwicGxhdGZvcm0zXCIsIFwiL2Fzc2V0cy9wbGF0Zm9ybTMucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJzdG9yZWl0ZW1cIiwgXCIvYXNzZXRzL3N0b3JlaXRlbS5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcInN0b3JlaXRlbV9zXCIsIFwiL2Fzc2V0cy9zdG9yZWl0ZW1fcy5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcImp1bXBtb2QxXCIsIFwiL2Fzc2V0cy9qdW1wbW9kMS5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcImp1bXBtb2QyXCIsIFwiL2Fzc2V0cy9qdW1wbW9kMi5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcInRhbmsxXCIsIFwiL2Fzc2V0cy90YW5rMS5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcInRhbmsyXCIsIFwiL2Fzc2V0cy90YW5rMi5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcInRhbmszXCIsIFwiL2Fzc2V0cy90YW5rMy5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcInRhbms0XCIsIFwiL2Fzc2V0cy90YW5rNC5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcImJ1bXBlcnMxXCIsIFwiL2Fzc2V0cy9idW1wZXJzMS5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcImJ1eWJ0blwiLCBcIi9hc3NldHMvYnV5YnRuLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwianVtcGJhclwiLCBcIi9hc3NldHMvanVtcGJhci5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcImZ1ZWxiYXJcIiwgXCIvYXNzZXRzL2Z1ZWxiYXIucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJyb2NrZXQxXCIsIFwiL2Fzc2V0cy9yb2NrZXQxLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwicm9ja2V0MlwiLCBcIi9hc3NldHMvcm9ja2V0Mi5wbmdcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5pbWFnZShcInJvY2tldDNcIiwgXCIvYXNzZXRzL3JvY2tldDMucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuaW1hZ2UoXCJzcGlubmVyXCIsIFwiL2Fzc2V0cy9zcGlubmVyLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwiZmluaXNoYmdcIiwgXCIvYXNzZXRzL2ZpbmlzaGJnLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwiZmluaXNoZmdcIiwgXCIvYXNzZXRzL2ZpbmlzaGZnLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwic3BsYXNoYmdcIiwgXCIvYXNzZXRzL3NwbGFzaGJnLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwic3BsYXNoZmdcIiwgXCIvYXNzZXRzL3NwbGFzaGZnLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwidGl0bGVcIiwgXCIvYXNzZXRzL3RpdGxlLnBuZ1wiKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLnNwcml0ZXNoZWV0KFwiYm9vc3QxXCIsIFwiL2Fzc2V0cy9ib29zdC5wbmdcIiwge1xyXG4gICAgICAgICAgICBmcmFtZVdpZHRoOiAxMDAsXHJcbiAgICAgICAgICAgIGZyYW1lSGVpZ2h0OiAxMDAsXHJcbiAgICAgICAgICAgIGVuZEZyYW1lOiAzMFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuc3ByaXRlc2hlZXQoXCIzMjFcIiwgXCIvYXNzZXRzLzMyMS5wbmdcIiwge1xyXG4gICAgICAgICAgICBmcmFtZVdpZHRoOiAxODEsXHJcbiAgICAgICAgICAgIGZyYW1lSGVpZ2h0OiAxODEsXHJcbiAgICAgICAgICAgIGVuZEZyYW1lOiAyMlxyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5hdWRpbyhcImJnbVwiLCBbXHJcbiAgICAgICAgICAgIFwiL2Fzc2V0cy9zb3VuZHMvYmdtLm1wM1wiLFxyXG4gICAgICAgIF0pO1xyXG5cclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmF1ZGlvKFwiY2hhY2hpbmdcIiwgW1xyXG4gICAgICAgICAgICBcIi9hc3NldHMvc291bmRzL2NoYWNoaW5nLm1wM1wiLFxyXG4gICAgICAgIF0pO1xyXG5cclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmF1ZGlvKFwic3RhcnQxXCIsIFtcclxuICAgICAgICAgICAgXCIvYXNzZXRzL3NvdW5kcy9zdGFydDEubXAzXCIsXHJcbiAgICAgICAgXSk7XHJcblxyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuYXVkaW8oXCJzdGFydDJcIiwgW1xyXG4gICAgICAgICAgICBcIi9hc3NldHMvc291bmRzL3N0YXJ0Mi5tcDNcIixcclxuICAgICAgICBdKTtcclxuXHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5hdWRpbyhcImJsaXAxXCIsIFtcclxuICAgICAgICAgICAgXCIvYXNzZXRzL3NvdW5kcy9ibGlwMS53YXZcIixcclxuICAgICAgICBdKTtcclxuXHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5hdWRpbyhcImJsaXAyXCIsIFtcclxuICAgICAgICAgICAgXCIvYXNzZXRzL3NvdW5kcy9ibGlwMi53YXZcIixcclxuICAgICAgICBdKTtcclxuXHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5hdWRpbyhcInVpc2VsZWN0XCIsIFtcclxuICAgICAgICAgICAgXCIvYXNzZXRzL3NvdW5kcy91aXNlbGVjdC53YXZcIixcclxuICAgICAgICBdKTtcclxuXHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5hdWRpbyhcImNoZWVyaW5nXCIsIFtcclxuICAgICAgICAgICAgXCIvYXNzZXRzL3NvdW5kcy9jaGVlcmluZy5tcDNcIixcclxuICAgICAgICBdKTtcclxuXHJcbiAgICAgICAgdGhpcy5fc2NlbmUubG9hZC5hdWRpbyhcImJvb3N0c2Z4XCIsIFtcclxuICAgICAgICAgICAgXCIvYXNzZXRzL3NvdW5kcy9ib29zdC5tcDNcIixcclxuICAgICAgICBdKTtcclxuXHJcbiAgICAgICAgLypcclxuICAgICAgICB0aGlzLl9zY2VuZS5sb2FkLmltYWdlKFwidGlsZXNcIiwgXCIvYXNzZXRzL3RpbGVtYXAucG5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmxvYWQuc3ByaXRlc2hlZXQoXCJ3YXRlclwiLCBcIi9hc3NldHMvd2F0ZXIucG5nXCIsIHtcclxuICAgICAgICAgICAgZnJhbWVXaWR0aDogNDAsXHJcbiAgICAgICAgICAgIGZyYW1lSGVpZ2h0OiA0MCxcclxuICAgICAgICAgICAgZW5kRnJhbWU6IDZcclxuICAgICAgICB9KTtcclxuICAgICAgICAqL1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFdlYkdMUmVuZGVyZXIgPSBQaGFzZXIuUmVuZGVyZXIuV2ViR0wuV2ViR0xSZW5kZXJlcjtcclxuaW1wb3J0IFdlYkdMUGlwZWxpbmUgPSBQaGFzZXIuUmVuZGVyZXIuV2ViR0wuV2ViR0xQaXBlbGluZTtcclxuXHJcbmV4cG9ydCBjbGFzcyBTaGFkZXJNYW5hZ2VyIHtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2dhbWU6IFBoYXNlci5HYW1lLFxyXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSBfc2NlbmU6IFBoYXNlci5TY2VuZSkge1xyXG4gICAgICAgIGNvbnN0IHIgPSA8V2ViR0xSZW5kZXJlcj50aGlzLl9nYW1lLnJlbmRlcmVyO1xyXG4gICAgICAgIC8qXHJcbiAgICAgICAgdGhpcy5zbmFrZSA9IHIuYWRkUGlwZWxpbmUoXCJTbmFrZVwiLCBuZXcgU25ha2VQaXBlbGluZSh0aGlzLl9nYW1lKSk7XHJcbiAgICAgICAgdGhpcy5zbmFrZS5zZXRGbG9hdDIoXCJ1UmVzb2x1dGlvblwiLCA8bnVtYmVyPnRoaXMuX2dhbWUuY29uZmlnLndpZHRoLCA8bnVtYmVyPnRoaXMuX2dhbWUuY29uZmlnLmhlaWdodCk7XHJcbiAgICAgICAgKi9cclxuICAgIH1cclxuICAgIFxyXG4gICAgdXBkYXRlKCkge1xyXG4gICAgfVxyXG59IiwiY2xhc3MgU2NhbGVNYW5hZ2VyIHtcclxuICAgIGNvbnN0cnVjdG9yKGNhbnZhcywgaXNNb2JpbGUpIHtcclxuICAgICAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgICAgICB0aGlzLm1vYmlsZSA9IGlzTW9iaWxlO1xyXG5cclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnJlc2l6ZSh0aGlzLmNhbnZhcyk7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5tb2JpbGUpIHtcclxuICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA8IHdpbmRvdy5pbm5lckhlaWdodCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubGVhdmVJbmNvcnJlY3RPcmllbnRhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVudGVySW5jb3JyZWN0T3JpZW50YXRpb24oKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnJlc2l6ZSh0aGlzLmNhbnZhcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVzaXplKGNhbnZhcykge1xyXG4gICAgICAgIGxldCBzY2FsZSA9IE1hdGgubWluKHdpbmRvdy5pbm5lcldpZHRoIC8gY2FudmFzLndpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQgLyBjYW52YXMuaGVpZ2h0KTtcclxuICAgICAgICBsZXQgb3JpZW50YXRpb24gPSAnbGVmdCc7XHJcbiAgICAgICAgbGV0IGV4dHJhID0gKHRoaXMubW9iaWxlKSA/ICdtYXJnaW4tbGVmdDogLTUwJSc6ICcnO1xyXG4gICAgICAgIGxldCBtYXJnaW4gPSB3aW5kb3cuaW5uZXJXaWR0aCAvIDIgLSAoY2FudmFzLndpZHRoIC8gMikgKiBzY2FsZTtcclxuXHJcbiAgICAgICAgY2FudmFzLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAnLW1zLXRyYW5zZm9ybS1vcmlnaW46ICcgKyBvcmllbnRhdGlvbiArICcgdG9wOyAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46ICcgKyBvcmllbnRhdGlvbiArICcgdG9wOycgK1xyXG4gICAgICAgICAgICAnIC1tb3otdHJhbnNmb3JtLW9yaWdpbjogJyArIG9yaWVudGF0aW9uICsgJyB0b3A7IC1vLXRyYW5zZm9ybS1vcmlnaW46ICcgKyBvcmllbnRhdGlvbiArICcgdG9wOyB0cmFuc2Zvcm0tb3JpZ2luOiAnICsgb3JpZW50YXRpb24gKyAnIHRvcDsnICtcclxuICAgICAgICAgICAgJyAtbXMtdHJhbnNmb3JtOiBzY2FsZSgnICsgc2NhbGUgKyAnKTsgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoJyArIHNjYWxlICsgJywgMSk7JyArXHJcbiAgICAgICAgICAgICcgLW1vei10cmFuc2Zvcm06IHNjYWxlKCcgKyBzY2FsZSArICcpOyAtby10cmFuc2Zvcm06IHNjYWxlKCcgKyBzY2FsZSArICcpOyB0cmFuc2Zvcm06IHNjYWxlKCcgKyBzY2FsZSArICcpOycgK1xyXG4gICAgICAgICAgICAnIGRpc3BsYXk6IGJsb2NrOyBtYXJnaW4tbGVmdDogJyArIG1hcmdpbiArICdweDsnXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBlbnRlckluY29ycmVjdE9yaWVudGF0aW9uKCkge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwib3JpZW50YXRpb25cIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbnRlbnRcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgfVxyXG5cclxuICAgIGxlYXZlSW5jb3JyZWN0T3JpZW50YXRpb24oKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJvcmllbnRhdGlvblwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50XCIpLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgU2NhbGVNYW5hZ2VyOyIsImV4cG9ydCBjbGFzcyBJbnB1dE1hbmFnZXIge1xyXG4gICAgcHVibGljIHVwOiBQaGFzZXIuSW5wdXQuS2V5Ym9hcmQuS2V5O1xyXG4gICAgcHVibGljIGRvd246IFBoYXNlci5JbnB1dC5LZXlib2FyZC5LZXk7XHJcbiAgICBwdWJsaWMgbGVmdDogUGhhc2VyLklucHV0LktleWJvYXJkLktleTtcclxuICAgIHB1YmxpYyByaWdodDogUGhhc2VyLklucHV0LktleWJvYXJkLktleTtcclxuXHJcbiAgICBwdWJsaWMgdzogUGhhc2VyLklucHV0LktleWJvYXJkLktleTtcclxuICAgIHB1YmxpYyBhOiBQaGFzZXIuSW5wdXQuS2V5Ym9hcmQuS2V5O1xyXG4gICAgcHVibGljIHM6IFBoYXNlci5JbnB1dC5LZXlib2FyZC5LZXk7XHJcbiAgICBwdWJsaWMgZDogUGhhc2VyLklucHV0LktleWJvYXJkLktleTtcclxuXHJcbiAgICBwdWJsaWMgc3BhY2U6IFBoYXNlci5JbnB1dC5LZXlib2FyZC5LZXk7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKHNjZW5lOiBQaGFzZXIuU2NlbmUpIHtcclxuICAgICAgICB0aGlzLnVwID0gc2NlbmUuaW5wdXQua2V5Ym9hcmQuYWRkS2V5KFBoYXNlci5JbnB1dC5LZXlib2FyZC5LZXlDb2Rlcy5VUCk7XHJcbiAgICAgICAgdGhpcy5kb3duID0gc2NlbmUuaW5wdXQua2V5Ym9hcmQuYWRkS2V5KFBoYXNlci5JbnB1dC5LZXlib2FyZC5LZXlDb2Rlcy5ET1dOKTtcclxuICAgICAgICB0aGlzLmxlZnQgPSBzY2VuZS5pbnB1dC5rZXlib2FyZC5hZGRLZXkoUGhhc2VyLklucHV0LktleWJvYXJkLktleUNvZGVzLkxFRlQpO1xyXG4gICAgICAgIHRoaXMucmlnaHQgPSBzY2VuZS5pbnB1dC5rZXlib2FyZC5hZGRLZXkoUGhhc2VyLklucHV0LktleWJvYXJkLktleUNvZGVzLlJJR0hUKTtcclxuXHJcbiAgICAgICAgdGhpcy53ID0gc2NlbmUuaW5wdXQua2V5Ym9hcmQuYWRkS2V5KFBoYXNlci5JbnB1dC5LZXlib2FyZC5LZXlDb2Rlcy5XKTtcclxuICAgICAgICB0aGlzLmEgPSBzY2VuZS5pbnB1dC5rZXlib2FyZC5hZGRLZXkoUGhhc2VyLklucHV0LktleWJvYXJkLktleUNvZGVzLkEpO1xyXG4gICAgICAgIHRoaXMucyA9IHNjZW5lLmlucHV0LmtleWJvYXJkLmFkZEtleShQaGFzZXIuSW5wdXQuS2V5Ym9hcmQuS2V5Q29kZXMuUyk7XHJcbiAgICAgICAgdGhpcy5kID0gc2NlbmUuaW5wdXQua2V5Ym9hcmQuYWRkS2V5KFBoYXNlci5JbnB1dC5LZXlib2FyZC5LZXlDb2Rlcy5EKTtcclxuXHJcbiAgICAgICAgdGhpcy5zcGFjZSA9IHNjZW5lLmlucHV0LmtleWJvYXJkLmFkZEtleShQaGFzZXIuSW5wdXQuS2V5Ym9hcmQuS2V5Q29kZXMuU1BBQ0UpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgYXhpc1koKTogbnVtYmVyIHtcclxuICAgICAgICBpZiAodGhpcy51cC5pc0Rvd24gfHwgdGhpcy53LmlzRG93bikgcmV0dXJuIC0xO1xyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuZG93bi5pc0Rvd24gfHwgdGhpcy5zLmlzRG93bikgcmV0dXJuIDE7XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBheGlzWCgpOiBudW1iZXIge1xyXG4gICAgICAgIGlmICh0aGlzLmxlZnQuaXNEb3duIHx8IHRoaXMuYS5pc0Rvd24pIHJldHVybiAtMTtcclxuICAgICAgICBlbHNlIGlmICh0aGlzLnJpZ2h0LmlzRG93biB8fCB0aGlzLmQuaXNEb3duKSByZXR1cm4gMTtcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxufSIsImV4cG9ydCBjbGFzcyBFZmZlY3RIZWxwZXIge1xyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBfc2NlbmU6IFBoYXNlci5TY2VuZSkge1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHtCYXNlRW50aXR5LCBJRW50aXR5UGFyYW1ldGVyc30gZnJvbSBcIi4uL2VudGl0aWVzL0Jhc2VFbnRpdHlcIjtcclxuaW1wb3J0IHtJbnB1dE1hbmFnZXJ9IGZyb20gXCIuLi9oZWxwZXJzL0lucHV0TWFuYWdlclwiO1xyXG5pbXBvcnQge1NoYWRlck1hbmFnZXJ9IGZyb20gXCIuLi9zaGFkZXJzL1NoYWRlck1hbmFnZXJcIjtcclxuaW1wb3J0IHsgRWZmZWN0SGVscGVyIH0gZnJvbSBcIi4uL2hlbHBlcnMvRWZmZWN0SGVscGVyXCI7XHJcbmltcG9ydCB7IFJvY2tSYWNpbmdHYW1lIH0gZnJvbSBcIi4uL1JvY2tSYWNpbmdHYW1lXCI7XHJcblxyXG5sZXQgaWdub3JlRmFkZSA9IGZhbHNlO1xyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQmFzZUNvbnRyb2xsZXIge1xyXG4gICAgcHJpdmF0ZSBfZW50aXRpZXM6IEJhc2VFbnRpdHlbXSA9IFtdO1xyXG4gICAgcHJvdGVjdGVkIF9kZXN0cm95YWJsZXM6IGFueVtdID0gW107XHJcbiAgICBwcm90ZWN0ZWQgX2lucHV0OiBJbnB1dE1hbmFnZXI7XHJcbiAgICBwdWJsaWMgZWZmZWN0czogRWZmZWN0SGVscGVyO1xyXG4gICAgcHVibGljIGRlc3Ryb3llZDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcHJvdGVjdGVkIF9mYWRlZE91dDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIHByaXZhdGUgX3NwbGFzaEJnOiBQaGFzZXIuR2FtZU9iamVjdHMuU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBfc3BsYXNoRmc6IFBoYXNlci5HYW1lT2JqZWN0cy5TcHJpdGU7XHJcbiAgICBwcml2YXRlIGJvb3N0U3ByaXRlOiBQaGFzZXIuR2FtZU9iamVjdHMuU3ByaXRlO1xyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgX2FyZ3M6IENvbnRyb2xsZXJBcmdzLFxyXG4gICAgICAgICAgICAgICAgcHJvdGVjdGVkIF9zY2VuZTogUGhhc2VyLlNjZW5lLFxyXG4gICAgICAgICAgICAgICAgcHJvdGVjdGVkIF9zaGFkZXJNYW5hZ2VyOiBTaGFkZXJNYW5hZ2VyLFxyXG4gICAgICAgICAgICAgICAgcHJvdGVjdGVkIF9tYXR0ZXI6IFBoYXNlci5QaHlzaWNzLk1hdHRlci5NYXR0ZXJQaHlzaWNzLFxyXG4gICAgICAgICAgICAgICAgcHJvdGVjdGVkIF9nYW1lOiBSb2NrUmFjaW5nR2FtZSkge1xyXG4gICAgICAgIHRoaXMuX2lucHV0ID0gbmV3IElucHV0TWFuYWdlcih0aGlzLl9zY2VuZSk7XHJcbiAgICAgICAgdGhpcy5lZmZlY3RzID0gbmV3IEVmZmVjdEhlbHBlcih0aGlzLl9zY2VuZSk7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcblxyXG4gICAgICAgIHRoaXMuX3NwbGFzaEJnID0gdGhpcy5fc2NlbmUuYWRkLnNwcml0ZSgwLCAwLCBcInNwbGFzaGJnXCIpO1xyXG4gICAgICAgIHRoaXMuX3NwbGFzaEJnLnNldE9yaWdpbigwLCAwKTtcclxuICAgICAgICB0aGlzLl9zcGxhc2hGZyA9IHRoaXMuX3NjZW5lLmFkZC5zcHJpdGUoNDQwLCAyMDAsIFwicm9ja2V0MVwiKTtcclxuICAgICAgICB0aGlzLl9zcGxhc2hGZy5zZXRPcmlnaW4oMC41LCAwLjUpO1xyXG4gICAgICAgIHRoaXMuX3NwbGFzaEZnLnNldFNjYWxlKDgsIDgpO1xyXG5cclxuICAgICAgICB0aGlzLmJvb3N0U3ByaXRlID0gdGhpcy5fc2NlbmUuYWRkLnNwcml0ZSgyNTYsIDMwMCwgXCJib29zdDFcIik7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUuYW5pbXMuY3JlYXRlKHtcclxuICAgICAgICAgICAga2V5OiBcImJvb3N0X2FuaW1cIixcclxuICAgICAgICAgICAgZnJhbWVzOiB0aGlzLl9zY2VuZS5hbmltcy5nZW5lcmF0ZUZyYW1lTnVtYmVycyhcImJvb3N0MVwiLCB7XHJcbiAgICAgICAgICAgICAgICBzdGFydDogMCxcclxuICAgICAgICAgICAgICAgIGVuZDogMzAsXHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICBmcmFtZVJhdGU6IDYwLFxyXG4gICAgICAgICAgICByZXBlYXQ6IC0xXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5ib29zdFNwcml0ZS5zZXRPcmlnaW4oMC41LCAwLjUpO1xyXG4gICAgICAgIHRoaXMuYm9vc3RTcHJpdGUuYW5pbXMucGxheShcImJvb3N0X2FuaW1cIik7XHJcbiAgICAgICAgdGhpcy5ib29zdFNwcml0ZS5zZXRTY2FsZSgxMiwgMTIpO1xyXG5cclxuICAgICAgICB0aGlzLmJvb3N0U3ByaXRlLmFscGhhID0gMDtcclxuICAgICAgICB0aGlzLl9zcGxhc2hGZy5hbHBoYSA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLmJvb3N0U3ByaXRlKTtcclxuICAgICAgICB0aGlzLmFkZEQodGhpcy5fc3BsYXNoQmcpO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl9zcGxhc2hGZyk7XHJcblxyXG4gICAgICAgIGlmIChpZ25vcmVGYWRlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NwbGFzaEJnLnkgPSAtMTAwMDtcclxuICAgICAgICAgICAgdGhpcy5fc3BsYXNoRmcueSA9IC0xMDAwO1xyXG4gICAgICAgICAgICB0aGlzLmJvb3N0U3ByaXRlLnkgPSAtMTAwMDtcclxuICAgICAgICAgICAgaWdub3JlRmFkZSA9IGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NjZW5lLmFkZC50d2Vlbih7XHJcbiAgICAgICAgICAgICAgICB0YXJnZXRzOiB0aGlzLl9zcGxhc2hCZyxcclxuICAgICAgICAgICAgICAgIHk6IDEwMDAsXHJcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMCxcclxuICAgICAgICAgICAgICAgIGVhc2U6ICdQb3dlcjInXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fc2NlbmUuYWRkLnR3ZWVuKHtcclxuICAgICAgICAgICAgICAgIHRhcmdldHM6IHRoaXMuX3NwbGFzaEZnLFxyXG4gICAgICAgICAgICAgICAgeTogMTAwMCxcclxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAsXHJcbiAgICAgICAgICAgICAgICBlYXNlOiAnUG93ZXIyJ1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuX3NjZW5lLmFkZC50d2Vlbih7XHJcbiAgICAgICAgICAgICAgICB0YXJnZXRzOiB0aGlzLmJvb3N0U3ByaXRlLFxyXG4gICAgICAgICAgICAgICAgeTogMTAwMCxcclxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAsXHJcbiAgICAgICAgICAgICAgICBlYXNlOiAnUG93ZXIyJ1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWdub3JlRmFkZSgpIHtcclxuICAgICAgICBpZ25vcmVGYWRlID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBmYWRlT3V0KGNiOiBhbnkpIHtcclxuICAgICAgICBpZiAodGhpcy5fZmFkZWRPdXQpIHJldHVybjtcclxuICAgICAgICB0aGlzLl9mYWRlZE91dCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5fc2NlbmUuYWRkLnR3ZWVuKHtcclxuICAgICAgICAgICAgdGFyZ2V0czogdGhpcy5fc3BsYXNoQmcsXHJcbiAgICAgICAgICAgIHk6IDAsXHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAsXHJcbiAgICAgICAgICAgIGVhc2U6ICdQb3dlcjInXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuX3NjZW5lLmFkZC50d2Vlbih7XHJcbiAgICAgICAgICAgIHRhcmdldHM6IHRoaXMuX3NwbGFzaEZnLFxyXG4gICAgICAgICAgICB5OiAyMDAsXHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwLFxyXG4gICAgICAgICAgICBlYXNlOiAnUG93ZXIyJ1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLl9zY2VuZS5hZGQudHdlZW4oe1xyXG4gICAgICAgICAgICB0YXJnZXRzOiB0aGlzLmJvb3N0U3ByaXRlLFxyXG4gICAgICAgICAgICB5OiAzMDAsXHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwLFxyXG4gICAgICAgICAgICBlYXNlOiAnUG93ZXIyJ1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBzZXRUaW1lb3V0KGNiLCA1MDApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBhYnN0cmFjdCBpbml0KCk6IHZvaWQ7XHJcbiAgICBcclxuICAgIHByb3RlY3RlZCBjcmVhdGU8VCBleHRlbmRzIEJhc2VFbnRpdHk+KHR5cDogYW55LCBwYXJhbXM/OiBJRW50aXR5UGFyYW1ldGVycyk6IFQge1xyXG4gICAgICAgIGNvbnN0IGU6IEJhc2VFbnRpdHkgPSA8QmFzZUVudGl0eT4obmV3IHR5cCh0aGlzLl9zY2VuZSwgdGhpcy5faW5wdXQsIHRoaXMuX3NoYWRlck1hbmFnZXIsIHBhcmFtcywgdGhpcykpO1xyXG4gICAgICAgIHJldHVybiA8VD50aGlzLmFkZChlKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcHJvdGVjdGVkIGFkZChlOiBCYXNlRW50aXR5KTogQmFzZUVudGl0eSB7XHJcbiAgICAgICAgdGhpcy5fZW50aXRpZXMucHVzaChlKTtcclxuICAgICAgICByZXR1cm4gZTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgYWRkRChlOiBhbnkpOiBhbnkge1xyXG4gICAgICAgIHRoaXMuX2Rlc3Ryb3lhYmxlcy5wdXNoKGUpO1xyXG4gICAgICAgIHJldHVybiBlO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGxldCBlIG9mIHRoaXMuX2VudGl0aWVzKSAge1xyXG4gICAgICAgICAgICBlLnVwZGF0ZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgZGVzdHJveSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5kZXN0cm95ZWQpIHJldHVybjtcclxuICAgICAgICB0aGlzLmRlc3Ryb3llZCA9IHRydWU7XHJcblxyXG4gICAgICAgIGZvciAobGV0IGUgb2YgdGhpcy5fZW50aXRpZXMpICB7XHJcbiAgICAgICAgICAgIGUuZGVzdHJveSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IgKGxldCBlIG9mIHRoaXMuX2Rlc3Ryb3lhYmxlcykgIHtcclxuICAgICAgICAgICAgZS5kZXN0cm95KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDb250cm9sbGVyQXJncyB7XHJcbn0iLCJleHBvcnQgZGVmYXVsdCB7XHJcbiAgICBtb25leTogMTAwMCxcclxuICAgIG5SYWNlczogMCxcclxuICAgIG93bmVkSXRlbXM6IFtcclxuICAgIF1cclxufTsiLCJpbnRlcmZhY2UgSUl0ZW1FZmZlY3Qge1xyXG4gICAgd2VpZ2h0PzogbnVtYmVyO1xyXG4gICAgYWlyRnJpY3Rpb24/OiBudW1iZXI7XHJcbiAgICBzcGVlZD86IG51bWJlcjtcclxuICAgIGJvdW5jZT86IG51bWJlcjtcclxuICAgIGZ1ZWw/OiBudW1iZXI7XHJcbiAgICByb2NrZXQ/OiBudW1iZXI7XHJcbiAgICBqdW1wRGVsYXk/OiBudW1iZXI7XHJcbn1cclxuXHJcbmludGVyZmFjZSBJSXRlbU9mZnNldCB7IHg/OiBudW1iZXI7IHk/OiBudW1iZXI7IH1cclxuXHJcbmludGVyZmFjZSBJSXRlbSB7XHJcbiAgICBpZD86IHN0cmluZztcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgICBwcmljZTogbnVtYmVyO1xyXG4gICAgc3ByaXRlS2V5Pzogc3RyaW5nO1xyXG4gICAgZWZmZWN0OiBJSXRlbUVmZmVjdDtcclxuICAgIHByaW9yaXR5OiBudW1iZXI7XHJcbiAgICByZXBsYWNlc0Jhc2VTcHJpdGU/OiBib29sZWFuO1xyXG4gICAgaWdub3JlUm90YXRpb24/OiBib29sZWFuO1xyXG4gICAgb2Zmc2V0PzogSUl0ZW1PZmZzZXQ7XHJcbiAgICBvcmlnaW4/OiBJSXRlbU9mZnNldDtcclxuICAgIGFpT25seT86IGJvb2xlYW47XHJcbiAgICByZXF1aXJlbWVudHM/OiBzdHJpbmdbXTtcclxuICAgIGNhdGVnb3J5Pzogc3RyaW5nO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgSUl0ZW1TZXJ2aWNlIHtcclxuICAgIElURU1TOiB7IFtrZXk6IHN0cmluZ106IElJdGVtIH07XHJcbn1cclxuXHJcbmNvbnN0IGl0ZW1TZXJ2aWNlID0ge1xyXG4gICAgSVRFTVM6IDx7IFtrZXk6IHN0cmluZ106IElJdGVtIH0+e1xyXG4gICAgICAgIEFJX0hBTkRJQ0FQMTogPElJdGVtPntcclxuICAgICAgICAgICAgaWQ6IFwiYWkxXCIsXHJcbiAgICAgICAgICAgIG5hbWU6IFwieFwiLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJ4XCIsXHJcbiAgICAgICAgICAgIHByaWNlOiA1MCxcclxuICAgICAgICAgICAgZWZmZWN0OiB7IHNwZWVkOiAwLjIgfSxcclxuICAgICAgICAgICAgcHJpb3JpdHk6IDAsXHJcbiAgICAgICAgICAgIGFpT25seTogdHJ1ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgV1IxOiA8SUl0ZW0+IHtcclxuICAgICAgICAgICAgaWQ6IFwid3IxXCIsXHJcbiAgICAgICAgICAgIG5hbWU6IFwiV2VpZ2h0IFJlZHVjdGlvbiAxXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkNhcnZlIG91dCB0aGUgY2VudGVyIG9mIHlvdXIgcm9jayBhIGJpdC5cIixcclxuICAgICAgICAgICAgcHJpY2U6IDEwMCxcclxuICAgICAgICAgICAgc3ByaXRlS2V5OiBcInJvY2syXCIsXHJcbiAgICAgICAgICAgIGVmZmVjdDogeyBzcGVlZDogMC4xIH0sXHJcbiAgICAgICAgICAgIHByaW9yaXR5OiAwLFxyXG4gICAgICAgICAgICByZXBsYWNlc0Jhc2VTcHJpdGU6IHRydWUsXHJcbiAgICAgICAgICAgIGlnbm9yZVJvdGF0aW9uOiBmYWxzZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgV1IyOiA8SUl0ZW0+e1xyXG4gICAgICAgICAgICBpZDogXCJ3cjJcIixcclxuICAgICAgICAgICAgcmVxdWlyZW1lbnRzOiBbXCJ3cjFcIl0sXHJcbiAgICAgICAgICAgIG5hbWU6IFwiV2VpZ2h0IFJlZHVjdGlvbiAyXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkl0IGxva3MgbGlrZSBhIGRlZm9ybWVkIGRvbnV0Li4uXCIsXHJcbiAgICAgICAgICAgIHByaWNlOiAyNTAsXHJcbiAgICAgICAgICAgIHNwcml0ZUtleTogXCJyb2NrM1wiLFxyXG4gICAgICAgICAgICBlZmZlY3Q6IHsgc3BlZWQ6IDAuMiB9LFxyXG4gICAgICAgICAgICBwcmlvcml0eTogMCxcclxuICAgICAgICAgICAgcmVwbGFjZXNCYXNlU3ByaXRlOiB0cnVlLFxyXG4gICAgICAgICAgICBpZ25vcmVSb3RhdGlvbjogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIFdSMzogPElJdGVtPntcclxuICAgICAgICAgICAgaWQ6IFwid3IzXCIsXHJcbiAgICAgICAgICAgIHJlcXVpcmVtZW50czogW1wid3IyXCJdLFxyXG4gICAgICAgICAgICBuYW1lOiBcIldlaWdodCBSZWR1Y3Rpb24gM1wiLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJJcyB0aGF0IGV2ZW4gbGVnYWw/XCIsXHJcbiAgICAgICAgICAgIHByaWNlOiA2MDAsXHJcbiAgICAgICAgICAgIHNwcml0ZUtleTogXCJyb2NrNFwiLFxyXG4gICAgICAgICAgICBlZmZlY3Q6IHsgc3BlZWQ6IDAuMyB9LFxyXG4gICAgICAgICAgICBwcmlvcml0eTogMCxcclxuICAgICAgICAgICAgcmVwbGFjZXNCYXNlU3ByaXRlOiB0cnVlLFxyXG4gICAgICAgICAgICBpZ25vcmVSb3RhdGlvbjogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIFdSNDogPElJdGVtPntcclxuICAgICAgICAgICAgaWQ6IFwid3I0XCIsXHJcbiAgICAgICAgICAgIHJlcXVpcmVtZW50czogW1wid3IzXCJdLFxyXG4gICAgICAgICAgICBuYW1lOiBcIkNhcmJvbiBGaWJlclwiLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJUaGF0J3Mgbm90IGV2ZW4gYSByb2NrIVwiLFxyXG4gICAgICAgICAgICBwcmljZTogMTAwMCxcclxuICAgICAgICAgICAgc3ByaXRlS2V5OiBcInJvY2s1XCIsXHJcbiAgICAgICAgICAgIGVmZmVjdDogeyBzcGVlZDogMC40IH0sXHJcbiAgICAgICAgICAgIHByaW9yaXR5OiAwLFxyXG4gICAgICAgICAgICByZXBsYWNlc0Jhc2VTcHJpdGU6IHRydWUsXHJcbiAgICAgICAgICAgIGlnbm9yZVJvdGF0aW9uOiBmYWxzZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgSlVNUDE6IDxJSXRlbT4ge1xyXG4gICAgICAgICAgICBpZDogXCJqdW1wMVwiLFxyXG4gICAgICAgICAgICBjYXRlZ29yeTogXCJqdW1wXCIsXHJcbiAgICAgICAgICAgIG5hbWU6IFwiSnVtcCBNb2R1bGUgMVwiLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJBbGxvd3MgeW91IHRvIGp1bXAgbW9yZSBmcmVxdWVudGx5XCIsXHJcbiAgICAgICAgICAgIHByaWNlOiAyNTAsXHJcbiAgICAgICAgICAgIHNwcml0ZUtleTogXCJqdW1wbW9kMVwiLFxyXG4gICAgICAgICAgICBlZmZlY3Q6IHsganVtcERlbGF5OiAtMjAwIH0sXHJcbiAgICAgICAgICAgIHByaW9yaXR5OiAtMTAsXHJcbiAgICAgICAgICAgIHJlcGxhY2VzQmFzZVNwcml0ZTogZmFsc2UsXHJcbiAgICAgICAgICAgIGlnbm9yZVJvdGF0aW9uOiBmYWxzZSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIEpVTVAyOiA8SUl0ZW0+IHtcclxuICAgICAgICAgICAgaWQ6IFwianVtcDJcIixcclxuICAgICAgICAgICAgcmVxdWlyZW1lbnRzOiBbXCJqdW1wMVwiXSxcclxuICAgICAgICAgICAgY2F0ZWdvcnk6IFwianVtcFwiLFxyXG4gICAgICAgICAgICBuYW1lOiBcIlN1cGVyIEp1bXAgTW9kdWxlXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkFsbG93cyB5b3UgdG8ganVtcCBtb3JlIGZyZXF1ZW50bHlcIixcclxuICAgICAgICAgICAgcHJpY2U6IDUwMCxcclxuICAgICAgICAgICAgc3ByaXRlS2V5OiBcImp1bXBtb2QyXCIsXHJcbiAgICAgICAgICAgIGVmZmVjdDogeyBqdW1wRGVsYXk6IC0yMDAgfSxcclxuICAgICAgICAgICAgcHJpb3JpdHk6IC0xMCxcclxuICAgICAgICAgICAgcmVwbGFjZXNCYXNlU3ByaXRlOiBmYWxzZSxcclxuICAgICAgICAgICAgaWdub3JlUm90YXRpb246IGZhbHNlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgR0FTMTogPElJdGVtPiB7XHJcbiAgICAgICAgICAgIGlkOiBcImdhczFcIixcclxuICAgICAgICAgICAgY2F0ZWdvcnk6IFwiZ2FzXCIsXHJcbiAgICAgICAgICAgIG5hbWU6IFwiU21hbGwgR2FzIFRhbmtcIixcclxuICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiQSBsaXR0bGUgZ29lcyBhIGxvbmcgd2F5XCIsXHJcbiAgICAgICAgICAgIHByaWNlOiAxMDAsXHJcbiAgICAgICAgICAgIHNwcml0ZUtleTogXCJ0YW5rMVwiLFxyXG4gICAgICAgICAgICBlZmZlY3Q6IHsgZnVlbDogMjUgfSxcclxuICAgICAgICAgICAgcHJpb3JpdHk6IC0xMCxcclxuICAgICAgICAgICAgcmVwbGFjZXNCYXNlU3ByaXRlOiBmYWxzZSxcclxuICAgICAgICAgICAgaWdub3JlUm90YXRpb246IGZhbHNlLFxyXG4gICAgICAgICAgICBvcmlnaW46IHsgeDogMC41LCB5OiAxIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIEdBUzI6IDxJSXRlbT4ge1xyXG4gICAgICAgICAgICBpZDogXCJnYXMyXCIsXHJcbiAgICAgICAgICAgIGNhdGVnb3J5OiBcImdhc1wiLFxyXG4gICAgICAgICAgICByZXF1aXJlbWVudHM6IFtcImdhczFcIl0sXHJcbiAgICAgICAgICAgIG5hbWU6IFwiTWVkaXVtIEdhcyBUYW5rXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIk5vdyB3ZSdyZSBjb29raW5nIHdpdGggZ2FzLlwiLFxyXG4gICAgICAgICAgICBwcmljZTogMjUwLFxyXG4gICAgICAgICAgICBzcHJpdGVLZXk6IFwidGFuazJcIixcclxuICAgICAgICAgICAgZWZmZWN0OiB7IGZ1ZWw6IDI1IH0sXHJcbiAgICAgICAgICAgIHByaW9yaXR5OiAtMTAsXHJcbiAgICAgICAgICAgIHJlcGxhY2VzQmFzZVNwcml0ZTogZmFsc2UsXHJcbiAgICAgICAgICAgIGlnbm9yZVJvdGF0aW9uOiBmYWxzZSxcclxuICAgICAgICAgICAgb3JpZ2luOiB7IHg6IDAuNSwgeTogMSB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBHQVMzOiA8SUl0ZW0+IHtcclxuICAgICAgICAgICAgaWQ6IFwiZ2FzM1wiLFxyXG4gICAgICAgICAgICBjYXRlZ29yeTogXCJnYXNcIixcclxuICAgICAgICAgICAgcmVxdWlyZW1lbnRzOiBbXCJnYXMyXCJdLFxyXG4gICAgICAgICAgICBuYW1lOiBcIkxhcmdlIEdhcyBUYW5rXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIk1heGltdW0gQ2FwYWNpdHkhXCIsXHJcbiAgICAgICAgICAgIHByaWNlOiA0MDAsXHJcbiAgICAgICAgICAgIHNwcml0ZUtleTogXCJ0YW5rM1wiLFxyXG4gICAgICAgICAgICBlZmZlY3Q6IHsgZnVlbDogMjUgfSxcclxuICAgICAgICAgICAgcHJpb3JpdHk6IC0xMCxcclxuICAgICAgICAgICAgcmVwbGFjZXNCYXNlU3ByaXRlOiBmYWxzZSxcclxuICAgICAgICAgICAgaWdub3JlUm90YXRpb246IGZhbHNlLFxyXG4gICAgICAgICAgICBvcmlnaW46IHsgeDogMC41LCB5OiAxIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIEdBUzQ6IDxJSXRlbT4ge1xyXG4gICAgICAgICAgICBpZDogXCJnYXM0XCIsXHJcbiAgICAgICAgICAgIGNhdGVnb3J5OiBcImdhc1wiLFxyXG4gICAgICAgICAgICByZXF1aXJlbWVudHM6IFtcImdhczNcIl0sXHJcbiAgICAgICAgICAgIG5hbWU6IFwiVG9wIFNlY3JldCBUYW5rXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlNoaGhoaGhoLi4uXCIsXHJcbiAgICAgICAgICAgIHByaWNlOiA3NTAsXHJcbiAgICAgICAgICAgIHNwcml0ZUtleTogXCJ0YW5rNFwiLFxyXG4gICAgICAgICAgICBlZmZlY3Q6IHsgZnVlbDogMjUgfSxcclxuICAgICAgICAgICAgcHJpb3JpdHk6IC0xMCxcclxuICAgICAgICAgICAgcmVwbGFjZXNCYXNlU3ByaXRlOiBmYWxzZSxcclxuICAgICAgICAgICAgaWdub3JlUm90YXRpb246IGZhbHNlLFxyXG4gICAgICAgICAgICBvcmlnaW46IHsgeDogMC41LCB5OiAxIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIEJVTVBFUlMxOiB7XHJcbiAgICAgICAgICAgIGlkOiBcImIxXCIsXHJcbiAgICAgICAgICAgIG5hbWU6IFwiQnVtcGVyc1wiLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJQdXQgYSBydWJiZXIgcmluZyBhcm91bmQgeW91ciByb2NrIHRvIGhlbHAgaXQncyBib3VuY2luZXNzXCIsXHJcbiAgICAgICAgICAgIHByaWNlOiAzMDAsXHJcbiAgICAgICAgICAgIHNwcml0ZUtleTogXCJidW1wZXJzMVwiLFxyXG4gICAgICAgICAgICBlZmZlY3Q6IHsgYm91bmNlOiAwLjA5IH0sXHJcbiAgICAgICAgICAgIHByaW9yaXR5OiA1LFxyXG4gICAgICAgICAgICByZXBsYWNlc0Jhc2VTcHJpdGU6IGZhbHNlLFxyXG4gICAgICAgICAgICBpZ25vcmVSb3RhdGlvbjogZmFsc2UsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBST0NLRVQxOiB7XHJcbiAgICAgICAgICAgIGNhdGVnb3J5OiBcInJvY2tldFwiLFxyXG4gICAgICAgICAgICByZXF1aXJlbWVudHM6IFtcImdhczFcIl0sXHJcbiAgICAgICAgICAgIGlkOiBcInJvY2tldDFcIixcclxuICAgICAgICAgICAgbmFtZTogXCJSb2NrZXQgTWsgMVwiLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJCZXR0ZXIgdGhhbiBub3RoaW5nLlwiLFxyXG4gICAgICAgICAgICBwcmljZTogMTUwLFxyXG4gICAgICAgICAgICBzcHJpdGVLZXk6IFwicm9ja2V0MVwiLFxyXG4gICAgICAgICAgICBlZmZlY3Q6IHsgcm9ja2V0OiAxIH0sXHJcbiAgICAgICAgICAgIHByaW9yaXR5OiAtMzAsXHJcbiAgICAgICAgICAgIHJlcGxhY2VzQmFzZVNwcml0ZTogZmFsc2UsXHJcbiAgICAgICAgICAgIGlnbm9yZVJvdGF0aW9uOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICBST0NLRVQyOiB7XHJcbiAgICAgICAgICAgIGNhdGVnb3J5OiBcInJvY2tldFwiLFxyXG4gICAgICAgICAgICBpZDogXCJyb2NrZXQyXCIsXHJcbiAgICAgICAgICAgIHJlcXVpcmVtZW50czogW1wicm9ja2V0MVwiXSxcclxuICAgICAgICAgICAgbmFtZTogXCJSb2NrZXQgTWsgMlwiLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJOb3cgdGhhdCdzIGEgcmVhbCByb2NrZXQuXCIsXHJcbiAgICAgICAgICAgIHByaWNlOiA0MDAsXHJcbiAgICAgICAgICAgIHNwcml0ZUtleTogXCJyb2NrZXQyXCIsXHJcbiAgICAgICAgICAgIGVmZmVjdDogeyByb2NrZXQ6IDAuNiB9LFxyXG4gICAgICAgICAgICBwcmlvcml0eTogLTMwLFxyXG4gICAgICAgICAgICByZXBsYWNlc0Jhc2VTcHJpdGU6IGZhbHNlLFxyXG4gICAgICAgICAgICBpZ25vcmVSb3RhdGlvbjogdHJ1ZSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIFJPQ0tFVDM6IHtcclxuICAgICAgICAgICAgY2F0ZWdvcnk6IFwicm9ja2V0XCIsXHJcbiAgICAgICAgICAgIGlkOiBcInJvY2tldDNcIixcclxuICAgICAgICAgICAgcmVxdWlyZW1lbnRzOiBbXCJyb2NrZXQyXCJdLFxyXG4gICAgICAgICAgICBuYW1lOiBcIlJvY2tldCBNayAzXCIsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkRpZCB5b3Ugc3RlYWwgdGhpcyBmcm9tIE5BU0E/XCIsXHJcbiAgICAgICAgICAgIHByaWNlOiA3MDAsXHJcbiAgICAgICAgICAgIHNwcml0ZUtleTogXCJyb2NrZXQzXCIsXHJcbiAgICAgICAgICAgIGVmZmVjdDogeyByb2NrZXQ6IDAuOCB9LFxyXG4gICAgICAgICAgICBwcmlvcml0eTogLTMwLFxyXG4gICAgICAgICAgICByZXBsYWNlc0Jhc2VTcHJpdGU6IGZhbHNlLFxyXG4gICAgICAgICAgICBpZ25vcmVSb3RhdGlvbjogdHJ1ZSxcclxuICAgICAgICB9IFxyXG4gICAgfSxcclxufTtcclxuXHJcbmxldCBuID0gMDtcclxuZm9yKGxldCBrIGluIGl0ZW1TZXJ2aWNlLklURU1TKSBuKys7XHJcbmNvbnNvbGUubG9nKG4gKyBcIiBpdGVtc1wiKTtcclxuXHJcbmV4cG9ydCB7XHJcbiAgICBpdGVtU2VydmljZSxcclxuICAgIElJdGVtXHJcbn07IiwiaW1wb3J0IHtJbnB1dE1hbmFnZXJ9IGZyb20gXCIuLi9oZWxwZXJzL0lucHV0TWFuYWdlclwiO1xyXG5pbXBvcnQge1NoYWRlck1hbmFnZXJ9IGZyb20gXCIuLi9zaGFkZXJzL1NoYWRlck1hbmFnZXJcIjtcclxuaW1wb3J0IHtCYXNlQ29udHJvbGxlcn0gZnJvbSBcIi4uL2NvbnRyb2xsZXJzL0Jhc2VDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7IElJdGVtIH0gZnJvbSBcIi4uL3NlcnZpY2VzL2l0ZW1zU2VydmljZVwiO1xyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEJhc2VFbnRpdHkge1xyXG4gICAgcHJpdmF0ZSBfZGVzdHJveWFibGVzOiBhbnlbXSA9IFtdO1xyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgX3NjZW5lOiBQaGFzZXIuU2NlbmUsXHJcbiAgICAgICAgICAgICAgICBwcm90ZWN0ZWQgX2lucHV0OiBJbnB1dE1hbmFnZXIsXHJcbiAgICAgICAgICAgICAgICBwcm90ZWN0ZWQgX3NoYWRlck1hbmFnZXI6IFNoYWRlck1hbmFnZXIsXHJcbiAgICAgICAgICAgICAgICBwcm90ZWN0ZWQgX3BhcmFtczogSUVudGl0eVBhcmFtZXRlcnMsXHJcbiAgICAgICAgICAgICAgICBwcm90ZWN0ZWQgX2NvbnRyb2xsZXI6IEJhc2VDb250cm9sbGVyKSB7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGFic3RyYWN0IGluaXQoKTogdm9pZDtcclxuICAgIGFic3RyYWN0IHVwZGF0ZSgpOiB2b2lkO1xyXG4gICAgXHJcbiAgICBwcm90ZWN0ZWQgYWRkKGQ6IGFueSk6IGFueSB7XHJcbiAgICAgICAgdGhpcy5fZGVzdHJveWFibGVzLnB1c2goZCk7XHJcbiAgICAgICAgcmV0dXJuIGQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGRlc3Ryb3lTaW5nbGUoZDogYW55KTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fZGVzdHJveWFibGVzID0gdGhpcy5fZGVzdHJveWFibGVzLmZpbHRlcihkMiA9PiBkMiAhPSBkKTtcclxuICAgICAgICBkLmRlc3Ryb3koKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZGVzdHJveSgpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKGxldCBkIG9mIHRoaXMuX2Rlc3Ryb3lhYmxlcykgIHtcclxuICAgICAgICAgICAgZC5kZXN0cm95KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElFbnRpdHlQYXJhbWV0ZXJzIHtcclxuICAgIHg/OiBudW1iZXI7XHJcbiAgICB5PzogbnVtYmVyO1xyXG4gICAgdz86IG51bWJlcjtcclxuICAgIGg/OiBudW1iZXI7XHJcbiAgICBpdGVtcz86IElJdGVtW107XHJcbn0iLCJpbXBvcnQge0Jhc2VFbnRpdHksIElFbnRpdHlQYXJhbWV0ZXJzfSBmcm9tIFwiLi9CYXNlRW50aXR5XCI7XHJcbmltcG9ydCB7aXRlbVNlcnZpY2UsIElJdGVtfSBmcm9tIFwiLi4vc2VydmljZXMvaXRlbXNTZXJ2aWNlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUmFjZXIgZXh0ZW5kcyBCYXNlRW50aXR5IHtcclxuICAgIHB1YmxpYyBzcHJpdGU6IFBoYXNlci5QaHlzaWNzLk1hdHRlci5JbWFnZTtcclxuICAgIHB1YmxpYyBzcGVlZDogbnVtYmVyO1xyXG4gICAgcHVibGljIGFjdGl2ZTogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcHVibGljIGZpbmlzaFQ6IG51bWJlciA9IDA7XHJcbiAgICBwdWJsaWMgaXNQbGF5ZXI6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHB1YmxpYyBqdW1wRGVsYXk6IG51bWJlcjtcclxuICAgIHB1YmxpYyBmdWVsOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgYm9vc3RTcHJpdGU6IFBoYXNlci5HYW1lT2JqZWN0cy5TcHJpdGU7XHJcbiAgICBwdWJsaWMgYm9vc3Rpbmc6IGJvb2xlYW47XHJcbiAgICBwdWJsaWMgcm9ja2V0OiBudW1iZXI7XHJcbiAgICBwdWJsaWMgaGFzUm9ja2V0OiBib29sZWFuO1xyXG5cclxuICAgIHB1YmxpYyBsYXN0SnVtcEF0OiBudW1iZXIgPSAtMTAwMDtcclxuICAgIHB1YmxpYyBpdGVtU3ByaXRlczogUGhhc2VyLkdhbWVPYmplY3RzLlNwcml0ZVtdO1xyXG4gICAgXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuYm9vc3RTcHJpdGUgPSB0aGlzLmFkZCh0aGlzLl9zY2VuZS5hZGQuc3ByaXRlKDAsIDAsIFwiYm9vc3QxXCIpKTtcclxuICAgICAgICB0aGlzLl9zY2VuZS5hbmltcy5jcmVhdGUoe1xyXG4gICAgICAgICAgICBrZXk6IFwiYm9vc3RfYW5pbVwiLFxyXG4gICAgICAgICAgICBmcmFtZXM6IHRoaXMuX3NjZW5lLmFuaW1zLmdlbmVyYXRlRnJhbWVOdW1iZXJzKFwiYm9vc3QxXCIsIHtcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiAwLFxyXG4gICAgICAgICAgICAgICAgZW5kOiAzMCxcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgIGZyYW1lUmF0ZTogNjAsXHJcbiAgICAgICAgICAgIHJlcGVhdDogLTFcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmJvb3N0U3ByaXRlLmFuaW1zLnBsYXkoXCJib29zdF9hbmltXCIpO1xyXG4gICAgICAgIHRoaXMuYm9vc3RTcHJpdGUuc2V0U2NhbGUoMiwgMik7XHJcblxyXG4gICAgICAgIHRoaXMucm9ja2V0ID0gMTtcclxuICAgICAgICB0aGlzLnNwZWVkID0gMC4yO1xyXG4gICAgICAgIHRoaXMuanVtcERlbGF5ID0gMTUwMDtcclxuXHJcbiAgICAgICAgaWYgKCEhdGhpcy5fcGFyYW1zLngpIHtcclxuICAgICAgICAgICAgdGhpcy5zcHJpdGUgPSB0aGlzLmFkZCh0aGlzLl9zY2VuZS5tYXR0ZXIuYWRkLmltYWdlKHRoaXMuX3BhcmFtcy54LCAgdGhpcy5fcGFyYW1zLnksICBcInJvY2sxXCIpKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnNwcml0ZSA9IHRoaXMuYWRkKHRoaXMuX3NjZW5lLm1hdHRlci5hZGQuaW1hZ2UoMCwgMCwgIFwicm9jazFcIikpO1xyXG4gICAgICAgICAgICB0aGlzLmJvb3N0U3ByaXRlLnNldFZpc2libGUoZmFsc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNwcml0ZS5zZXRDaXJjbGUoMjYsIHt9KTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5zZXRCb3VuY2UoMC45KTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5zZXRNYXNzKDUpO1xyXG4gICAgICAgIC8vdGhpcy5zcHJpdGUuc2V0VmlzaWJsZShmYWxzZSk7XHJcblxyXG4gICAgICAgIGlmICghdGhpcy5fcGFyYW1zLngpIHtcclxuICAgICAgICAgICAgdGhpcy5zcHJpdGUuc2V0U3RhdGljKHRydWUpO1xyXG4gICAgICAgICAgICB0aGlzLnNwcml0ZS5zZXRJZ25vcmVHcmF2aXR5KHRydWUpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IHdlaWdodCA9IDEwMDAwO1xyXG4gICAgICAgIGxldCBib3VuY2UgPSAwLjk7XHJcbiAgICAgICAgbGV0IGFmID0gMC4wMjtcclxuICAgICAgICB0aGlzLmZ1ZWwgPSAwO1xyXG5cclxuICAgICAgICB0aGlzLml0ZW1TcHJpdGVzID0gW107XHJcbiAgICAgICAgZm9yKGxldCBpIG9mIHRoaXMuX3BhcmFtcy5pdGVtcy5zb3J0KChhLCBiKSA9PiBiLnByaW9yaXR5IC0gYS5wcmlvcml0eSkpIHtcclxuICAgICAgICAgICAgaWYgKGkucmVwbGFjZXNCYXNlU3ByaXRlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNwcml0ZS5zZXRUZXh0dXJlKGkuc3ByaXRlS2V5KTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICghIWkuc3ByaXRlS2V5KSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgY3JlYXRlU3ByaXRlID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoISFpLmNhdGVnb3J5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3RoZXJTcHJpdGUgPSB0aGlzLml0ZW1TcHJpdGVzLmZpbmQocyA9PiAoPGFueT5zKS5fX2l0ZW0uY2F0ZWdvcnkgPT0gaS5jYXRlZ29yeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEhb3RoZXJTcHJpdGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlU3ByaXRlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG90aGVyU3ByaXRlLnNldFRleHR1cmUoaS5zcHJpdGVLZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoY3JlYXRlU3ByaXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3ByID0gdGhpcy5fc2NlbmUuYWRkLnNwcml0ZSh0aGlzLnNwcml0ZS54LCB0aGlzLnNwcml0ZS55LCBpLnNwcml0ZUtleSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEhaS5vcmlnaW4pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3ByLnNldE9yaWdpbihpLm9yaWdpbi54LCBpLm9yaWdpbi55KTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzcHIuc2V0T3JpZ2luKDAuNSwgMC41KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgKDxhbnk+c3ByKS5fX2l0ZW0gPSBpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbVNwcml0ZXMucHVzaChzcHIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkKHNwcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGkuZWZmZWN0LmFpckZyaWN0aW9uKSBhZiArPSBpLmVmZmVjdC5haXJGcmljdGlvbjsgXHJcbiAgICAgICAgICAgICAgICBpZiAoaS5lZmZlY3Quc3BlZWQpIHRoaXMuc3BlZWQgKz0gaS5lZmZlY3Quc3BlZWQ7IFxyXG4gICAgICAgICAgICAgICAgaWYgKGkuZWZmZWN0LndlaWdodCkgd2VpZ2h0ICs9IGkuZWZmZWN0LndlaWdodDsgXHJcbiAgICAgICAgICAgICAgICBpZiAoaS5lZmZlY3QuYm91bmNlKSBib3VuY2UgKz0gaS5lZmZlY3QuYm91bmNlOyBcclxuICAgICAgICAgICAgICAgIGlmIChpLmVmZmVjdC5mdWVsKSB0aGlzLmZ1ZWwgKz0gaS5lZmZlY3QuZnVlbDsgXHJcbiAgICAgICAgICAgICAgICBpZiAoaS5lZmZlY3QuanVtcERlbGF5KSB0aGlzLmp1bXBEZWxheSArPSBpLmVmZmVjdC5qdW1wRGVsYXk7IFxyXG4gICAgICAgICAgICAgICAgaWYgKGkuZWZmZWN0LnJvY2tldCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGFzUm9ja2V0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJvY2tldCArPSBpLmVmZmVjdC5yb2NrZXQ7IFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnNwcml0ZS5zZXRGcmljdGlvbkFpcihhZik7XHJcbiAgICAgICAgdGhpcy5zcHJpdGUuc2V0TWFzcyh3ZWlnaHQpO1xyXG5cclxuICAgICAgICB0aGlzLnNwcml0ZS5zZXRCb3VuY2UoYm91bmNlKTtcclxuICAgIH1cclxuXHJcbiAgICBkcmF3KGNiOiBhbnksIHg6IG51bWJlciwgeTogbnVtYmVyKSB7XHJcbiAgICAgICAgY2IodGhpcy5zcHJpdGUsIHgsIHkpO1xyXG4gICAgICAgIGZvcihsZXQgaSBvZiB0aGlzLml0ZW1TcHJpdGVzKSB7XHJcbiAgICAgICAgICAgIGNiKGksIHgsIHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYih0aGlzLmJvb3N0U3ByaXRlLCB4LCB5KTtcclxuICAgIH1cclxuXHJcbiAgICBqdW1wKCkge1xyXG4gICAgICAgIGNvbnN0IHQgPSB0aGlzLl9zY2VuZS50aW1lLm5vdztcclxuICAgICAgICBpZiAodCAtIHRoaXMubGFzdEp1bXBBdCA+IHRoaXMuanVtcERlbGF5ICYmIHRoaXMuYWN0aXZlKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGFzdEp1bXBBdCA9IHQ7XHJcbiAgICAgICAgICAgIHRoaXMuc3ByaXRlLnNldFZlbG9jaXR5WSgtOSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5hY3RpdmUpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmlzUGxheWVyKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1vdmUoMSk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zcHJpdGUueSA+IDE2MCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuanVtcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYm9vc3RpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ib29zdGluZyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmJvb3N0aW5nICYmIHRoaXMuaGFzUm9ja2V0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuZnVlbCAtPSAwLjU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYm9vc3RTcHJpdGUuYWxwaGEgPSAodGhpcy5ib29zdGluZyAmJiB0aGlzLmhhc1JvY2tldCAmJiB0aGlzLmZ1ZWwgPiAwKSA/IDEgOiAwO1xyXG5cclxuICAgICAgICBmb3IobGV0IGkgb2YgdGhpcy5pdGVtU3ByaXRlcykge1xyXG4gICAgICAgICAgICBjb25zdCBpdG06IElJdGVtID0gKDxhbnk+aSkuX19pdGVtO1xyXG4gICAgICAgICAgICBpLnggPSB0aGlzLnNwcml0ZS54O1xyXG4gICAgICAgICAgICBpLnkgPSB0aGlzLnNwcml0ZS55O1xyXG4gICAgICAgICAgICBpLnNldFNjYWxlKHRoaXMuc3ByaXRlLnNjYWxlWCwgdGhpcy5zcHJpdGUuc2NhbGVZKTtcclxuICAgICAgICAgICAgaWYgKCFpdG0uaWdub3JlUm90YXRpb24pIHtcclxuICAgICAgICAgICAgICAgIGkuYW5nbGUgPSB0aGlzLnNwcml0ZS5hbmdsZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5ib29zdFNwcml0ZS54ID0gdGhpcy5zcHJpdGUueCAtIDIxO1xyXG4gICAgICAgIHRoaXMuYm9vc3RTcHJpdGUueSA9IHRoaXMuc3ByaXRlLnkgKyAxMjtcclxuICAgIH1cclxuXHJcbiAgICBwcmV2aWV3VXBkYXRlKCkge1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLmFuZ2xlICs9IDAuNTtcclxuICAgICAgICBmb3IobGV0IGkgb2YgdGhpcy5pdGVtU3ByaXRlcykge1xyXG4gICAgICAgICAgICBjb25zdCBpdG06IElJdGVtID0gKDxhbnk+aSkuX19pdGVtO1xyXG4gICAgICAgICAgICBpLnggPSB0aGlzLnNwcml0ZS54O1xyXG4gICAgICAgICAgICBpLnkgPSB0aGlzLnNwcml0ZS55O1xyXG4gICAgICAgICAgICBpLnNldFNjYWxlKHRoaXMuc3ByaXRlLnNjYWxlWCwgdGhpcy5zcHJpdGUuc2NhbGVZKTtcclxuICAgICAgICAgICAgaWYgKCFpdG0uaWdub3JlUm90YXRpb24pIHtcclxuICAgICAgICAgICAgICAgIGkuYW5nbGUgPSB0aGlzLnNwcml0ZS5hbmdsZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBtb3ZlKGR4OiBudW1iZXIpIHtcclxuICAgICAgICBpZiAoIXRoaXMuYWN0aXZlKSByZXR1cm47XHJcblxyXG4gICAgICAgIGxldCBzY2FsZSA9IDE7XHJcbiAgICAgICAgaWYgKHRoaXMuYm9vc3RpbmcgJiYgdGhpcy5oYXNSb2NrZXQgJiYgdGhpcy5mdWVsID4gMCkge1xyXG4gICAgICAgICAgICBzY2FsZSA9IHRoaXMucm9ja2V0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5zcHJpdGUuc2V0VmVsb2NpdHlYKCg8YW55PnRoaXMuc3ByaXRlLmJvZHkpLnZlbG9jaXR5LnggKyAodGhpcy5zcGVlZCpkeCkqc2NhbGUpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHtCYXNlRW50aXR5LCBJRW50aXR5UGFyYW1ldGVyc30gZnJvbSBcIi4vQmFzZUVudGl0eVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEp1bXAxIGV4dGVuZHMgQmFzZUVudGl0eSB7XHJcbiAgICBwdWJsaWMgc3ByaXRlOiBQaGFzZXIuUGh5c2ljcy5NYXR0ZXIuSW1hZ2U7XHJcbiAgICBcclxuICAgIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc3Qgc2hhcGVzID0gdGhpcy5fc2NlbmUuY2FjaGUuanNvbi5nZXQoXCJzaGFwZXNcIik7XHJcbiAgICAgICAgdGhpcy5zcHJpdGUgPSB0aGlzLl9zY2VuZS5tYXR0ZXIuYWRkLnNwcml0ZSh0aGlzLl9wYXJhbXMueCwgMTcwLCBcImp1bXAxXCIsIG51bGwsIHsgc2hhcGU6IHNoYXBlcy5qdW1wMX0pO1xyXG4gICAgICAgIHRoaXMuYWRkKHRoaXMuc3ByaXRlKTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5zZXRTdGF0aWModHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZHJhdyhjYjogYW55LCB4OiBudW1iZXIsIHk6IG51bWJlcikge1xyXG4gICAgICAgIGNiKHRoaXMuc3ByaXRlLCB4LCB5KTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoKTogdm9pZCB7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQge0Jhc2VFbnRpdHksIElFbnRpdHlQYXJhbWV0ZXJzfSBmcm9tIFwiLi9CYXNlRW50aXR5XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUGxhdGZvcm0xIGV4dGVuZHMgQmFzZUVudGl0eSB7XHJcbiAgICBwdWJsaWMgc3ByaXRlOiBQaGFzZXIuUGh5c2ljcy5NYXR0ZXIuSW1hZ2U7XHJcbiAgICBcclxuICAgIGluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zcHJpdGUgPSB0aGlzLl9zY2VuZS5tYXR0ZXIuYWRkLnNwcml0ZSh0aGlzLl9wYXJhbXMueCwgMTgwLCBcInBsYXRmb3JtMVwiLCBudWxsLCB7fSk7XHJcbiAgICAgICAgdGhpcy5zcHJpdGUuc2V0U3RhdGljKHRydWUpO1xyXG4gICAgICAgIHRoaXMuYWRkKHRoaXMuc3ByaXRlKTtcclxuICAgIH1cclxuXHJcbiAgICBkcmF3KGNiOiBhbnksIHg6IG51bWJlciwgeTogbnVtYmVyKSB7XHJcbiAgICAgICAgY2IodGhpcy5zcHJpdGUsIHgsIHkpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSgpOiB2b2lkIHtcclxuICAgIH1cclxufSIsImltcG9ydCB7QmFzZUVudGl0eSwgSUVudGl0eVBhcmFtZXRlcnN9IGZyb20gXCIuL0Jhc2VFbnRpdHlcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBQbGF0Zm9ybTIgZXh0ZW5kcyBCYXNlRW50aXR5IHtcclxuICAgIHB1YmxpYyBzcHJpdGU6IFBoYXNlci5QaHlzaWNzLk1hdHRlci5JbWFnZTtcclxuICAgIFxyXG4gICAgaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNwcml0ZSA9IHRoaXMuX3NjZW5lLm1hdHRlci5hZGQuc3ByaXRlKHRoaXMuX3BhcmFtcy54LCAxNzUsIFwicGxhdGZvcm0yXCIsIG51bGwsIHt9KTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5zZXRTdGF0aWModHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5hZGQodGhpcy5zcHJpdGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGRyYXcoY2I6IGFueSwgeDogbnVtYmVyLCB5OiBudW1iZXIpIHtcclxuICAgICAgICBjYih0aGlzLnNwcml0ZSwgeCwgeSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKCk6IHZvaWQge1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHtCYXNlRW50aXR5LCBJRW50aXR5UGFyYW1ldGVyc30gZnJvbSBcIi4vQmFzZUVudGl0eVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNwaW5uZXIgZXh0ZW5kcyBCYXNlRW50aXR5IHtcclxuICAgIHB1YmxpYyBzcHJpdGU6IFBoYXNlci5QaHlzaWNzLk1hdHRlci5JbWFnZTtcclxuICAgIFxyXG4gICAgaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBjb25zdCBzaGFwZXMgPSB0aGlzLl9zY2VuZS5jYWNoZS5qc29uLmdldChcInNoYXBlc1wiKTtcclxuICAgICAgICB0aGlzLnNwcml0ZSA9IHRoaXMuX3NjZW5lLm1hdHRlci5hZGQuc3ByaXRlKHRoaXMuX3BhcmFtcy54LCAxMzAsIFwic3Bpbm5lclwiLCBudWxsLCB7IFxyXG4gICAgICAgICAgICBzaGFwZTogc2hhcGVzLnNwaW5uZXJcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5zZXRTdGF0aWModHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5hZGQodGhpcy5zcHJpdGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGRyYXcoY2I6IGFueSwgeDogbnVtYmVyLCB5OiBudW1iZXIpIHtcclxuICAgICAgICBjYih0aGlzLnNwcml0ZSwgeCwgeSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLnNldFZlbG9jaXR5KDAsIDApO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLmFuZ2xlICs9IDI7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBpdGVtU2VydmljZSwgSUl0ZW0gfSBmcm9tIFwiLi9pdGVtc1NlcnZpY2VcIjtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRPcHBvbmVudChkaWZmaWN1bHR5OiBudW1iZXIpOiBJSXRlbVtdIHtcclxuICAgIGNvbnN0IGl0ZW1zID0gW1xyXG4gICAgICAgIGl0ZW1TZXJ2aWNlLklURU1TLkFJX0hBTkRJQ0FQMSxcclxuICAgIF1cclxuXHJcbiAgICBpZiAoZGlmZmljdWx0eSA+PSAxKSB7XHJcbiAgICAgICAgaXRlbXMucHVzaChpdGVtU2VydmljZS5JVEVNUy5XUjEpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChkaWZmaWN1bHR5ID49IDMpIHtcclxuICAgICAgICBpdGVtcy5wdXNoKGl0ZW1TZXJ2aWNlLklURU1TLkdBUzEpO1xyXG4gICAgICAgIGl0ZW1zLnB1c2goaXRlbVNlcnZpY2UuSVRFTVMuUk9DS0VUMSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGRpZmZpY3VsdHkgPj0gNykge1xyXG4gICAgICAgIGNvbnN0IHIgPSBNYXRoLnJhbmRvbSgpO1xyXG4gICAgICAgIGlmIChyID4gMC41KSB7XHJcbiAgICAgICAgICAgIGl0ZW1zLnB1c2goaXRlbVNlcnZpY2UuSVRFTVMuR0FTMik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaXRlbXMucHVzaChpdGVtU2VydmljZS5JVEVNUy5XUjIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGlmZmljdWx0eSA+PSA5KSB7XHJcbiAgICAgICAgY29uc3QgciA9IE1hdGgucmFuZG9tKCk7XHJcbiAgICAgICAgaWYgKHIgPiAwLjUpIHtcclxuICAgICAgICAgICAgaXRlbXMucHVzaChpdGVtU2VydmljZS5JVEVNUy5HQVMyKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpdGVtcy5wdXNoKGl0ZW1TZXJ2aWNlLklURU1TLlJPQ0tFVDIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGlmZmljdWx0eSA+PSAxMCkge1xyXG4gICAgICAgIGl0ZW1zLnB1c2goaXRlbVNlcnZpY2UuSVRFTVMuV1IzKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGlmZmljdWx0eSA+PSAxMSkge1xyXG4gICAgICAgIGl0ZW1zLnB1c2goaXRlbVNlcnZpY2UuSVRFTVMuSlVNUDEpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChkaWZmaWN1bHR5ID49IDEzKSB7XHJcbiAgICAgICAgY29uc3QgciA9IE1hdGgucmFuZG9tKCk7XHJcbiAgICAgICAgaWYgKHIgPiAwLjUpIHtcclxuICAgICAgICAgICAgaXRlbXMucHVzaChpdGVtU2VydmljZS5JVEVNUy5CVU1QRVJTMSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChkaWZmaWN1bHR5ID49IDE2KSB7XHJcbiAgICAgICAgaXRlbXMucHVzaChpdGVtU2VydmljZS5JVEVNUy5ST0NLRVQzKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGlmZmljdWx0eSA+PSAxOSkge1xyXG4gICAgICAgIGl0ZW1zLnB1c2goaXRlbVNlcnZpY2UuSVRFTVMuR0FTMyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGRpZmZpY3VsdHkgPj0gMjMpIHtcclxuICAgICAgICBpdGVtcy5wdXNoKGl0ZW1TZXJ2aWNlLklURU1TLlJPQ0tFVDMpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChkaWZmaWN1bHR5ID49IDI1KSB7XHJcbiAgICAgICAgaXRlbXMucHVzaChpdGVtU2VydmljZS5JVEVNUy5HQVM0KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGlmZmljdWx0eSA+PSAyOCkge1xyXG4gICAgICAgIGl0ZW1zLnB1c2goaXRlbVNlcnZpY2UuSVRFTVMuV1I0KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gaXRlbXM7XHJcbn0iLCJleHBvcnQgZGVmYXVsdCB7XHJcbiAgICBwbGFjZW1lbnQ6IDAsXHJcbiAgICBlYXJuaW5nczogMVxyXG59OyIsImltcG9ydCB7IEJhc2VDb250cm9sbGVyIH0gZnJvbSBcIi4vQmFzZUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IGNhcmVlclNlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL2NhcmVlclNlcnZpY2VcIjtcclxuaW1wb3J0IHtpdGVtU2VydmljZSwgSUl0ZW19IGZyb20gXCIuLi9zZXJ2aWNlcy9pdGVtc1NlcnZpY2VcIjtcclxuaW1wb3J0IHsgUmFjZXIgfSBmcm9tIFwiLi4vZW50aXRpZXMvUmFjZXJcIjtcclxuaW1wb3J0IHsgUGxheUNvbnRyb2xsZXIgfSBmcm9tIFwiLi9QbGF5Q29udHJvbGxlclwiO1xyXG5pbXBvcnQgcmFjZUZpbmlzaFNlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL3JhY2VGaW5pc2hTZXJ2aWNlXCI7XHJcbmltcG9ydCB7IFN0b3JlQ29udHJvbGxlciB9IGZyb20gXCIuL1N0b3JlQ29udHJvbGxlclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJhY2VGaW5pc2hDb250cm9sbGVyIGV4dGVuZHMgQmFzZUNvbnRyb2xsZXIge1xyXG4gICAgcHJpdmF0ZSBfYmc6IFBoYXNlci5HYW1lT2JqZWN0cy5UaWxlU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBfZmc6IFBoYXNlci5HYW1lT2JqZWN0cy5TcHJpdGU7XHJcblxyXG4gICAgaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9iZyA9IHRoaXMuX3NjZW5lLmFkZC50aWxlU3ByaXRlKDAsIDAsIDgwMCwgNjAwLCBcImZpbmlzaGJnXCIpO1xyXG4gICAgICAgIHRoaXMuX2JnLnNldE9yaWdpbigwLCAwKTtcclxuICAgICAgICB0aGlzLmFkZEQodGhpcy5fYmcpO1xyXG5cclxuICAgICAgICB0aGlzLl9mZyA9IHRoaXMuX3NjZW5lLmFkZC5zcHJpdGUoMCwgMCwgXCJmaW5pc2hmZ1wiKTtcclxuICAgICAgICB0aGlzLl9mZy5zZXRPcmlnaW4oMCwgMCk7XHJcbiAgICAgICAgdGhpcy5hZGREKHRoaXMuX2ZnKTtcclxuXHJcbiAgICAgICAgY29uc3QgcGxhY2VtZW50VGV4dCA9IHRoaXMuX3NjZW5lLmFkZC50ZXh0KDMzNSwgMTI1LCByYWNlRmluaXNoU2VydmljZS5wbGFjZW1lbnQudG9TdHJpbmcoKSwge1xyXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcIkFSQ0FERUNMQVNTSUNcIixcclxuICAgICAgICAgICAgZm9udFNpemU6IDEwOCxcclxuICAgICAgICAgICAgY29sb3I6IHJhY2VGaW5pc2hTZXJ2aWNlLnBsYWNlbWVudCA9PSAxID8gXCIjMTFFRjExXCIgOiByYWNlRmluaXNoU2VydmljZS5wbGFjZW1lbnQgPT0gMiA/IFwiI0ZGMDAwMFwiIDogXCIjZmYwMDAwXCIsXHJcbiAgICAgICAgICAgIGFsaWduOiBcImxlZnRcIixcclxuICAgICAgICB9KTtcclxuICAgICAgICBwbGFjZW1lbnRUZXh0LnNldFN0cm9rZShcIiMwMDAwMDBcIiwgMTIpO1xyXG4gICAgICAgIHRoaXMuYWRkRChwbGFjZW1lbnRUZXh0KTtcclxuXHJcbiAgICAgICAgY29uc3QgZWFybmluZ1RleHQgPSB0aGlzLl9zY2VuZS5hZGQudGV4dCg0NDUsIDIzNSwgcmFjZUZpbmlzaFNlcnZpY2UuZWFybmluZ3MudG9TdHJpbmcoKSwge1xyXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcIkFSQ0FERUNMQVNTSUNcIixcclxuICAgICAgICAgICAgZm9udFNpemU6IDEwOCxcclxuICAgICAgICAgICAgY29sb3I6IFwiIzk5MzNmZlwiLFxyXG4gICAgICAgICAgICBhbGlnbjogXCJsZWZ0XCIsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgZWFybmluZ1RleHQuc2V0U3Ryb2tlKFwiIzAwMDAwMFwiLCAxMik7XHJcbiAgICAgICAgdGhpcy5hZGREKGVhcm5pbmdUZXh0KTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fYmcudGlsZVBvc2l0aW9uWSArPSAwLjU7XHJcbiAgICAgICAgdGhpcy5fYmcudGlsZVBvc2l0aW9uWCArPSAxO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5faW5wdXQuc3BhY2UuaXNEb3duKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IF90aGlzID0gdGhpcztcclxuICAgICAgICAgICAgdGhpcy5mYWRlT3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIF90aGlzLl9nYW1lLnN3aXRjaENvbnRyb2xsZXIoU3RvcmVDb250cm9sbGVyKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRlc3Ryb3koKSB7XHJcbiAgICAgICAgc3VwZXIuZGVzdHJveSgpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHtCYXNlRW50aXR5LCBJRW50aXR5UGFyYW1ldGVyc30gZnJvbSBcIi4vQmFzZUVudGl0eVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFBsYXRmb3JtMyBleHRlbmRzIEJhc2VFbnRpdHkge1xyXG4gICAgcHVibGljIHNwcml0ZTogUGhhc2VyLlBoeXNpY3MuTWF0dGVyLkltYWdlO1xyXG4gICAgXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IHNoYXBlcyA9IHRoaXMuX3NjZW5lLmNhY2hlLmpzb24uZ2V0KFwic2hhcGVzXCIpO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlID0gdGhpcy5fc2NlbmUubWF0dGVyLmFkZC5zcHJpdGUodGhpcy5fcGFyYW1zLngsIDIwMCwgXCJwbGF0Zm9ybTNcIiwgbnVsbCwge1xyXG4gICAgICAgICAgICBzaGFwZTogc2hhcGVzLnBsYXRmb3JtM1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLnNldFN0YXRpYyh0cnVlKTtcclxuICAgICAgICB0aGlzLmFkZCh0aGlzLnNwcml0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZHJhdyhjYjogYW55LCB4OiBudW1iZXIsIHk6IG51bWJlcikge1xyXG4gICAgICAgIGNiKHRoaXMuc3ByaXRlLCB4LCB5KTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoKTogdm9pZCB7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQge0Jhc2VFbnRpdHksIElFbnRpdHlQYXJhbWV0ZXJzfSBmcm9tIFwiLi9CYXNlRW50aXR5XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgU3Bpbm5lcjIgZXh0ZW5kcyBCYXNlRW50aXR5IHtcclxuICAgIHB1YmxpYyBzcHJpdGU6IFBoYXNlci5QaHlzaWNzLk1hdHRlci5JbWFnZTtcclxuICAgIFxyXG4gICAgaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnNwcml0ZSA9IHRoaXMuX3NjZW5lLm1hdHRlci5hZGQuc3ByaXRlKHRoaXMuX3BhcmFtcy54LCA4MCwgXCJwbGF0Zm9ybTFcIiwgbnVsbCwge30pO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLnNldFN0YXRpYyh0cnVlKTtcclxuICAgICAgICB0aGlzLmFkZCh0aGlzLnNwcml0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZHJhdyhjYjogYW55LCB4OiBudW1iZXIsIHk6IG51bWJlcikge1xyXG4gICAgICAgIGNiKHRoaXMuc3ByaXRlLCB4LCB5KTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zcHJpdGUuYW5nbGUgLT0gMjtcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGluaXQoc2NlbmU6IFBoYXNlci5TY2VuZSkge1xyXG4gICAgICAgIHRoaXMuYmdtID0gc2NlbmUuc291bmQuYWRkKFwiYmdtXCIsIHtcclxuICAgICAgICAgICAgbG9vcDogdHJ1ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuY2hhY2hpbmcgPSBzY2VuZS5zb3VuZC5hZGQoXCJjaGFjaGluZ1wiKTtcclxuICAgICAgICB0aGlzLnN0YXJ0MSA9IHNjZW5lLnNvdW5kLmFkZChcInN0YXJ0MVwiKTtcclxuICAgICAgICB0aGlzLnN0YXJ0MiA9IHNjZW5lLnNvdW5kLmFkZChcInN0YXJ0MlwiKTtcclxuICAgICAgICB0aGlzLmJsaXAxID0gc2NlbmUuc291bmQuYWRkKFwiYmxpcDFcIik7XHJcbiAgICAgICAgdGhpcy5ibGlwMiA9IHNjZW5lLnNvdW5kLmFkZChcImJsaXAyXCIpO1xyXG4gICAgICAgIHRoaXMudWlzZWxlY3QgPSBzY2VuZS5zb3VuZC5hZGQoXCJ1aXNlbGVjdFwiKTtcclxuICAgICAgICB0aGlzLmNoZWVyaW5nID0gc2NlbmUuc291bmQuYWRkKFwiY2hlZXJpbmdcIik7XHJcbiAgICAgICAgdGhpcy5ib29zdCA9IHNjZW5lLnNvdW5kLmFkZChcImJvb3N0c2Z4XCIpO1xyXG4gICAgfSxcclxuXHJcbiAgICBwbGF5QmdtKCkge1xyXG4gICAgICAgIHRoaXMuYmdtLnBsYXkoXCJcIiwgeyBsb29wOiB0cnVlIH0pO1xyXG4gICAgfSxcclxuXHJcbiAgICBwYXVzZUJnbSgpIHtcclxuICAgICAgICB0aGlzLmJnbS5wYXVzZSgpO1xyXG4gICAgfSxcclxuXHJcbiAgICBwbGF5c2Z4KHM6IHN0cmluZykge1xyXG4gICAgICAgIHN3aXRjaChzKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJjaGFjaGluZ1wiOiB0aGlzLmNoYWNoaW5nLnBsYXkoKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJzdGFydFwiOiB0aGlzLnN0YXJ0MS5wbGF5KCk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwic3RhcnQyXCI6IHRoaXMuc3RhcnQyLnBsYXkoKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJibGlwMVwiOiB0aGlzLmJsaXAxLnBsYXkoKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJibGlwMlwiOiB0aGlzLmJsaXAyLnBsYXkoKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ1aXNlbGVjdFwiOiB0aGlzLnVpc2VsZWN0LnBsYXkoKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJjaGVlcmluZ1wiOiB0aGlzLmNoZWVyaW5nLnBsYXkoKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJib29zdFwiOiB0aGlzLmJvb3N0LnBsYXkoKTsgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgc3RvcFNmeChzOiBzdHJpbmcpIHtcclxuICAgICAgICBzd2l0Y2gocykge1xyXG4gICAgICAgICAgICBjYXNlIFwiYm9vc3RcIjogdGhpcy5ib29zdC5wYXVzZSgpOyBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQge0Jhc2VDb250cm9sbGVyLCBDb250cm9sbGVyQXJnc30gZnJvbSBcIi4vQmFzZUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHsgU3RvcmVDb250cm9sbGVyfSBmcm9tIFwiLi9TdG9yZUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IE1hdGhIZWxwZXJzIGZyb20gXCIuLi9oZWxwZXJzL01hdGhIZWxwZXJzXCI7XHJcbmltcG9ydCB7UmFjZXIgfSBmcm9tIFwiLi4vZW50aXRpZXMvUmFjZXJcIjtcclxuaW1wb3J0IHsgQmFzZUVudGl0eSB9IGZyb20gXCIuLi9lbnRpdGllcy9CYXNlRW50aXR5XCI7XHJcbmltcG9ydCB7IEp1bXAxIH0gZnJvbSBcIi4uL2VudGl0aWVzL0p1bXAxXCI7XHJcbmltcG9ydCB7IFBsYXRmb3JtMSB9IGZyb20gXCIuLi9lbnRpdGllcy9QbGF0Zm9ybTFcIjtcclxuaW1wb3J0IHsgUGxhdGZvcm0yIH0gZnJvbSBcIi4uL2VudGl0aWVzL1BsYXRmb3JtMlwiO1xyXG5pbXBvcnQgY2FyZWVyU2VydmljZSBmcm9tIFwiLi4vc2VydmljZXMvY2FyZWVyU2VydmljZVwiO1xyXG5pbXBvcnQgeyBTcGlubmVyIH0gZnJvbSBcIi4uL2VudGl0aWVzL1NwaW5uZXJcIjtcclxuaW1wb3J0IHsgaXRlbVNlcnZpY2UgfSBmcm9tIFwiLi4vc2VydmljZXMvaXRlbXNTZXJ2aWNlXCI7XHJcbmltcG9ydCBnZXRPcHBvbmVudCBmcm9tIFwiLi4vc2VydmljZXMvb3Bwb25lbnRTZXJ2aWNlXCI7XHJcbmltcG9ydCB7IFJhY2VGaW5pc2hDb250cm9sbGVyIH0gZnJvbSBcIi4vUmFjZUZpbmlzaENvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHJhY2VGaW5pc2hTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9yYWNlRmluaXNoU2VydmljZVwiO1xyXG5pbXBvcnQgeyBQbGF0Zm9ybTMgfSBmcm9tIFwiLi4vZW50aXRpZXMvUGxhdGZvcm0zXCI7XHJcbmltcG9ydCB7IFNwaW5uZXIyIH0gZnJvbSBcIi4uL2VudGl0aWVzL1NwaW5uZXIyXCI7XHJcbmltcG9ydCBTb3VuZE1hbmFnZXIgZnJvbSBcIi4uL2hlbHBlcnMvU291bmRNYW5hZ2VyXCI7XHJcblxyXG5jb25zdCBVU0VfUlQgPSB0cnVlO1xyXG5cclxuZXhwb3J0IGNsYXNzIFBsYXlDb250cm9sbGVyIGV4dGVuZHMgQmFzZUNvbnRyb2xsZXIge1xyXG4gICAgcHVibGljIG1hcDogUGhhc2VyLlRpbGVtYXBzLlRpbGVtYXA7XHJcbiAgICBwdWJsaWMgbGF5ZXI6IFBoYXNlci5UaWxlbWFwcy5TdGF0aWNUaWxlbWFwTGF5ZXI7XHJcbiAgICBwcml2YXRlIF9kYmc6IFBoYXNlci5HYW1lT2JqZWN0cy5HcmFwaGljcztcclxuICAgIHByaXZhdGUgX2dyb3VuZDogUGhhc2VyLkdhbWVPYmplY3RzLlRpbGVTcHJpdGU7XHJcbiAgICBwcml2YXRlIF9maW5pc2hlcyA9IDA7XHJcbiAgICBwcml2YXRlIF9wbGF5ZXJGaW5pc2ggPSAwO1xyXG4gICAgcHJpdmF0ZSBfbGFzdEJvb3N0ID0gMDtcclxuXHJcbiAgICBwcml2YXRlIF9ydDogUGhhc2VyLkdhbWVPYmplY3RzLlJlbmRlclRleHR1cmU7XHJcbiAgICBwcml2YXRlIF9yYWNlcnM6IFJhY2VyW107XHJcblxyXG4gICAgcHJpdmF0ZSBfb2JzdGFjbGVzOiBCYXNlRW50aXR5W107XHJcblxyXG4gICAgcHJpdmF0ZSBfdGlsZVNwcml0ZTogUGhhc2VyLkdhbWVPYmplY3RzLlRpbGVTcHJpdGU7XHJcbiAgICBwcml2YXRlIF9zdGFydGluZ1Rvd2VyOiBQaGFzZXIuR2FtZU9iamVjdHMuU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBfc3RhcnRpbmdUb3dlckNsb3NlOiBQaGFzZXIuR2FtZU9iamVjdHMuU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBfYmcxOiBQaGFzZXIuR2FtZU9iamVjdHMuVGlsZVNwcml0ZTtcclxuICAgIHByaXZhdGUgX2JnMjogUGhhc2VyLkdhbWVPYmplY3RzLlRpbGVTcHJpdGU7XHJcbiAgICBwcml2YXRlIF9iZzM6IFBoYXNlci5HYW1lT2JqZWN0cy5UaWxlU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBfZmluaXNoOiBQaGFzZXIuR2FtZU9iamVjdHMuU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBfZmluaXNoZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHByaXZhdGUgX3NwZWVkVGV4dDogUGhhc2VyLkdhbWVPYmplY3RzLlRleHQ7XHJcbiAgICBwcml2YXRlIF9yYWNlTnVtYmVyVGV4dDogUGhhc2VyLkdhbWVPYmplY3RzLlRleHQ7XHJcbiAgICBwcml2YXRlIF9qdW1wQmFyOiBQaGFzZXIuR2FtZU9iamVjdHMuU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBfZnVlbEJhcjogUGhhc2VyLkdhbWVPYmplY3RzLlNwcml0ZTtcclxuICAgIFxyXG4gICAgaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9iZzEgPSB0aGlzLl9zY2VuZS5hZGQudGlsZVNwcml0ZSgwLCAtMTAwLCA4MDAsIDYwMCwgXCJiZzFcIik7XHJcbiAgICAgICAgdGhpcy5fYmcxLnNldE9yaWdpbigwLCAwKTtcclxuICAgICAgICB0aGlzLmFkZEQodGhpcy5fYmcxKTtcclxuXHJcbiAgICAgICAgdGhpcy5fYmczID0gdGhpcy5fc2NlbmUuYWRkLnRpbGVTcHJpdGUoMCwgMCwgODAwLCA2MDAsIFwiYmczXCIpO1xyXG4gICAgICAgIHRoaXMuX2JnMy5zZXRPcmlnaW4oMCwgMCk7XHJcbiAgICAgICAgdGhpcy5hZGREKHRoaXMuX2JnMyk7XHJcblxyXG4gICAgICAgIHRoaXMuX2JnMiA9IHRoaXMuX3NjZW5lLmFkZC50aWxlU3ByaXRlKDAsIDAsIDgwMCwgNjAwLCBcImJnMlwiKTtcclxuICAgICAgICB0aGlzLl9iZzIuc2V0T3JpZ2luKDAsIDApO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl9iZzIpO1xyXG5cclxuICAgICAgICB0aGlzLl9zdGFydGluZ1Rvd2VyID0gdGhpcy5fc2NlbmUuYWRkLnNwcml0ZSgtMjQwLCAtMTcwLCBcInN0YXJ0aW5nXCIpO1xyXG4gICAgICAgIHRoaXMuX3N0YXJ0aW5nVG93ZXIuc2V0T3JpZ2luKDAsIDApO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl9zdGFydGluZ1Rvd2VyKTtcclxuXHJcbiAgICAgICAgdGhpcy5fc3RhcnRpbmdUb3dlckNsb3NlID0gdGhpcy5fc2NlbmUuYWRkLnNwcml0ZSgtMjMyLCAtMTcwLCBcInN0YXJ0aW5nX2Nsb3NlXCIpO1xyXG4gICAgICAgIHRoaXMuX3N0YXJ0aW5nVG93ZXJDbG9zZS5zZXRPcmlnaW4oMCwgMCk7XHJcbiAgICAgICAgdGhpcy5fc3RhcnRpbmdUb3dlckNsb3NlLnNldFZpc2libGUoZmFsc2UpO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl9zdGFydGluZ1Rvd2VyQ2xvc2UpO1xyXG5cclxuICAgICAgICB0aGlzLl90aWxlU3ByaXRlID0gdGhpcy5fc2NlbmUuYWRkLnRpbGVTcHJpdGUoLTEwMDAsIDIwMCwgMjAwMCwgNDAwLCBcInRlcnJhaW4xXCIpO1xyXG4gICAgICAgIHRoaXMuX3RpbGVTcHJpdGUuc2V0T3JpZ2luKDAsIDApO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl90aWxlU3ByaXRlKTtcclxuXHJcbiAgICAgICAgY29uc3QgZmxvb3JSZWN0ID0gdGhpcy5fc2NlbmUubWF0dGVyLmFkZC5yZWN0YW5nbGUoMCwgMzAwLCAxMDAwMDAsIDIwMCwgeyBpc1N0YXRpYzogdHJ1ZSB9KTtcclxuICAgICAgICAvL3RoaXMuYWRkRChmbG9vclJlY3QpO1xyXG5cclxuICAgICAgICBjb25zdCBhZGpEaWZmaWN1bHR5ID0gY2FyZWVyU2VydmljZS5uUmFjZXMgLSAxO1xyXG5cclxuICAgICAgICB0aGlzLl9yYWNlcnMgPSBbXHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlPFJhY2VyPihSYWNlciwgeyB4OiAtMjA1LCB5OiAxNDAsIGl0ZW1zOiBjYXJlZXJTZXJ2aWNlLm93bmVkSXRlbXMgfSksXHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlPFJhY2VyPihSYWNlciwgeyB4OiAtMjA1LCB5OiA3MCwgaXRlbXM6IGdldE9wcG9uZW50KGFkakRpZmZpY3VsdHkgKyAyKSB9KSxcclxuICAgICAgICAgICAgdGhpcy5jcmVhdGU8UmFjZXI+KFJhY2VyLCB7IHg6IC0yMDUsIHk6IDAsIGl0ZW1zOiBnZXRPcHBvbmVudChhZGpEaWZmaWN1bHR5ICsgNCkgfSksXHJcbiAgICAgICAgXTtcclxuXHJcbiAgICAgICAgY29uc3QgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIGxldCBfbGFzdFNmeFBsYXkgPSAtMTAwMDtcclxuICAgICAgICB0aGlzLl9tYXR0ZXIud29ybGQub24oXCJjb2xsaXNpb25zdGFydFwiLCAoZXY6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBwbHlyID0gX3RoaXMuX3JhY2Vyc1swXTtcclxuICAgICAgICAgICAgY29uc3QgdCA9IF90aGlzLl9zY2VuZS50aW1lLm5vdztcclxuICAgICAgICAgICAgZm9yKGxldCBwIG9mIGV2LnBhaXJzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocC5ib2R5QSA9PSBwbHlyLnNwcml0ZS5ib2R5IHx8IHAuYm9keUIgPT0gcGx5ci5zcHJpdGUuYm9keSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vaWYgKHAuYm9keUEgPT0gZmxvb3JSZWN0IHx8IHAuYm9keUIgPT0gZmxvb3JSZWN0KSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0IC0gX2xhc3RTZnhQbGF5ID4gMzUwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF9sYXN0U2Z4UGxheSA9IHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHIgPSBNYXRoLnJhbmRvbSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAociA8IDAuNSkgU291bmRNYW5hZ2VyLnBsYXlzZngoXCJibGlwMVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSAgU291bmRNYW5hZ2VyLnBsYXlzZngoXCJibGlwMlwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5fcmFjZXJzWzBdLmlzUGxheWVyID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLl9yYWNlcnNbMV0uanVtcERlbGF5ID0gMzAwMDtcclxuXHJcbiAgICAgICAgdGhpcy5fbWF0dGVyLndvcmxkLnNldEdyYXZpdHkoMCwgMCk7XHJcblxyXG5cclxuICAgICAgICB0aGlzLl9ydCA9IHRoaXMuX3NjZW5lLmFkZC5yZW5kZXJUZXh0dXJlKDAsIDAsIDIwMDAsIDIwMDApO1xyXG4gICAgICAgIHRoaXMuX3J0LnNldE9yaWdpbigwLCAwKTtcclxuICAgICAgICB0aGlzLl9ydC5hbmdsZSA9IDEwO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl9ydCk7XHJcblxyXG4gICAgICAgIHRoaXMuZ2VuZXJhdGUoKTtcclxuXHJcbiAgICAgICAgY29uc3QgdWlCZyA9IHRoaXMuX3NjZW5lLmFkZC5zcHJpdGUoODAwLCA2MDAsIFwidWliZ1wiKTtcclxuICAgICAgICB1aUJnLnNldE9yaWdpbigxLCAxKTtcclxuICAgICAgICB0aGlzLmFkZEQodWlCZyk7XHJcblxyXG4gICAgICAgIHRoaXMuX2p1bXBCYXIgPSB0aGlzLl9zY2VuZS5hZGQuc3ByaXRlKDgwMCwgNjAwLCBcImp1bXBiYXJcIilcclxuICAgICAgICB0aGlzLl9qdW1wQmFyLnNldE9yaWdpbigxLCAxKTtcclxuICAgICAgICB0aGlzLl9qdW1wQmFyLnNldENyb3AoMCwgMTI2LCA4MDAsIDYwMCk7XHJcbiAgICAgICAgdGhpcy5hZGREKHRoaXMuX2p1bXBCYXIpO1xyXG5cclxuICAgICAgICB0aGlzLl9mdWVsQmFyID0gdGhpcy5fc2NlbmUuYWRkLnNwcml0ZSg4MDAsIDYwMCwgXCJmdWVsYmFyXCIpXHJcbiAgICAgICAgdGhpcy5fZnVlbEJhci5zZXRPcmlnaW4oMSwgMSk7XHJcbiAgICAgICAgdGhpcy5fZnVlbEJhci5zZXRDcm9wKDAsIDEyNiwgODAwLCA2MDApO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl9mdWVsQmFyKTtcclxuXHJcbiAgICAgICAgdGhpcy5fc3BlZWRUZXh0ID0gdGhpcy5fc2NlbmUuYWRkLnRleHQoNzgwLCA1NjAsIFwiMDBcIiwge1xyXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcIkFSQ0FERUNMQVNTSUNcIixcclxuICAgICAgICAgICAgZm9udFNpemU6IDcyLFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjRkZGRkZGXCIsXHJcbiAgICAgICAgICAgIGFsaWduOiBcInJpZ2h0XCIsXHJcbiAgICAgICAgICAgIGFudGlhbGlhczogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9zcGVlZFRleHQuc2V0U3Ryb2tlKFwiIzAwMDAwMFwiLCA0KTtcclxuICAgICAgICB0aGlzLl9zcGVlZFRleHQuc2V0T3JpZ2luKDEsIDEpO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl9zcGVlZFRleHQpO1xyXG5cclxuICAgICAgICB0aGlzLl9yYWNlTnVtYmVyVGV4dCA9IHRoaXMuX3NjZW5lLmFkZC50ZXh0KDEwLCAxMCwgXCJSQUNFIFwiICsgKGNhcmVlclNlcnZpY2UublJhY2VzICsgMSkudG9TdHJpbmcoKSwge1xyXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcIkFSQ0FERUNMQVNTSUNcIixcclxuICAgICAgICAgICAgZm9udFNpemU6IDMyLFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjRkZGRkZGXCIsXHJcbiAgICAgICAgICAgIGFsaWduOiBcInJpZ2h0XCIsXHJcbiAgICAgICAgICAgIGFudGlhbGlhczogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9yYWNlTnVtYmVyVGV4dC5zZXRPcmlnaW4oMCwgMCk7XHJcbiAgICAgICAgdGhpcy5hZGREKHRoaXMuX3NwZWVkVGV4dCk7XHJcblxyXG5cclxuICAgICAgICBpZiAoVVNFX1JUKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3RpbGVTcHJpdGUuc2V0VmlzaWJsZShmYWxzZSk7XHJcbiAgICAgICAgICAgIHRoaXMuX3N0YXJ0aW5nVG93ZXIuc2V0VmlzaWJsZShmYWxzZSk7XHJcbiAgICAgICAgICAgIHRoaXMuX3N0YXJ0aW5nVG93ZXJDbG9zZS5zZXRWaXNpYmxlKGZhbHNlKTtcclxuICAgICAgICAgICAgdGhpcy5fZmluaXNoLnNldFZpc2libGUoZmFsc2UpO1xyXG4gICAgICAgICAgICBmb3IobGV0IHIgb2YgdGhpcy5fcmFjZXJzKSB7XHJcbiAgICAgICAgICAgICAgICByLnNwcml0ZS5zZXRWaXNpYmxlKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIHIuYm9vc3RTcHJpdGUuc2V0VmlzaWJsZShmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICBmb3IobGV0IGlzIG9mIHIuaXRlbVNwcml0ZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpcy5zZXRWaXNpYmxlKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3IobGV0IG8gb2YgdGhpcy5fb2JzdGFjbGVzKSB7XHJcbiAgICAgICAgICAgICAgICAoPGFueT5vKS5zcHJpdGUuc2V0VmlzaWJsZShmYWxzZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9zY2VuZS5jYW1lcmFzLm1haW4uc3RhcnRGb2xsb3codGhpcy5fcmFjZXJzWzBdLnNwcml0ZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBjb3VudGRvd24gPSB0aGlzLmFkZEQodGhpcy5fc2NlbmUuYWRkLnNwcml0ZSg0MDAsIDMwMCwgXCIzMjFcIikpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lLmFuaW1zLmNyZWF0ZSh7XHJcbiAgICAgICAgICAgIGtleTogXCJjb3VudGRvd25fYW5pbVwiLFxyXG4gICAgICAgICAgICBmcmFtZXM6IHRoaXMuX3NjZW5lLmFuaW1zLmdlbmVyYXRlRnJhbWVOdW1iZXJzKFwiMzIxXCIsIHtcclxuICAgICAgICAgICAgICAgIHN0YXJ0OiAwLFxyXG4gICAgICAgICAgICAgICAgZW5kOiAyMixcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgIGZyYW1lUmF0ZTogMTUsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY291bnRkb3duLmFscGhhID0gMDtcclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgY291bnRkb3duLmFscGhhID0gMTtcclxuICAgICAgICAgICAgY291bnRkb3duLmFuaW1zLnBsYXkoXCJjb3VudGRvd25fYW5pbVwiKTtcclxuICAgICAgICAgICAgU291bmRNYW5hZ2VyLnBsYXlzZngoXCJzdGFydFwiKTtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7IFNvdW5kTWFuYWdlci5wbGF5c2Z4KFwic3RhcnRcIik7IH0sIDUwMClcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7IFNvdW5kTWFuYWdlci5wbGF5c2Z4KFwic3RhcnRcIik7IH0sIDEwMDApXHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4geyBTb3VuZE1hbmFnZXIucGxheXNmeChcInN0YXJ0MlwiKTsgfSwgMTUwMClcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy5fc3RhcnRpbmdUb3dlckNsb3NlLmFscGhhID0gMDtcclxuICAgICAgICAgICAgICAgIF90aGlzLl9tYXR0ZXIud29ybGQuc2V0R3Jhdml0eSgwLjI1LCAxKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3JhY2Vyc1swXS5zcHJpdGUuc2V0VmVsb2NpdHlYKDcpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmFjZXJzWzFdLnNwcml0ZS5zZXRWZWxvY2l0eVgoNSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9yYWNlcnNbMl0uc3ByaXRlLnNldFZlbG9jaXR5WCgzKTtcclxuICAgICAgICAgICAgICAgIGZvcihsZXQgciBvZiB0aGlzLl9yYWNlcnMpIHtcclxuICAgICAgICAgICAgICAgICAgICByLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sIDE1MDApXHJcbiAgICAgICAgfSwgMTUwMCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2VuZXJhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc3Qgb2JzdGFjbGVzID0gW1xyXG4gICAgICAgICAgICBKdW1wMSxcclxuICAgICAgICAgICAgUGxhdGZvcm0xLFxyXG4gICAgICAgICAgICBQbGF0Zm9ybTIsXHJcbiAgICAgICAgICAgIFBsYXRmb3JtMyxcclxuICAgICAgICAgICAgU3Bpbm5lcixcclxuICAgICAgICAgICAgU3Bpbm5lcjJcclxuICAgICAgICBdO1xyXG5cclxuICAgICAgICB0aGlzLl9vYnN0YWNsZXMgPSBbXTtcclxuICAgICAgICBsZXQgbk9ic3RhY2xlcyA9IDcgKyBNYXRoLmZsb29yKGNhcmVlclNlcnZpY2UublJhY2VzKjEuMjUpICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjMpO1xyXG5cclxuICAgICAgICBuT2JzdGFjbGVzID0gTWF0aC5taW4oMjIsIG5PYnN0YWNsZXMpO1xyXG4gICAgICAgIGNvbnN0IG9mZnNldCA9IDUwMDtcclxuXHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IG5PYnN0YWNsZXM7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCByID0gTWF0aC5yYW5kb20oKTtcclxuICAgICAgICAgICAgY29uc3QgeCA9IChpKjYwMCkgKyAyMDAgKyBvZmZzZXQ7XHJcbiAgICAgICAgICAgIGNvbnN0IGMgPSBvYnN0YWNsZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKm9ic3RhY2xlcy5sZW5ndGgpXTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuX29ic3RhY2xlcy5wdXNoKHRoaXMuY3JlYXRlKGMsIHtcclxuICAgICAgICAgICAgICAgIHg6IHhcclxuICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fZmluaXNoID0gdGhpcy5fc2NlbmUuYWRkLnNwcml0ZSgobk9ic3RhY2xlcyArIDEpKjYwMCArIDIwMCArIG9mZnNldCwgMTA2LCBcImZpbmlzaFwiKTtcclxuICAgIH1cclxuXHJcbiAgICBmaW5pc2goKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2ZpbmlzaGVkKSByZXR1cm47XHJcbiAgICAgICAgdGhpcy5fZmluaXNoZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICBjb25zdCBfdGhpcyA9IHRoaXM7XHJcblxyXG4gICAgICAgIGNvbnN0IGcgPSB0aGlzLl9zY2VuZS5hZGQuc3ByaXRlKDQwMCwgMzAwLCBcImZpbmlzaHR4dFwiKTtcclxuICAgICAgICBnLmFscGhhID0gMDtcclxuICAgICAgICBnLnNldFNjYWxlKDAuNSwgMC41KTtcclxuICAgICAgICBnLnNldE9yaWdpbigwLjUsIDAuNSk7XHJcblxyXG4gICAgICAgIFNvdW5kTWFuYWdlci5wbGF5c2Z4KFwiY2hlZXJpbmdcIik7XHJcblxyXG4gICAgICAgIHRoaXMuX3NjZW5lLmFkZC50d2Vlbih7XHJcbiAgICAgICAgICAgIHRhcmdldHM6IGcsXHJcbiAgICAgICAgICAgIGFscGhhOiAxLFxyXG4gICAgICAgICAgICBzY2FsZVg6IDEsXHJcbiAgICAgICAgICAgIHNjYWxlWTogMSxcclxuICAgICAgICAgICAgZHVyYXRpb246IDcwMCxcclxuICAgICAgICAgICAgZWFzZTogJ1Bvd2VyMidcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGNhcmVlclNlcnZpY2UublJhY2VzKys7XHJcbiAgICAgICAgICAgIHJhY2VGaW5pc2hTZXJ2aWNlLnBsYWNlbWVudCA9IHRoaXMuX3BsYXllckZpbmlzaDtcclxuICAgICAgICAgICAgcmFjZUZpbmlzaFNlcnZpY2UuZWFybmluZ3MgPSAoNTAgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqOCkgKyhjYXJlZXJTZXJ2aWNlLm5SYWNlcyoxMCkpKig0IC0gdGhpcy5fcGxheWVyRmluaXNoKTtcclxuICAgICAgICAgICAgaWYgKGNhcmVlclNlcnZpY2UublJhY2VzID4gNCkgcmFjZUZpbmlzaFNlcnZpY2UuZWFybmluZ3MgKz0gMzA7XHJcbiAgICAgICAgICAgIGlmIChjYXJlZXJTZXJ2aWNlLm5SYWNlcyA+IDgpIHJhY2VGaW5pc2hTZXJ2aWNlLmVhcm5pbmdzICs9IDMwO1xyXG4gICAgICAgICAgICBjYXJlZXJTZXJ2aWNlLm1vbmV5ICs9IHJhY2VGaW5pc2hTZXJ2aWNlLmVhcm5pbmdzO1xyXG4gICAgICAgICAgICBnLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgX3RoaXMuZmFkZU91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy5fZ2FtZS5zd2l0Y2hDb250cm9sbGVyKFJhY2VGaW5pc2hDb250cm9sbGVyKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSwgMTcwMCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuZGVzdHJveSgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBhZGpEcmF3KHNwcjogYW55LCB4OiBudW1iZXIsIHk6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuX3J0LmRyYXcoc3ByLCB4ICsgc3ByLngsIHkgKyBzcHIueSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLmRlc3Ryb3llZCkgcmV0dXJuO1xyXG5cclxuICAgICAgICBzdXBlci51cGRhdGUoKTtcclxuXHJcbiAgICAgICAgY29uc3QgcHMgPSB0aGlzLl9yYWNlcnNbMF07XHJcblxyXG4gICAgICAgIHRoaXMuX3RpbGVTcHJpdGUueCA9IHBzLnNwcml0ZS54IC0gODAwO1xyXG4gICAgICAgIHRoaXMuX3RpbGVTcHJpdGUudGlsZVBvc2l0aW9uWCArPSAoPGFueT5wcy5zcHJpdGUuYm9keSkudmVsb2NpdHkueDtcclxuICAgICAgICB0aGlzLl9iZzEudGlsZVBvc2l0aW9uWCArPSAoPGFueT5wcy5zcHJpdGUuYm9keSkudmVsb2NpdHkueCowLjI7XHJcbiAgICAgICAgdGhpcy5fYmcyLnRpbGVQb3NpdGlvblggKz0gKDxhbnk+cHMuc3ByaXRlLmJvZHkpLnZlbG9jaXR5LngqMC44O1xyXG4gICAgICAgIHRoaXMuX2JnMy50aWxlUG9zaXRpb25YICs9ICg8YW55PnBzLnNwcml0ZS5ib2R5KS52ZWxvY2l0eS54KjAuNTtcclxuXHJcblxyXG4gICAgICAgIHRoaXMuX3J0LmNsZWFyKCk7XHJcblxyXG4gICAgICAgIGxldCBzaGFrZVggPSAwO1xyXG4gICAgICAgIGxldCBzaGFrZVkgPSAwO1xyXG5cclxuICAgICAgICBjb25zdCBwbGF5ZXIgPSB0aGlzLl9yYWNlcnNbMF07XHJcblxyXG4gICAgICAgIGlmIChwbGF5ZXIuYm9vc3RpbmcgJiYgcGxheWVyLmhhc1JvY2tldCAmJiBwbGF5ZXIuZnVlbCA+IDApIHtcclxuICAgICAgICAgICAgc2hha2VYID0gKE1hdGgucmFuZG9tKCkqOCkgLSA0O1xyXG4gICAgICAgICAgICBzaGFrZVkgPSAoTWF0aC5yYW5kb20oKSo4KSAtIDQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCB4ID0gMzAwIC0gcHMuc3ByaXRlLnggKyBzaGFrZVg7XHJcbiAgICAgICAgY29uc3QgeSA9IDI3MCAtIHBzLnNwcml0ZS55ICsgc2hha2VZO1xyXG5cclxuICAgICAgICBjb25zdCBib3VuZEFkaiA9IHRoaXMuYWRqRHJhdy5iaW5kKHRoaXMpO1xyXG4gICAgICAgIGlmIChVU0VfUlQpIHtcclxuICAgICAgICAgICAgdGhpcy5hZGpEcmF3KHRoaXMuX3RpbGVTcHJpdGUsIHgsIHkpO1xyXG4gICAgICAgICAgICB0aGlzLmFkakRyYXcodGhpcy5fc3RhcnRpbmdUb3dlciwgeCwgeSk7XHJcbiAgICAgICAgICAgIHRoaXMuYWRqRHJhdyh0aGlzLl9zdGFydGluZ1Rvd2VyQ2xvc2UsIHgsIHkpO1xyXG4gICAgICAgICAgICB0aGlzLmFkakRyYXcodGhpcy5fZmluaXNoLCB4LCB5KTtcclxuICAgICAgICAgICAgZm9yKGxldCByIG9mIHRoaXMuX3JhY2Vycykge1xyXG4gICAgICAgICAgICAgICAgci5kcmF3KGJvdW5kQWRqLCB4LCB5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3IobGV0IG8gb2YgdGhpcy5fb2JzdGFjbGVzKSB7XHJcbiAgICAgICAgICAgICAgICAoPGFueT5vKS5kcmF3KGJvdW5kQWRqLCB4LCB5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX2lucHV0LnVwLmlzRG93bikge1xyXG4gICAgICAgICAgICBwbGF5ZXIuanVtcCgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX2lucHV0LnJpZ2h0LmlzRG93bikge1xyXG4gICAgICAgICAgICBwbGF5ZXIubW92ZSgxKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9pbnB1dC5sZWZ0LmlzRG93bikge1xyXG4gICAgICAgICAgICBwbGF5ZXIubW92ZSgtMSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwbGF5ZXIuYm9vc3RpbmcgPSB0aGlzLl9pbnB1dC5zcGFjZS5pc0Rvd247XHJcblxyXG4gICAgICAgIGlmIChwbGF5ZXIuYm9vc3RpbmcgJiYgcGxheWVyLmhhc1JvY2tldCAmJiBwbGF5ZXIuZnVlbCA+IDAgJiYgdGhpcy5fc2NlbmUudGltZS5ub3cgLSB0aGlzLl9sYXN0Qm9vc3QgPiA0MDApIHtcclxuICAgICAgICAgICAgdGhpcy5fbGFzdEJvb3N0ID0gdGhpcy5fc2NlbmUudGltZS5ub3c7XHJcbiAgICAgICAgICAgIFNvdW5kTWFuYWdlci5wbGF5c2Z4KFwiYm9vc3RcIik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIXBsYXllci5ib29zdGluZykge1xyXG4gICAgICAgICAgICBTb3VuZE1hbmFnZXIuc3RvcFNmeChcImJvb3N0XCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fc3BlZWRUZXh0LnRleHQgPSBNYXRoLmZsb29yKCg8YW55PnBsYXllci5zcHJpdGUpLmJvZHkudmVsb2NpdHkueCo1KS50b1N0cmluZygpO1xyXG5cclxuICAgICAgICBmb3IobGV0IHIgb2YgdGhpcy5fcmFjZXJzKSB7XHJcbiAgICAgICAgICAgIGlmIChyLnNwcml0ZS54ID4gdGhpcy5fZmluaXNoLnggKyAxMCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFyLmZpbmlzaFQpIHtcclxuICAgICAgICAgICAgICAgICAgICByLmZpbmlzaFQgPSB0aGlzLl9zY2VuZS50aW1lLm5vdztcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9maW5pc2hlcysrO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyLmlzUGxheWVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3BsYXllckZpbmlzaCA9IHRoaXMuX2ZpbmlzaGVzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZpbmlzaCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyAxMjZcclxuICAgICAgICAvLyAyNDRcclxuICAgICAgICBjb25zdCB0ID0gdGhpcy5fc2NlbmUudGltZS5ub3c7XHJcbiAgICAgICAgY29uc3QganQgPSBNYXRoLm1pbigxLCAodCAtIHBsYXllci5sYXN0SnVtcEF0KS9wbGF5ZXIuanVtcERlbGF5KTtcclxuICAgICAgICB0aGlzLl9qdW1wQmFyLnNldENyb3AoMCwgMjQ0IC0gKGp0KigyNDQgLSAxMjYpKSwgODAwLCA2MDApO1xyXG5cclxuICAgICAgICBjb25zdCBmdCA9IE1hdGgubWluKDEsIHBsYXllci5mdWVsLzEwMCk7XHJcbiAgICAgICAgdGhpcy5fZnVlbEJhci5zZXRDcm9wKDAsIDI0NCAtIChmdCooMjQ0IC0gMTI2KSksIDgwMCwgNjAwKTtcclxuICAgIH1cclxufSIsImltcG9ydCB7IEJhc2VDb250cm9sbGVyIH0gZnJvbSBcIi4vQmFzZUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IGNhcmVlclNlcnZpY2UgZnJvbSBcIi4uL3NlcnZpY2VzL2NhcmVlclNlcnZpY2VcIjtcclxuaW1wb3J0IHtpdGVtU2VydmljZSwgSUl0ZW19IGZyb20gXCIuLi9zZXJ2aWNlcy9pdGVtc1NlcnZpY2VcIjtcclxuaW1wb3J0IHsgUmFjZXIgfSBmcm9tIFwiLi4vZW50aXRpZXMvUmFjZXJcIjtcclxuaW1wb3J0IHsgUGxheUNvbnRyb2xsZXIgfSBmcm9tIFwiLi9QbGF5Q29udHJvbGxlclwiO1xyXG5pbXBvcnQgU291bmRNYW5hZ2VyIGZyb20gXCIuLi9oZWxwZXJzL1NvdW5kTWFuYWdlclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFN0b3JlQ29udHJvbGxlciBleHRlbmRzIEJhc2VDb250cm9sbGVyIHtcclxuXHJcbiAgICBwcml2YXRlIF9zdG9yZUJnOiBQaGFzZXIuR2FtZU9iamVjdHMuU3ByaXRlO1xyXG4gICAgcHJpdmF0ZSBfbW9uZXlUZXh0OiBQaGFzZXIuR2FtZU9iamVjdHMuVGV4dDtcclxuICAgIHByaXZhdGUgX2l0ZW1zOiBTdG9yZUl0ZW1bXTtcclxuICAgIHByaXZhdGUgX2Rlc2NUZXh0OiBQaGFzZXIuR2FtZU9iamVjdHMuVGV4dDtcclxuICAgIHByaXZhdGUgX3ByaWNlVGV4dDogUGhhc2VyLkdhbWVPYmplY3RzLlRleHQ7XHJcbiAgICBwcml2YXRlIF9wcmV2aWV3OiBSYWNlcjtcclxuICAgIHByaXZhdGUgX2J1eUJ0bjogUGhhc2VyLkdhbWVPYmplY3RzLlNwcml0ZTtcclxuICAgIHByaXZhdGUgX3NlbEl0ZW06IElJdGVtO1xyXG4gICAgcHJpdmF0ZSBfZXhpdFRleHQ6IFBoYXNlci5HYW1lT2JqZWN0cy5UZXh0O1xyXG4gICAgcHJpdmF0ZSBfc3RhcnRUOiBudW1iZXI7XHJcblxyXG4gICAgaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9zdG9yZUJnID0gdGhpcy5fc2NlbmUuYWRkLnNwcml0ZSgwLCAwLCBcInN0b3JlXCIpO1xyXG4gICAgICAgIHRoaXMuX3N0b3JlQmcuc2V0T3JpZ2luKDAsIDApO1xyXG4gICAgICAgIHRoaXMuX21vbmV5VGV4dCA9IHRoaXMuX3NjZW5lLmFkZC50ZXh0KDc1NSwgMTgsIGNhcmVlclNlcnZpY2UubW9uZXkudG9TdHJpbmcoKSwge1xyXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcIkFSQ0FERUNMQVNTSUNcIixcclxuICAgICAgICAgICAgZm9udFNpemU6IDQ4LFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjRkZGRkZGXCIsXHJcbiAgICAgICAgICAgIGFsaWduOiBcInJpZ2h0XCIsXHJcbiAgICAgICAgICAgIGFudGlhbGlhczogZmFsc2VcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9tb25leVRleHQuc2V0T3JpZ2luKDEsIDApO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl9tb25leVRleHQpO1xyXG5cclxuICAgICAgICB0aGlzLl9leGl0VGV4dCA9IHRoaXMuX3NjZW5lLmFkZC50ZXh0KDQwLCA1MTAsIFwiZXhpdFwiLCB7XHJcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwiQVJDQURFQ0xBU1NJQ1wiLFxyXG4gICAgICAgICAgICBmb250U2l6ZTogNjAsXHJcbiAgICAgICAgICAgIGNvbG9yOiBcIiNGRjAwMDBcIixcclxuICAgICAgICAgICAgYW50aWFsaWFzOiBmYWxzZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX2V4aXRUZXh0LnNldFN0cm9rZShcIiMwMDAwMDBcIiwgNCk7XHJcbiAgICAgICAgdGhpcy5fZXhpdFRleHQuc2V0T3JpZ2luKDAsIDApO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl9leGl0VGV4dCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2V4aXRUZXh0LnNldEludGVyYWN0aXZlKCk7XHJcbiAgICAgICAgY29uc3QgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuX2V4aXRUZXh0Lm9uKFwicG9pbnRlcmRvd25cIiwgKHBvaW50ZXI6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBTb3VuZE1hbmFnZXIucGxheXNmeChcInVpc2VsZWN0XCIpO1xyXG4gICAgICAgICAgICBfdGhpcy5fcHJldmlldy5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIF90aGlzLmZhZGVPdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgX3RoaXMuX2dhbWUuc3dpdGNoQ29udHJvbGxlcihQbGF5Q29udHJvbGxlcik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy5fZGVzY1RleHQgPSB0aGlzLl9zY2VuZS5hZGQudGV4dCgyODAsIDM4NiwgXCJcIiwge1xyXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcIkFSQ0FERUNMQVNTSUNcIixcclxuICAgICAgICAgICAgZm9udFNpemU6IDMyLFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjRkZGRkZGXCIsXHJcbiAgICAgICAgICAgIGFsaWduOiBcImxlZnRcIixcclxuICAgICAgICAgICAgYW50aWFsaWFzOiBmYWxzZSxcclxuICAgICAgICAgICAgd29yZFdyYXA6IHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA1MDBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX2Rlc2NUZXh0LnNldE9yaWdpbigwLCAwKTtcclxuICAgICAgICB0aGlzLmFkZEQodGhpcy5fZGVzY1RleHQpO1xyXG5cclxuICAgICAgICB0aGlzLl9wcmljZVRleHQgPSB0aGlzLl9zY2VuZS5hZGQudGV4dCgyODAsIDkwLCBcIjBcIiwge1xyXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcIkFSQ0FERUNMQVNTSUNcIixcclxuICAgICAgICAgICAgZm9udFNpemU6IDQwLFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjRkZGRkZGXCIsXHJcbiAgICAgICAgICAgIGFsaWduOiBcImxlZnRcIixcclxuICAgICAgICAgICAgYW50aWFsaWFzOiBmYWxzZSxcclxuICAgICAgICAgICAgd29yZFdyYXA6IHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA1MDBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX3ByaWNlVGV4dC5zZXRPcmlnaW4oMCwgMCk7XHJcbiAgICAgICAgdGhpcy5hZGREKHRoaXMuX3ByaWNlVGV4dCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2l0ZW1zID0gW107XHJcbiAgICAgICAgbGV0IGlkeCA9IDA7XHJcbiAgICAgICAgZm9yKGxldCBrZXkgaW4gaXRlbVNlcnZpY2UuSVRFTVMpIHtcclxuICAgICAgICAgICAgY29uc3QgaXRlbSA9IDxJSXRlbT4oaXRlbVNlcnZpY2UuSVRFTVNba2V5XSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgc2tpcCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZiAoaXRlbS5haU9ubHkgfHwgY2FyZWVyU2VydmljZS5vd25lZEl0ZW1zLmZpbmQoaSA9PiBpLm5hbWUgPT0gaXRlbS5uYW1lKSkgc2tpcCA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICBpZiAoISFpdGVtLnJlcXVpcmVtZW50cykge1xyXG4gICAgICAgICAgICAgICAgZm9yKGxldCByIG9mIGl0ZW0ucmVxdWlyZW1lbnRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFzID0gY2FyZWVyU2VydmljZS5vd25lZEl0ZW1zLmZpbmRJbmRleChpID0+IGkuaWQgPT0gcilcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyLCBjYXJlZXJTZXJ2aWNlLm93bmVkSXRlbXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGhhcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGhhcyA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2tpcCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoc2tpcCkgY29udGludWU7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBzdG9yZUl0ZW0gPSBuZXcgU3RvcmVJdGVtKHRoaXMuX3NjZW5lLCBpdGVtLCBpZHgsIHRoaXMpO1xyXG4gICAgICAgICAgICB0aGlzLl9pdGVtcy5wdXNoKHN0b3JlSXRlbSk7XHJcbiAgICAgICAgICAgIGlkeCsrO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fcHJldmlldyA9IG5ldyBSYWNlcih0aGlzLl9zY2VuZSwgdGhpcy5faW5wdXQsIHRoaXMuX3NoYWRlck1hbmFnZXIsIHtcclxuICAgICAgICAgICAgaXRlbXM6IGNhcmVlclNlcnZpY2Uub3duZWRJdGVtc1xyXG4gICAgICAgIH0sIHRoaXMpO1xyXG4gICAgICAgIHRoaXMuX3ByZXZpZXcuc3ByaXRlLnggPSA1MzA7XHJcbiAgICAgICAgdGhpcy5fcHJldmlldy5zcHJpdGUueSA9IDIyMDtcclxuICAgICAgICB0aGlzLl9wcmV2aWV3LnNwcml0ZS5zZXRTY2FsZSg0LCA0KTtcclxuXHJcbiAgICAgICAgdGhpcy5fYnV5QnRuID0gdGhpcy5fc2NlbmUuYWRkLnNwcml0ZSg2MjAsIDMyMCwgXCJidXlidG5cIik7XHJcbiAgICAgICAgdGhpcy5fYnV5QnRuLnNldE9yaWdpbigwLCAwKTtcclxuICAgICAgICB0aGlzLl9idXlCdG4uc2V0VmlzaWJsZShmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5fYnV5QnRuLnNldEludGVyYWN0aXZlKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2J1eUJ0bi5vbihcInBvaW50ZXJkb3duXCIsIChwb2ludGVyOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgX3RoaXMuYnV5KCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuX3N0YXJ0VCA9IHRoaXMuX3NjZW5lLnRpbWUubm93O1xyXG4gICAgfVxyXG5cclxuICAgIGJ1eSgpIHtcclxuICAgICAgICBpZiAoY2FyZWVyU2VydmljZS5tb25leSA+PSB0aGlzLl9zZWxJdGVtLnByaWNlKSB7XHJcbiAgICAgICAgICAgIGNhcmVlclNlcnZpY2UubW9uZXkgLT0gdGhpcy5fc2VsSXRlbS5wcmljZTtcclxuICAgICAgICAgICAgY2FyZWVyU2VydmljZS5vd25lZEl0ZW1zLnB1c2godGhpcy5fc2VsSXRlbSk7XHJcbiAgICAgICAgICAgIHRoaXMuaWdub3JlRmFkZSgpO1xyXG4gICAgICAgICAgICB0aGlzLl9nYW1lLnN3aXRjaENvbnRyb2xsZXIoU3RvcmVDb250cm9sbGVyKTtcclxuICAgICAgICAgICAgU291bmRNYW5hZ2VyLnBsYXlzZngoXCJjaGFjaGluZ1wiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc2VsZWN0KGl0ZW06IElJdGVtKSB7XHJcbiAgICAgICAgdGhpcy5fc2VsSXRlbSA9IGl0ZW07XHJcbiAgICAgICAgdGhpcy5fYnV5QnRuLnNldFZpc2libGUodHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5fZGVzY1RleHQudGV4dCA9IGl0ZW0uZGVzY3JpcHRpb24uc3BsaXQoXCJcIikubWFwKGMgPT4gYyA9PSBcIiBcIiA/IFwiICAgXCIgOiBjKS5qb2luKFwiXCIpO1xyXG4gICAgICAgIHRoaXMuX3ByaWNlVGV4dC50ZXh0ID0gaXRlbS5wcmljZS50b1N0cmluZygpO1xyXG5cclxuICAgICAgICB0aGlzLl9wcmV2aWV3LmRlc3Ryb3koKTtcclxuICAgICAgICB0aGlzLl9wcmV2aWV3ID0gbmV3IFJhY2VyKHRoaXMuX3NjZW5lLCB0aGlzLl9pbnB1dCwgdGhpcy5fc2hhZGVyTWFuYWdlciwge1xyXG4gICAgICAgICAgICBpdGVtczogY2FyZWVyU2VydmljZS5vd25lZEl0ZW1zLmNvbmNhdChbaXRlbV0pXHJcbiAgICAgICAgfSwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5fcHJldmlldy5zcHJpdGUueCA9IDUzMDtcclxuICAgICAgICB0aGlzLl9wcmV2aWV3LnNwcml0ZS55ID0gMjIwO1xyXG4gICAgICAgIHRoaXMuX3ByZXZpZXcuc3ByaXRlLnNldFNjYWxlKDQsIDQpO1xyXG4gICAgfVxyXG5cclxuICAgIGRlc2VsZWN0QWxsKCkge1xyXG4gICAgICAgIGZvcihsZXQgaSBvZiB0aGlzLl9pdGVtcykge1xyXG4gICAgICAgICAgICBpLmRlc2VsZWN0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy5fZmFkZWRPdXQpIHJldHVybjtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX2lucHV0LnNwYWNlLmlzRG93biAmJiB0aGlzLl9zY2VuZS50aW1lLm5vdyAtIHRoaXMuX3N0YXJ0VCA+IDEwMDApIHtcclxuICAgICAgICAgICAgY29uc3QgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgICAgICB0aGlzLl9wcmV2aWV3LmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgdGhpcy5mYWRlT3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIF90aGlzLl9nYW1lLnN3aXRjaENvbnRyb2xsZXIoUGxheUNvbnRyb2xsZXIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fcHJldmlldy5wcmV2aWV3VXBkYXRlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZGVzdHJveSgpIHtcclxuICAgICAgICBzdXBlci5kZXN0cm95KCk7XHJcblxyXG4gICAgICAgIHRoaXMuX3ByZXZpZXcuZGVzdHJveSgpO1xyXG4gICAgICAgIHRoaXMuX3N0b3JlQmcuZGVzdHJveSgpO1xyXG5cclxuICAgICAgICBmb3IobGV0IHNpIG9mIHRoaXMuX2l0ZW1zKSB7XHJcbiAgICAgICAgICAgIHNpLmRlc3Ryb3koKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIFN0b3JlSXRlbSB7XHJcbiAgICBwcml2YXRlIF9zcHJpdGU6IFBoYXNlci5HYW1lT2JqZWN0cy5TcHJpdGU7XHJcbiAgICBwcml2YXRlIF90ZXh0OiBQaGFzZXIuR2FtZU9iamVjdHMuVGV4dDtcclxuICAgIHByaXZhdGUgX3NlbGVjdGVkOiBib29sZWFuO1xyXG4gICAgcHJpdmF0ZSBfY29udHJvbGxlcjogU3RvcmVDb250cm9sbGVyO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHNjZW5lOiBQaGFzZXIuU2NlbmUsIHB1YmxpYyBpdGVtOiBJSXRlbSwgaWR4OiBudW1iZXIsIGNvbnRyb2xsZXI6IFN0b3JlQ29udHJvbGxlcikge1xyXG4gICAgICAgIHRoaXMuX2NvbnRyb2xsZXIgPSBjb250cm9sbGVyO1xyXG5cclxuICAgICAgICBjb25zdCB5ID0gMjggKyAoaWR4KjQ0KTtcclxuICAgICAgICB0aGlzLl9zcHJpdGUgPSBzY2VuZS5hZGQuc3ByaXRlKDM0LCB5LCBcInN0b3JlaXRlbVwiKTtcclxuICAgICAgICB0aGlzLl9zcHJpdGUuc2V0T3JpZ2luKDAsIDApO1xyXG4gICAgICAgIHRoaXMuX3RleHQgPSBzY2VuZS5hZGQudGV4dCg0MCwgeSArIDgsIGl0ZW0ubmFtZSwge1xyXG4gICAgICAgICAgICBmb250RmFtaWx5OiBcIkFSQ0FERUNMQVNTSUNcIixcclxuICAgICAgICAgICAgZm9udFNpemU6IDE4LFxyXG4gICAgICAgICAgICBjb2xvcjogXCIjRkZGRkZGXCIsXHJcbiAgICAgICAgICAgIGFsaWduOiBcImxlZnRcIlxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLl9zcHJpdGUuc2V0SW50ZXJhY3RpdmUoKTtcclxuXHJcbiAgICAgICAgY29uc3QgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuX3Nwcml0ZS5vbihcInBvaW50ZXJkb3duXCIsIChwb2ludGVyOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgU291bmRNYW5hZ2VyLnBsYXlzZngoXCJ1aXNlbGVjdFwiKTtcclxuICAgICAgICAgICAgX3RoaXMuX2NvbnRyb2xsZXIuZGVzZWxlY3RBbGwoKTtcclxuICAgICAgICAgICAgX3RoaXMuc2VsZWN0KCk7XHJcbiAgICAgICAgICAgIF90aGlzLl9jb250cm9sbGVyLnNlbGVjdCh0aGlzLml0ZW0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzZWxlY3QoKSB7XHJcbiAgICAgICAgdGhpcy5fc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuX3Nwcml0ZS5zZXRUZXh0dXJlKFwic3RvcmVpdGVtX3NcIik7XHJcbiAgICB9XHJcblxyXG4gICAgZGVzZWxlY3QoKSB7XHJcbiAgICAgICAgdGhpcy5fc2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLl9zcHJpdGUuc2V0VGV4dHVyZShcInN0b3JlaXRlbVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBkZXN0cm95KCkge1xyXG4gICAgICAgIHRoaXMuX3Nwcml0ZS5kZXN0cm95KCk7XHJcbiAgICAgICAgdGhpcy5fdGV4dC5kZXN0cm95KCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBCYXNlQ29udHJvbGxlciB9IGZyb20gXCIuL0Jhc2VDb250cm9sbGVyXCI7XHJcbmltcG9ydCBjYXJlZXJTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9jYXJlZXJTZXJ2aWNlXCI7XHJcbmltcG9ydCB7aXRlbVNlcnZpY2UsIElJdGVtfSBmcm9tIFwiLi4vc2VydmljZXMvaXRlbXNTZXJ2aWNlXCI7XHJcbmltcG9ydCB7IFJhY2VyIH0gZnJvbSBcIi4uL2VudGl0aWVzL1JhY2VyXCI7XHJcbmltcG9ydCB7IFBsYXlDb250cm9sbGVyIH0gZnJvbSBcIi4vUGxheUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHJhY2VGaW5pc2hTZXJ2aWNlIGZyb20gXCIuLi9zZXJ2aWNlcy9yYWNlRmluaXNoU2VydmljZVwiO1xyXG5pbXBvcnQgeyBTdG9yZUNvbnRyb2xsZXIgfSBmcm9tIFwiLi9TdG9yZUNvbnRyb2xsZXJcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBUaXRsZUNvbnRyb2xsZXIgZXh0ZW5kcyBCYXNlQ29udHJvbGxlciB7XHJcbiAgICBwcml2YXRlIF9iZzogUGhhc2VyLkdhbWVPYmplY3RzLlNwcml0ZTtcclxuXHJcbiAgICBpbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2JnID0gdGhpcy5fc2NlbmUuYWRkLnNwcml0ZSgwLCAwLFwidGl0bGVcIik7XHJcbiAgICAgICAgdGhpcy5fYmcuc2V0T3JpZ2luKDAsIDApO1xyXG4gICAgICAgIHRoaXMuYWRkRCh0aGlzLl9iZyk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLl9pbnB1dC5zcGFjZS5pc0Rvd24gJiYgIXRoaXMuX2ZhZGVkT3V0KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IF90aGlzID0gdGhpcztcclxuICAgICAgICAgICAgdGhpcy5mYWRlT3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIF90aGlzLl9nYW1lLnN3aXRjaENvbnRyb2xsZXIoU3RvcmVDb250cm9sbGVyKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRlc3Ryb3koKSB7XHJcbiAgICAgICAgc3VwZXIuZGVzdHJveSgpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHtCYXNlQ29udHJvbGxlciwgQ29udHJvbGxlckFyZ3N9IGZyb20gXCIuL2NvbnRyb2xsZXJzL0Jhc2VDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7UGxheUNvbnRyb2xsZXJ9IGZyb20gXCIuL2NvbnRyb2xsZXJzL1BsYXlDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7TG9hZGVyfSBmcm9tIFwiLi9Mb2FkZXJcIjtcclxuaW1wb3J0IHtTaGFkZXJNYW5hZ2VyfSBmcm9tIFwiLi9zaGFkZXJzL1NoYWRlck1hbmFnZXJcIjtcclxuaW1wb3J0IE1hdGhIZWxwZXJzIGZyb20gXCIuL2hlbHBlcnMvTWF0aEhlbHBlcnNcIjtcclxuaW1wb3J0IHsgU3RvcmVDb250cm9sbGVyIH0gZnJvbSBcIi4vY29udHJvbGxlcnMvU3RvcmVDb250cm9sbGVyXCI7XHJcbmltcG9ydCBTY2FsZU1hbmFnZXIgZnJvbSBcIi4vc2NhbGVNYW5hZ2VyXCI7XHJcbmltcG9ydCB7IFRpdGxlQ29udHJvbGxlciB9IGZyb20gXCIuL2NvbnRyb2xsZXJzL1RpdGxlQ29udHJvbGxlclwiO1xyXG5pbXBvcnQgc291bmRNYW5hZ2VyIGZyb20gXCIuL2hlbHBlcnMvU291bmRNYW5hZ2VyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUm9ja1JhY2luZ0dhbWUge1xyXG4gICAgcHJpdmF0ZSBfZ2FtZTogUGhhc2VyLkdhbWU7XHJcbiAgICBwcml2YXRlIF9zY2VuZTogUGhhc2VyLlNjZW5lO1xyXG4gICAgcHJpdmF0ZSBfbWF0dGVyOiBQaGFzZXIuUGh5c2ljcy5NYXR0ZXIuTWF0dGVyUGh5c2ljcztcclxuICAgIHByaXZhdGUgX2NvbnRyb2xsZXI6IEJhc2VDb250cm9sbGVyO1xyXG4gICAgcHJpdmF0ZSBfc2hhZGVyTWFuYWdlcjogU2hhZGVyTWFuYWdlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgdGhpcy5fZ2FtZSA9IG5ldyBQaGFzZXIuR2FtZSh7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MDAsXHJcbiAgICAgICAgICAgIGhlaWdodDogNjAwLFxyXG4gICAgICAgICAgICB0eXBlOiBQaGFzZXIuQVVUTyxcclxuICAgICAgICAgICAgcmVuZGVyOiB7XHJcbiAgICAgICAgICAgICAgICBwaXhlbEFydDogdHJ1ZVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzY2VuZToge1xyXG4gICAgICAgICAgICAgICAgcHJlbG9hZCgpIHtcclxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5fc2NlbmUgPSB0aGlzO1xyXG4gICAgICAgICAgICAgICAgICAgICg8YW55PndpbmRvdykuc2NlbmUgPSB0aGlzO1xyXG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnByZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjcmVhdGUoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc291bmRNYW5hZ2VyLmluaXQodGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgc291bmRNYW5hZ2VyLnBsYXlCZ20oKTtcclxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5fbWF0dGVyID0gdGhpcy5tYXR0ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuY3JlYXRlKCk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgdXBkYXRlKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnVwZGF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBwaHlzaWNzOiB7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiBcIm1hdHRlclwiLFxyXG4gICAgICAgICAgICAgICAgbWF0dGVyOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9kZWJ1ZzogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjYWxsYmFja3M6IHtcclxuICAgICAgICAgICAgICAgIHBvc3RCb290OiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3IFNjYWxlTWFuYWdlcih0aGlzLl9nYW1lLmNhbnZhcywgIXRoaXMuX2dhbWUuZGV2aWNlLm9zLmRlc2t0b3ApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICg8YW55PndpbmRvdykuZ2FtZSA9IHRoaXMuX2dhbWU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLypcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBldiA9PiB7XHJcbiAgICAgICAgICAgIGlmIChldi53aGljaCA9PT0gNzApICB7XHJcbiAgICAgICAgICAgICAgICAoPGFueT5fdGhpcy5fZ2FtZS5jYW52YXMpW190aGlzLl9nYW1lLmRldmljZS5mdWxsc2NyZWVuLnJlcXVlc3RdKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAqL1xyXG4gICAgfVxyXG5cclxuICAgIHByZWxvYWQoKSB7XHJcbiAgICAgICAgY29uc3QgbG9hZGVyID0gbmV3IExvYWRlcih0aGlzLl9zY2VuZSk7XHJcbiAgICAgICAgbG9hZGVyLmxvYWQoKTtcclxuICAgIH1cclxuXHJcbiAgICBzd2l0Y2hDb250cm9sbGVyKGM6IGFueSkge1xyXG4gICAgICAgIGlmICghIXRoaXMuX2NvbnRyb2xsZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5fY29udHJvbGxlci5kZXN0cm95KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2NvbnRyb2xsZXIgPSA8QmFzZUNvbnRyb2xsZXI+KG5ldyBjKG51bGwsIHRoaXMuX3NjZW5lLCB0aGlzLl9zaGFkZXJNYW5hZ2VyLCB0aGlzLl9tYXR0ZXIsIHRoaXMpKTtcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGUoKSB7XHJcbiAgICAgICAgdGhpcy5fc2hhZGVyTWFuYWdlciA9IG5ldyBTaGFkZXJNYW5hZ2VyKHRoaXMuX2dhbWUsIHRoaXMuX3NjZW5lKTtcclxuICAgICAgICB0aGlzLnN3aXRjaENvbnRyb2xsZXIoVGl0bGVDb250cm9sbGVyKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoKSB7XHJcbiAgICAgICAgaWYgKCEhdGhpcy5fY29udHJvbGxlcikge1xyXG4gICAgICAgICAgICB0aGlzLl9jb250cm9sbGVyLnVwZGF0ZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9zaGFkZXJNYW5hZ2VyLnVwZGF0ZSgpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHtSb2NrUmFjaW5nR2FtZX0gZnJvbSBcIi4vUm9ja1JhY2luZ0dhbWVcIjtcclxuXHJcbmNvbnN0IGcgPSBuZXcgUm9ja1JhY2luZ0dhbWUoKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')}]);