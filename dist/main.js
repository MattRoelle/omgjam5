!function(Q){var U={};function F(B){if(U[B])return U[B].exports;var I=U[B]={i:B,l:!1,exports:{}};return Q[B].call(I.exports,I,I.exports,F),I.l=!0,I.exports}F.m=Q,F.c=U,F.d=function(Q,U,B){F.o(Q,U)||Object.defineProperty(Q,U,{enumerable:!0,get:B})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,U){if(1&U&&(Q=F(Q)),8&U)return Q;if(4&U&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(F.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&U&&"string"!=typeof Q)for(var I in Q)F.d(B,I,function(U){return Q[U]}.bind(null,I));return B},F.n=function(Q){var U=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(U,"a",U),U},F.o=function(Q,U){return Object.prototype.hasOwnProperty.call(Q,U)},F.p="",F(F.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/Loader.ts\nvar Loader = /** @class */ (function () {\r\n    function Loader(_scene) {\r\n        this._scene = _scene;\r\n    }\r\n    Loader.prototype.load = function () {\r\n        this._scene.load.json("shapes", "/assets/physics.json");\r\n        this._scene.load.image("terrain1", "/assets/terrain1.png");\r\n        this._scene.load.image("uibg", "/assets/uibg.png");\r\n        this._scene.load.image("finish", "/assets/finish.png");\r\n        this._scene.load.image("store", "/assets/store.png");\r\n        this._scene.load.image("bg1", "/assets/bg1.png");\r\n        this._scene.load.image("bg2", "/assets/bg2.png");\r\n        this._scene.load.image("bg3", "/assets/bg3.png");\r\n        this._scene.load.image("rock1", "/assets/rock1.png");\r\n        this._scene.load.image("rock2", "/assets/rock2.png");\r\n        this._scene.load.image("rock3", "/assets/rock3.png");\r\n        this._scene.load.image("rock4", "/assets/rock4.png");\r\n        this._scene.load.image("rock5", "/assets/rock5.png");\r\n        this._scene.load.image("starting", "/assets/starting.png");\r\n        this._scene.load.image("starting_close", "/assets/starting_close.png");\r\n        this._scene.load.image("jump1", "/assets/jump1.png");\r\n        this._scene.load.image("platform1", "/assets/platform1.png");\r\n        this._scene.load.image("platform2", "/assets/platform2.png");\r\n        this._scene.load.image("platform3", "/assets/platform3.png");\r\n        this._scene.load.image("storeitem", "/assets/storeitem.png");\r\n        this._scene.load.image("storeitem_s", "/assets/storeitem_s.png");\r\n        this._scene.load.image("jumpmod1", "/assets/jumpmod1.png");\r\n        this._scene.load.image("jumpmod2", "/assets/jumpmod2.png");\r\n        this._scene.load.image("tank1", "/assets/tank1.png");\r\n        this._scene.load.image("tank2", "/assets/tank2.png");\r\n        this._scene.load.image("tank3", "/assets/tank3.png");\r\n        this._scene.load.image("tank4", "/assets/tank4.png");\r\n        this._scene.load.image("bumpers1", "/assets/bumpers1.png");\r\n        this._scene.load.image("buybtn", "/assets/buybtn.png");\r\n        this._scene.load.image("jumpbar", "/assets/jumpbar.png");\r\n        this._scene.load.image("fuelbar", "/assets/fuelbar.png");\r\n        this._scene.load.image("rocket1", "/assets/rocket1.png");\r\n        this._scene.load.image("rocket2", "/assets/rocket2.png");\r\n        this._scene.load.image("rocket3", "/assets/rocket3.png");\r\n        this._scene.load.image("spinner", "/assets/spinner.png");\r\n        this._scene.load.image("finishbg", "/assets/finishbg.png");\r\n        this._scene.load.image("finishfg", "/assets/finishfg.png");\r\n        this._scene.load.image("splashbg", "/assets/splashbg.png");\r\n        this._scene.load.image("splashfg", "/assets/splashfg.png");\r\n        this._scene.load.image("title", "/assets/title.png");\r\n        this._scene.load.spritesheet("boost1", "/assets/boost.png", {\r\n            frameWidth: 100,\r\n            frameHeight: 100,\r\n            endFrame: 30\r\n        });\r\n        this._scene.load.spritesheet("321", "/assets/321.png", {\r\n            frameWidth: 181,\r\n            frameHeight: 181,\r\n            endFrame: 22\r\n        });\r\n        this._scene.load.audio("bgm", [\r\n            "/assets/sounds/bgm.mp3",\r\n        ]);\r\n        this._scene.load.audio("chaching", [\r\n            "/assets/sounds/chaching.mp3",\r\n        ]);\r\n        this._scene.load.audio("start1", [\r\n            "/assets/sounds/start1.mp3",\r\n        ]);\r\n        this._scene.load.audio("start2", [\r\n            "/assets/sounds/start2.mp3",\r\n        ]);\r\n        this._scene.load.audio("blip1", [\r\n            "/assets/sounds/blip1.wav",\r\n        ]);\r\n        this._scene.load.audio("blip2", [\r\n            "/assets/sounds/blip2.wav",\r\n        ]);\r\n        /*\r\n        this._scene.load.image("tiles", "/assets/tilemap.png");\r\n        this._scene.load.spritesheet("water", "/assets/water.png", {\r\n            frameWidth: 40,\r\n            frameHeight: 40,\r\n            endFrame: 6\r\n        });\r\n        */\r\n    };\r\n    return Loader;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/shaders/ShaderManager.ts\nvar ShaderManager = /** @class */ (function () {\r\n    function ShaderManager(_game, _scene) {\r\n        this._game = _game;\r\n        this._scene = _scene;\r\n        var r = this._game.renderer;\r\n        /*\r\n        this.snake = r.addPipeline("Snake", new SnakePipeline(this._game));\r\n        this.snake.setFloat2("uResolution", <number>this._game.config.width, <number>this._game.config.height);\r\n        */\r\n    }\r\n    ShaderManager.prototype.update = function () {\r\n    };\r\n    return ShaderManager;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/scaleManager.js\nclass ScaleManager {\r\n    constructor(canvas, isMobile) {\r\n        this.canvas = canvas;\r\n        this.mobile = isMobile;\r\n\r\n        window.addEventListener(\'resize\', () => {\r\n            this.resize(this.canvas);\r\n\r\n            if (this.mobile) {\r\n                if (window.innerWidth < window.innerHeight) {\r\n                    this.leaveIncorrectOrientation();\r\n                } else {\r\n                    this.enterIncorrectOrientation();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.resize(this.canvas);\r\n    }\r\n\r\n    resize(canvas) {\r\n        let scale = Math.min(window.innerWidth / canvas.width, window.innerHeight / canvas.height);\r\n        let orientation = \'left\';\r\n        let extra = (this.mobile) ? \'margin-left: -50%\': \'\';\r\n        let margin = window.innerWidth / 2 - (canvas.width / 2) * scale;\r\n\r\n        canvas.setAttribute(\'style\', \'-ms-transform-origin: \' + orientation + \' top; -webkit-transform-origin: \' + orientation + \' top;\' +\r\n            \' -moz-transform-origin: \' + orientation + \' top; -o-transform-origin: \' + orientation + \' top; transform-origin: \' + orientation + \' top;\' +\r\n            \' -ms-transform: scale(\' + scale + \'); -webkit-transform: scale3d(\' + scale + \', 1);\' +\r\n            \' -moz-transform: scale(\' + scale + \'); -o-transform: scale(\' + scale + \'); transform: scale(\' + scale + \');\' +\r\n            \' display: block; margin-left: \' + margin + \'px;\'\r\n        );\r\n    }\r\n\r\n    enterIncorrectOrientation() {\r\n        document.getElementById("orientation").style.display = "block";\r\n        document.getElementById("content").style.display = "none";\r\n    }\r\n\r\n    leaveIncorrectOrientation() {\r\n        document.getElementById("orientation").style.display = "none";\r\n        document.getElementById("content").style.display = "block";\r\n    }\r\n}\r\n/* harmony default export */ var scaleManager = (ScaleManager);\n// CONCATENATED MODULE: ./src/helpers/InputManager.ts\nvar InputManager = /** @class */ (function () {\r\n    function InputManager(scene) {\r\n        this.up = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.UP);\r\n        this.down = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN);\r\n        this.left = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT);\r\n        this.right = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT);\r\n        this.w = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W);\r\n        this.a = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A);\r\n        this.s = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S);\r\n        this.d = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D);\r\n        this.space = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\r\n    }\r\n    Object.defineProperty(InputManager.prototype, "axisY", {\r\n        get: function () {\r\n            if (this.up.isDown || this.w.isDown)\r\n                return -1;\r\n            else if (this.down.isDown || this.s.isDown)\r\n                return 1;\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InputManager.prototype, "axisX", {\r\n        get: function () {\r\n            if (this.left.isDown || this.a.isDown)\r\n                return -1;\r\n            else if (this.right.isDown || this.d.isDown)\r\n                return 1;\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return InputManager;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/helpers/EffectHelper.ts\nvar EffectHelper = /** @class */ (function () {\r\n    function EffectHelper(_scene) {\r\n        this._scene = _scene;\r\n    }\r\n    return EffectHelper;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/controllers/BaseController.ts\n\r\n\r\nvar ignoreFade = false;\r\nvar BaseController_BaseController = /** @class */ (function () {\r\n    function BaseController(_args, _scene, _shaderManager, _matter, _game) {\r\n        this._args = _args;\r\n        this._scene = _scene;\r\n        this._shaderManager = _shaderManager;\r\n        this._matter = _matter;\r\n        this._game = _game;\r\n        this._entities = [];\r\n        this._destroyables = [];\r\n        this.destroyed = false;\r\n        this._fadedOut = false;\r\n        this._input = new InputManager(this._scene);\r\n        this.effects = new EffectHelper(this._scene);\r\n        this.init();\r\n        this._splashBg = this._scene.add.sprite(0, 0, "splashbg");\r\n        this._splashBg.setOrigin(0, 0);\r\n        this._splashFg = this._scene.add.sprite(440, 200, "rocket1");\r\n        this._splashFg.setOrigin(0.5, 0.5);\r\n        this._splashFg.setScale(8, 8);\r\n        this.boostSprite = this._scene.add.sprite(256, 300, "boost1");\r\n        this._scene.anims.create({\r\n            key: "boost_anim",\r\n            frames: this._scene.anims.generateFrameNumbers("boost1", {\r\n                start: 0,\r\n                end: 30,\r\n            }),\r\n            frameRate: 60,\r\n            repeat: -1\r\n        });\r\n        this.boostSprite.setOrigin(0.5, 0.5);\r\n        this.boostSprite.anims.play("boost_anim");\r\n        this.boostSprite.setScale(12, 12);\r\n        this.boostSprite.alpha = 0;\r\n        this._splashFg.alpha = 0;\r\n        this.addD(this.boostSprite);\r\n        this.addD(this._splashBg);\r\n        this.addD(this._splashFg);\r\n        if (ignoreFade) {\r\n            this._splashBg.y = -1000;\r\n            this._splashFg.y = -1000;\r\n            this.boostSprite.y = -1000;\r\n            ignoreFade = false;\r\n        }\r\n        else {\r\n            this._scene.add.tween({\r\n                targets: this._splashBg,\r\n                y: 1000,\r\n                duration: 1000,\r\n                ease: \'Power2\'\r\n            });\r\n            this._scene.add.tween({\r\n                targets: this._splashFg,\r\n                y: 1000,\r\n                duration: 500,\r\n                ease: \'Power2\'\r\n            });\r\n            this._scene.add.tween({\r\n                targets: this.boostSprite,\r\n                y: 1000,\r\n                duration: 500,\r\n                ease: \'Power2\'\r\n            });\r\n        }\r\n    }\r\n    BaseController.prototype.ignoreFade = function () {\r\n        ignoreFade = true;\r\n    };\r\n    BaseController.prototype.fadeOut = function (cb) {\r\n        if (this._fadedOut)\r\n            return;\r\n        this._fadedOut = true;\r\n        this._scene.add.tween({\r\n            targets: this._splashBg,\r\n            y: 0,\r\n            duration: 500,\r\n            ease: \'Power2\'\r\n        });\r\n        this._scene.add.tween({\r\n            targets: this._splashFg,\r\n            y: 200,\r\n            duration: 1000,\r\n            ease: \'Power2\'\r\n        });\r\n        this._scene.add.tween({\r\n            targets: this.boostSprite,\r\n            y: 300,\r\n            duration: 1000,\r\n            ease: \'Power2\'\r\n        });\r\n        setTimeout(cb, 500);\r\n    };\r\n    BaseController.prototype.create = function (typ, params) {\r\n        var e = (new typ(this._scene, this._input, this._shaderManager, params, this));\r\n        return this.add(e);\r\n    };\r\n    BaseController.prototype.add = function (e) {\r\n        this._entities.push(e);\r\n        return e;\r\n    };\r\n    BaseController.prototype.addD = function (e) {\r\n        this._destroyables.push(e);\r\n        return e;\r\n    };\r\n    BaseController.prototype.update = function () {\r\n        for (var _i = 0, _a = this._entities; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            e.update();\r\n        }\r\n    };\r\n    BaseController.prototype.destroy = function () {\r\n        if (this.destroyed)\r\n            return;\r\n        this.destroyed = true;\r\n        for (var _i = 0, _a = this._entities; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            e.destroy();\r\n        }\r\n        for (var _b = 0, _c = this._destroyables; _b < _c.length; _b++) {\r\n            var e = _c[_b];\r\n            e.destroy();\r\n        }\r\n    };\r\n    return BaseController;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/services/careerService.ts\n/* harmony default export */ var careerService = ({\r\n    money: 100,\r\n    nRaces: 0,\r\n    ownedItems: []\r\n});\r\n\n// CONCATENATED MODULE: ./src/services/itemsService.ts\nvar itemService = {\r\n    ITEMS: {\r\n        AI_HANDICAP1: {\r\n            id: "ai1",\r\n            name: "x",\r\n            description: "x",\r\n            price: 50,\r\n            effect: { speed: 0.2 },\r\n            priority: 0,\r\n            aiOnly: true\r\n        },\r\n        WR1: {\r\n            id: "wr1",\r\n            name: "Weight Reduction 1",\r\n            description: "Carve out the center of your rock a bit.",\r\n            price: 100,\r\n            spriteKey: "rock2",\r\n            effect: { speed: 0.1 },\r\n            priority: 0,\r\n            replacesBaseSprite: true,\r\n            ignoreRotation: false\r\n        },\r\n        WR2: {\r\n            id: "wr2",\r\n            requirements: ["wr1"],\r\n            name: "Weight Reduction 2",\r\n            description: "It loks like a deformed donut...",\r\n            price: 250,\r\n            spriteKey: "rock3",\r\n            effect: { speed: 0.2 },\r\n            priority: 0,\r\n            replacesBaseSprite: true,\r\n            ignoreRotation: false\r\n        },\r\n        WR3: {\r\n            id: "wr3",\r\n            requirements: ["wr2"],\r\n            name: "Weight Reduction 3",\r\n            description: "Is that even legal?",\r\n            price: 600,\r\n            spriteKey: "rock4",\r\n            effect: { speed: 0.3 },\r\n            priority: 0,\r\n            replacesBaseSprite: true,\r\n            ignoreRotation: false\r\n        },\r\n        WR4: {\r\n            id: "wr4",\r\n            requirements: ["wr3"],\r\n            name: "Carbon Fiber",\r\n            description: "That\'s not even a rock!",\r\n            price: 1000,\r\n            spriteKey: "rock5",\r\n            effect: { speed: 0.4 },\r\n            priority: 0,\r\n            replacesBaseSprite: true,\r\n            ignoreRotation: false\r\n        },\r\n        JUMP1: {\r\n            id: "jump1",\r\n            category: "jump",\r\n            name: "Jump Module 1",\r\n            description: "Allows you to jump more frequently",\r\n            price: 250,\r\n            spriteKey: "jumpmod1",\r\n            effect: { jumpDelay: -200 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n        },\r\n        JUMP2: {\r\n            id: "jump2",\r\n            requirements: ["jump1"],\r\n            category: "jump",\r\n            name: "Super Jump Module",\r\n            description: "Allows you to jump more frequently",\r\n            price: 500,\r\n            spriteKey: "jumpmod2",\r\n            effect: { jumpDelay: -200 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n        },\r\n        GAS1: {\r\n            id: "gas1",\r\n            category: "gas",\r\n            name: "Small Gas Tank",\r\n            description: "A little goes a long way",\r\n            price: 100,\r\n            spriteKey: "tank1",\r\n            effect: { fuel: 25 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n            origin: { x: 0.5, y: 1 }\r\n        },\r\n        GAS2: {\r\n            id: "gas2",\r\n            category: "gas",\r\n            requirements: ["gas1"],\r\n            name: "Medium Gas Tank",\r\n            description: "Now we\'re cooking with gas.",\r\n            price: 250,\r\n            spriteKey: "tank2",\r\n            effect: { fuel: 25 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n            origin: { x: 0.5, y: 1 }\r\n        },\r\n        GAS3: {\r\n            id: "gas3",\r\n            category: "gas",\r\n            requirements: ["gas2"],\r\n            name: "Large Gas Tank",\r\n            description: "Maximum Capacity!",\r\n            price: 400,\r\n            spriteKey: "tank3",\r\n            effect: { fuel: 25 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n            origin: { x: 0.5, y: 1 }\r\n        },\r\n        GAS4: {\r\n            id: "gas4",\r\n            category: "gas",\r\n            requirements: ["gas3"],\r\n            name: "Top Secret Tank",\r\n            description: "Shhhhhhh...",\r\n            price: 750,\r\n            spriteKey: "tank4",\r\n            effect: { fuel: 25 },\r\n            priority: -10,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n            origin: { x: 0.5, y: 1 }\r\n        },\r\n        BUMPERS1: {\r\n            id: "b1",\r\n            name: "Bumpers",\r\n            description: "Put a rubber ring around your rock to help it\'s bounciness",\r\n            price: 300,\r\n            spriteKey: "bumpers1",\r\n            effect: { bounce: 0.09 },\r\n            priority: 5,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: false,\r\n        },\r\n        ROCKET1: {\r\n            category: "rocket",\r\n            requirements: ["gas1"],\r\n            id: "rocket1",\r\n            name: "Rocket Mk 1",\r\n            description: "Better than nothing.",\r\n            price: 150,\r\n            spriteKey: "rocket1",\r\n            effect: { rocket: 1 },\r\n            priority: -30,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: true,\r\n        },\r\n        ROCKET2: {\r\n            category: "rocket",\r\n            id: "rocket2",\r\n            requirements: ["rocket1"],\r\n            name: "Rocket Mk 2",\r\n            description: "Now that\'s a real rocket.",\r\n            price: 400,\r\n            spriteKey: "rocket2",\r\n            effect: { rocket: 0.6 },\r\n            priority: -30,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: true,\r\n        },\r\n        ROCKET3: {\r\n            category: "rocket",\r\n            id: "rocket3",\r\n            requirements: ["rocket2"],\r\n            name: "Rocket Mk 3",\r\n            description: "Did you steal this from NASA?",\r\n            price: 700,\r\n            spriteKey: "rocket3",\r\n            effect: { rocket: 0.8 },\r\n            priority: -30,\r\n            replacesBaseSprite: false,\r\n            ignoreRotation: true,\r\n        }\r\n    },\r\n};\r\nvar n = 0;\r\nfor (var k in itemService.ITEMS)\r\n    n++;\r\nconsole.log(n + " items");\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/BaseEntity.ts\nvar BaseEntity = /** @class */ (function () {\r\n    function BaseEntity(_scene, _input, _shaderManager, _params, _controller) {\r\n        this._scene = _scene;\r\n        this._input = _input;\r\n        this._shaderManager = _shaderManager;\r\n        this._params = _params;\r\n        this._controller = _controller;\r\n        this._destroyables = [];\r\n        this.init();\r\n    }\r\n    BaseEntity.prototype.add = function (d) {\r\n        this._destroyables.push(d);\r\n        return d;\r\n    };\r\n    BaseEntity.prototype.destroySingle = function (d) {\r\n        this._destroyables = this._destroyables.filter(function (d2) { return d2 != d; });\r\n        d.destroy();\r\n    };\r\n    BaseEntity.prototype.destroy = function () {\r\n        for (var _i = 0, _a = this._destroyables; _i < _a.length; _i++) {\r\n            var d = _a[_i];\r\n            d.destroy();\r\n        }\r\n    };\r\n    return BaseEntity;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Racer.ts\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Racer = /** @class */ (function (_super) {\r\n    __extends(Racer, _super);\r\n    function Racer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.active = false;\r\n        _this.finishT = 0;\r\n        _this.isPlayer = false;\r\n        _this.lastJumpAt = -1000;\r\n        return _this;\r\n    }\r\n    Racer.prototype.init = function () {\r\n        this.boostSprite = this.add(this._scene.add.sprite(0, 0, "boost1"));\r\n        this._scene.anims.create({\r\n            key: "boost_anim",\r\n            frames: this._scene.anims.generateFrameNumbers("boost1", {\r\n                start: 0,\r\n                end: 30,\r\n            }),\r\n            frameRate: 60,\r\n            repeat: -1\r\n        });\r\n        this.boostSprite.anims.play("boost_anim");\r\n        this.boostSprite.setScale(2, 2);\r\n        this.rocket = 1;\r\n        this.speed = 0.2;\r\n        this.jumpDelay = 1500;\r\n        if (!!this._params.x) {\r\n            this.sprite = this.add(this._scene.matter.add.image(this._params.x, this._params.y, "rock1"));\r\n        }\r\n        else {\r\n            this.sprite = this.add(this._scene.matter.add.image(0, 0, "rock1"));\r\n            this.boostSprite.setVisible(false);\r\n        }\r\n        this.sprite.setCircle(26, {});\r\n        this.sprite.setBounce(0.9);\r\n        this.sprite.setMass(5);\r\n        //this.sprite.setVisible(false);\r\n        if (!this._params.x) {\r\n            this.sprite.setStatic(true);\r\n            this.sprite.setIgnoreGravity(true);\r\n        }\r\n        var weight = 10000;\r\n        var bounce = 0.9;\r\n        var af = 0.02;\r\n        this.fuel = 0;\r\n        this.itemSprites = [];\r\n        var _loop_1 = function (i) {\r\n            if (i.replacesBaseSprite) {\r\n                this_1.sprite.setTexture(i.spriteKey);\r\n            }\r\n            else if (!!i.spriteKey) {\r\n                var createSprite = true;\r\n                if (!!i.category) {\r\n                    var otherSprite = this_1.itemSprites.find(function (s) { return s.__item.category == i.category; });\r\n                    if (!!otherSprite) {\r\n                        createSprite = false;\r\n                        otherSprite.setTexture(i.spriteKey);\r\n                    }\r\n                }\r\n                if (createSprite) {\r\n                    var spr = this_1._scene.add.sprite(this_1.sprite.x, this_1.sprite.y, i.spriteKey);\r\n                    if (!!i.origin) {\r\n                        spr.setOrigin(i.origin.x, i.origin.y);\r\n                    }\r\n                    else {\r\n                        spr.setOrigin(0.5, 0.5);\r\n                    }\r\n                    spr.__item = i;\r\n                    this_1.itemSprites.push(spr);\r\n                    this_1.add(spr);\r\n                }\r\n                if (i.effect.airFriction)\r\n                    af += i.effect.airFriction;\r\n                if (i.effect.speed)\r\n                    this_1.speed += i.effect.speed;\r\n                if (i.effect.weight)\r\n                    weight += i.effect.weight;\r\n                if (i.effect.bounce)\r\n                    bounce += i.effect.bounce;\r\n                if (i.effect.fuel)\r\n                    this_1.fuel += i.effect.fuel;\r\n                if (i.effect.jumpDelay)\r\n                    this_1.jumpDelay += i.effect.jumpDelay;\r\n                if (i.effect.rocket) {\r\n                    this_1.hasRocket = true;\r\n                    this_1.rocket += i.effect.rocket;\r\n                }\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var _i = 0, _a = this._params.items.sort(function (a, b) { return b.priority - a.priority; }); _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            _loop_1(i);\r\n        }\r\n        this.sprite.setFrictionAir(af);\r\n        this.sprite.setMass(weight);\r\n        this.sprite.setBounce(bounce);\r\n    };\r\n    Racer.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n        for (var _i = 0, _a = this.itemSprites; _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            cb(i, x, y);\r\n        }\r\n        cb(this.boostSprite, x, y);\r\n    };\r\n    Racer.prototype.jump = function () {\r\n        var t = this._scene.time.now;\r\n        if (t - this.lastJumpAt > this.jumpDelay && this.active) {\r\n            this.lastJumpAt = t;\r\n            this.sprite.setVelocityY(-9);\r\n        }\r\n    };\r\n    Racer.prototype.update = function () {\r\n        if (this.active) {\r\n            if (!this.isPlayer) {\r\n                this.move(1);\r\n                if (this.sprite.y > 160) {\r\n                    this.jump();\r\n                    this.boosting = false;\r\n                }\r\n                else {\r\n                    this.boosting = true;\r\n                }\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        if (this.boosting && this.hasRocket) {\r\n            this.fuel -= 0.5;\r\n        }\r\n        this.boostSprite.alpha = (this.boosting && this.hasRocket && this.fuel > 0) ? 1 : 0;\r\n        for (var _i = 0, _a = this.itemSprites; _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            var itm = i.__item;\r\n            i.x = this.sprite.x;\r\n            i.y = this.sprite.y;\r\n            i.setScale(this.sprite.scaleX, this.sprite.scaleY);\r\n            if (!itm.ignoreRotation) {\r\n                i.angle = this.sprite.angle;\r\n            }\r\n        }\r\n        this.boostSprite.x = this.sprite.x - 21;\r\n        this.boostSprite.y = this.sprite.y + 12;\r\n    };\r\n    Racer.prototype.previewUpdate = function () {\r\n        this.sprite.angle += 0.5;\r\n        for (var _i = 0, _a = this.itemSprites; _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            var itm = i.__item;\r\n            i.x = this.sprite.x;\r\n            i.y = this.sprite.y;\r\n            i.setScale(this.sprite.scaleX, this.sprite.scaleY);\r\n            if (!itm.ignoreRotation) {\r\n                i.angle = this.sprite.angle;\r\n            }\r\n        }\r\n    };\r\n    Racer.prototype.move = function (dx) {\r\n        if (!this.active)\r\n            return;\r\n        var scale = 1;\r\n        if (this.boosting && this.hasRocket && this.fuel > 0) {\r\n            scale = this.rocket;\r\n        }\r\n        this.sprite.setVelocityX(this.sprite.body.velocity.x + (this.speed * dx) * scale);\r\n    };\r\n    return Racer;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Jump1.ts\nvar Jump1_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Jump1 = /** @class */ (function (_super) {\r\n    Jump1_extends(Jump1, _super);\r\n    function Jump1() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Jump1.prototype.init = function () {\r\n        var shapes = this._scene.cache.json.get("shapes");\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 170, "jump1", null, { shape: shapes.jump1 });\r\n        this.add(this.sprite);\r\n        this.sprite.setStatic(true);\r\n    };\r\n    Jump1.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Jump1.prototype.update = function () {\r\n    };\r\n    return Jump1;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Platform1.ts\nvar Platform1_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Platform1 = /** @class */ (function (_super) {\r\n    Platform1_extends(Platform1, _super);\r\n    function Platform1() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Platform1.prototype.init = function () {\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 180, "platform1", null, {});\r\n        this.sprite.setStatic(true);\r\n        this.add(this.sprite);\r\n    };\r\n    Platform1.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Platform1.prototype.update = function () {\r\n    };\r\n    return Platform1;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Platform2.ts\nvar Platform2_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Platform2 = /** @class */ (function (_super) {\r\n    Platform2_extends(Platform2, _super);\r\n    function Platform2() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Platform2.prototype.init = function () {\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 175, "platform2", null, {});\r\n        this.sprite.setStatic(true);\r\n        this.add(this.sprite);\r\n    };\r\n    Platform2.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Platform2.prototype.update = function () {\r\n    };\r\n    return Platform2;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Spinner.ts\nvar Spinner_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Spinner = /** @class */ (function (_super) {\r\n    Spinner_extends(Spinner, _super);\r\n    function Spinner() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Spinner.prototype.init = function () {\r\n        var shapes = this._scene.cache.json.get("shapes");\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 130, "spinner", null, {\r\n            shape: shapes.spinner\r\n        });\r\n        this.sprite.setStatic(true);\r\n        this.add(this.sprite);\r\n    };\r\n    Spinner.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Spinner.prototype.update = function () {\r\n        this.sprite.setVelocity(0, 0);\r\n        this.sprite.angle += 2;\r\n    };\r\n    return Spinner;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/services/opponentService.ts\n\r\nfunction getOpponent(difficulty) {\r\n    var items = [\r\n        itemService.ITEMS.AI_HANDICAP1,\r\n    ];\r\n    if (difficulty >= 1) {\r\n        items.push(itemService.ITEMS.WR1);\r\n    }\r\n    if (difficulty >= 3) {\r\n        items.push(itemService.ITEMS.GAS1);\r\n        items.push(itemService.ITEMS.ROCKET1);\r\n    }\r\n    if (difficulty >= 7) {\r\n        var r = Math.random();\r\n        if (r > 0.5) {\r\n            items.push(itemService.ITEMS.GAS2);\r\n        }\r\n        else {\r\n            items.push(itemService.ITEMS.WR2);\r\n        }\r\n    }\r\n    if (difficulty >= 9) {\r\n        var r = Math.random();\r\n        if (r > 0.5) {\r\n            items.push(itemService.ITEMS.GAS2);\r\n        }\r\n        else {\r\n            items.push(itemService.ITEMS.ROCKET2);\r\n        }\r\n    }\r\n    if (difficulty >= 10) {\r\n        items.push(itemService.ITEMS.WR3);\r\n    }\r\n    if (difficulty >= 11) {\r\n        items.push(itemService.ITEMS.JUMP1);\r\n    }\r\n    if (difficulty >= 13) {\r\n        var r = Math.random();\r\n        if (r > 0.5) {\r\n            items.push(itemService.ITEMS.BUMPERS1);\r\n        }\r\n    }\r\n    if (difficulty >= 16) {\r\n        items.push(itemService.ITEMS.ROCKET3);\r\n    }\r\n    if (difficulty >= 19) {\r\n        items.push(itemService.ITEMS.GAS3);\r\n    }\r\n    if (difficulty >= 23) {\r\n        items.push(itemService.ITEMS.ROCKET3);\r\n    }\r\n    if (difficulty >= 25) {\r\n        items.push(itemService.ITEMS.GAS4);\r\n    }\r\n    if (difficulty >= 28) {\r\n        items.push(itemService.ITEMS.WR4);\r\n    }\r\n    return items;\r\n}\r\n\n// CONCATENATED MODULE: ./src/services/raceFinishService.ts\n/* harmony default export */ var raceFinishService = ({\r\n    placement: 0,\r\n    earnings: 1\r\n});\r\n\n// CONCATENATED MODULE: ./src/controllers/RaceFinishController.ts\nvar RaceFinishController_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar RaceFinishController_RaceFinishController = /** @class */ (function (_super) {\r\n    RaceFinishController_extends(RaceFinishController, _super);\r\n    function RaceFinishController() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RaceFinishController.prototype.init = function () {\r\n        this._bg = this._scene.add.tileSprite(0, 0, 800, 600, "finishbg");\r\n        this._bg.setOrigin(0, 0);\r\n        this.addD(this._bg);\r\n        this._fg = this._scene.add.sprite(0, 0, "finishfg");\r\n        this._fg.setOrigin(0, 0);\r\n        this.addD(this._fg);\r\n        var placementText = this._scene.add.text(335, 125, raceFinishService.placement.toString(), {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 108,\r\n            color: raceFinishService.placement == 1 ? "#11EF11" : raceFinishService.placement == 2 ? "#FF0000" : "#ff0000",\r\n            align: "left",\r\n        });\r\n        placementText.setStroke("#000000", 12);\r\n        this.addD(placementText);\r\n        var earningText = this._scene.add.text(445, 235, raceFinishService.earnings.toString(), {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 108,\r\n            color: "#9933ff",\r\n            align: "left",\r\n        });\r\n        earningText.setStroke("#000000", 12);\r\n        this.addD(earningText);\r\n    };\r\n    RaceFinishController.prototype.update = function () {\r\n        this._bg.tilePositionY += 0.5;\r\n        this._bg.tilePositionX += 1;\r\n        if (this._input.space.isDown) {\r\n            var _this_1 = this;\r\n            this.fadeOut(function () {\r\n                _this_1._game.switchController(StoreController_StoreController);\r\n            });\r\n        }\r\n    };\r\n    RaceFinishController.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return RaceFinishController;\r\n}(BaseController_BaseController));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Platform3.ts\nvar Platform3_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Platform3 = /** @class */ (function (_super) {\r\n    Platform3_extends(Platform3, _super);\r\n    function Platform3() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Platform3.prototype.init = function () {\r\n        var shapes = this._scene.cache.json.get("shapes");\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 200, "platform3", null, {\r\n            shape: shapes.platform3\r\n        });\r\n        this.sprite.setStatic(true);\r\n        this.add(this.sprite);\r\n    };\r\n    Platform3.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Platform3.prototype.update = function () {\r\n    };\r\n    return Platform3;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/entities/Spinner2.ts\nvar Spinner2_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\nvar Spinner2 = /** @class */ (function (_super) {\r\n    Spinner2_extends(Spinner2, _super);\r\n    function Spinner2() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Spinner2.prototype.init = function () {\r\n        this.sprite = this._scene.matter.add.sprite(this._params.x, 80, "platform1", null, {});\r\n        this.sprite.setStatic(true);\r\n        this.add(this.sprite);\r\n    };\r\n    Spinner2.prototype.draw = function (cb, x, y) {\r\n        cb(this.sprite, x, y);\r\n    };\r\n    Spinner2.prototype.update = function () {\r\n        this.sprite.angle -= 2;\r\n    };\r\n    return Spinner2;\r\n}(BaseEntity));\r\n\r\n\n// CONCATENATED MODULE: ./src/helpers/SoundManager.ts\n/* harmony default export */ var SoundManager = ({\r\n    init: function (scene) {\r\n        this.bgm = scene.sound.add("bgm");\r\n        this.chaching = scene.sound.add("chaching");\r\n        this.start1 = scene.sound.add("start1");\r\n        this.start2 = scene.sound.add("start2");\r\n        this.blip1 = scene.sound.add("blip1");\r\n        this.blip2 = scene.sound.add("blip2");\r\n    },\r\n    playBgm: function () {\r\n        this.bgm.play(null, {\r\n            loop: true\r\n        });\r\n    },\r\n    pauseBgm: function () {\r\n        this.bgm.pause();\r\n    },\r\n    playsfx: function (s) {\r\n        switch (s) {\r\n            case "chaching":\r\n                this.chaching.play();\r\n                break;\r\n            case "start":\r\n                this.start1.play();\r\n                break;\r\n            case "start2":\r\n                this.start2.play();\r\n                break;\r\n            case "blip1":\r\n                this.blip1.play();\r\n                break;\r\n            case "blip2":\r\n                this.blip2.play();\r\n                break;\r\n        }\r\n    }\r\n});\r\n\n// CONCATENATED MODULE: ./src/controllers/PlayController.ts\nvar PlayController_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar USE_RT = true;\r\nvar PlayController_PlayController = /** @class */ (function (_super) {\r\n    PlayController_extends(PlayController, _super);\r\n    function PlayController() {\r\n        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\r\n        _this_1._finishes = 0;\r\n        _this_1._playerFinish = 0;\r\n        _this_1._finished = false;\r\n        return _this_1;\r\n    }\r\n    PlayController.prototype.init = function () {\r\n        var _this_1 = this;\r\n        this._bg1 = this._scene.add.tileSprite(0, -100, 800, 600, "bg1");\r\n        this._bg1.setOrigin(0, 0);\r\n        this.addD(this._bg1);\r\n        this._bg3 = this._scene.add.tileSprite(0, 0, 800, 600, "bg3");\r\n        this._bg3.setOrigin(0, 0);\r\n        this.addD(this._bg3);\r\n        this._bg2 = this._scene.add.tileSprite(0, 0, 800, 600, "bg2");\r\n        this._bg2.setOrigin(0, 0);\r\n        this.addD(this._bg2);\r\n        this._startingTower = this._scene.add.sprite(-240, -170, "starting");\r\n        this._startingTower.setOrigin(0, 0);\r\n        this.addD(this._startingTower);\r\n        this._startingTowerClose = this._scene.add.sprite(-232, -170, "starting_close");\r\n        this._startingTowerClose.setOrigin(0, 0);\r\n        this._startingTowerClose.setVisible(false);\r\n        this.addD(this._startingTowerClose);\r\n        this._tileSprite = this._scene.add.tileSprite(-1000, 200, 2000, 400, "terrain1");\r\n        this._tileSprite.setOrigin(0, 0);\r\n        this.addD(this._tileSprite);\r\n        var floorRect = this._scene.matter.add.rectangle(0, 300, 100000, 200, { isStatic: true });\r\n        //this.addD(floorRect);\r\n        var adjDifficulty = careerService.nRaces - 1;\r\n        this._racers = [\r\n            this.create(Racer, { x: -205, y: 140, items: careerService.ownedItems }),\r\n            this.create(Racer, { x: -205, y: 70, items: getOpponent(adjDifficulty + 2) }),\r\n            this.create(Racer, { x: -205, y: 0, items: getOpponent(adjDifficulty + 4) }),\r\n        ];\r\n        var _this = this;\r\n        var _lastSfxPlay = -1000;\r\n        this._matter.world.on("collisionstart", function (ev) {\r\n            var plyr = _this._racers[0];\r\n            var t = _this._scene.time.now;\r\n            for (var _i = 0, _a = ev.pairs; _i < _a.length; _i++) {\r\n                var p = _a[_i];\r\n                if (p.bodyA == plyr.sprite.body || p.bodyB == plyr.sprite.body) {\r\n                    //if (p.bodyA == floorRect || p.bodyB == floorRect) return;\r\n                    if (t - _lastSfxPlay > 350) {\r\n                        _lastSfxPlay = t;\r\n                        var r = Math.random();\r\n                        if (r < 0.5)\r\n                            SoundManager.playsfx("blip1");\r\n                        else\r\n                            SoundManager.playsfx("blip2");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this._racers[0].isPlayer = true;\r\n        this._racers[1].jumpDelay = 3000;\r\n        this._matter.world.setGravity(0, 0);\r\n        this._rt = this._scene.add.renderTexture(0, 0, 2000, 2000);\r\n        this._rt.setOrigin(0, 0);\r\n        this._rt.angle = 10;\r\n        this.addD(this._rt);\r\n        this.generate();\r\n        var uiBg = this._scene.add.sprite(800, 600, "uibg");\r\n        uiBg.setOrigin(1, 1);\r\n        this.addD(uiBg);\r\n        this._jumpBar = this._scene.add.sprite(800, 600, "jumpbar");\r\n        this._jumpBar.setOrigin(1, 1);\r\n        this._jumpBar.setCrop(0, 126, 800, 600);\r\n        this.addD(this._jumpBar);\r\n        this._fuelBar = this._scene.add.sprite(800, 600, "fuelbar");\r\n        this._fuelBar.setOrigin(1, 1);\r\n        this._fuelBar.setCrop(0, 126, 800, 600);\r\n        this.addD(this._fuelBar);\r\n        this._speedText = this._scene.add.text(780, 560, "00", {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 72,\r\n            color: "#FFFFFF",\r\n            align: "right",\r\n            antialias: false\r\n        });\r\n        this._speedText.setStroke("#000000", 4);\r\n        this._speedText.setOrigin(1, 1);\r\n        if (USE_RT) {\r\n            this._tileSprite.setVisible(false);\r\n            this._startingTower.setVisible(false);\r\n            this._startingTowerClose.setVisible(false);\r\n            this._finish.setVisible(false);\r\n            for (var _i = 0, _a = this._racers; _i < _a.length; _i++) {\r\n                var r = _a[_i];\r\n                r.sprite.setVisible(false);\r\n                r.boostSprite.setVisible(false);\r\n                for (var _b = 0, _c = r.itemSprites; _b < _c.length; _b++) {\r\n                    var is = _c[_b];\r\n                    is.setVisible(false);\r\n                }\r\n            }\r\n            for (var _d = 0, _e = this._obstacles; _d < _e.length; _d++) {\r\n                var o = _e[_d];\r\n                o.sprite.setVisible(false);\r\n            }\r\n        }\r\n        else {\r\n            this._scene.cameras.main.startFollow(this._racers[0].sprite);\r\n        }\r\n        var countdown = this.addD(this._scene.add.sprite(400, 300, "321"));\r\n        this._scene.anims.create({\r\n            key: "countdown_anim",\r\n            frames: this._scene.anims.generateFrameNumbers("321", {\r\n                start: 0,\r\n                end: 22,\r\n            }),\r\n            frameRate: 15,\r\n        });\r\n        countdown.alpha = 0;\r\n        setTimeout(function () {\r\n            countdown.alpha = 1;\r\n            countdown.anims.play("countdown_anim");\r\n            SoundManager.playsfx("start");\r\n            setTimeout(function () { SoundManager.playsfx("start"); }, 500);\r\n            setTimeout(function () { SoundManager.playsfx("start"); }, 1000);\r\n            setTimeout(function () { SoundManager.playsfx("start2"); }, 1500);\r\n            setTimeout(function () {\r\n                _this._startingTowerClose.alpha = 0;\r\n                _this._matter.world.setGravity(0.25, 1);\r\n                _this_1._racers[0].sprite.setVelocityX(7);\r\n                _this_1._racers[1].sprite.setVelocityX(5);\r\n                _this_1._racers[2].sprite.setVelocityX(3);\r\n                for (var _i = 0, _a = _this_1._racers; _i < _a.length; _i++) {\r\n                    var r = _a[_i];\r\n                    r.active = true;\r\n                }\r\n            }, 1500);\r\n        }, 1500);\r\n    };\r\n    PlayController.prototype.generate = function () {\r\n        var obstacles = [\r\n            Jump1,\r\n            Platform1,\r\n            Platform2,\r\n            Platform3,\r\n            Spinner,\r\n            Spinner2\r\n        ];\r\n        this._obstacles = [];\r\n        var nObstacles = 7 + Math.floor(careerService.nRaces * 1.25) + Math.floor(Math.random() * 3);\r\n        nObstacles = Math.min(22, nObstacles);\r\n        var offset = 500;\r\n        for (var i = 0; i < nObstacles; i++) {\r\n            var r = Math.random();\r\n            var x = (i * 600) + 200 + offset;\r\n            var c = obstacles[Math.floor(Math.random() * obstacles.length)];\r\n            this._obstacles.push(this.create(c, {\r\n                x: x\r\n            }));\r\n        }\r\n        this._finish = this._scene.add.sprite((nObstacles + 1) * 600 + 200 + offset, 106, "finish");\r\n    };\r\n    PlayController.prototype.finish = function () {\r\n        var _this_1 = this;\r\n        if (this._finished)\r\n            return;\r\n        this._finished = true;\r\n        var _this = this;\r\n        var g = this._scene.add.graphics();\r\n        g.alpha = 0;\r\n        g.fillStyle(0x000000, 1);\r\n        g.fillRect(0, 0, 800, 600);\r\n        this.addD(g);\r\n        this._scene.add.tween({\r\n            targets: g,\r\n            alpha: 1,\r\n            duration: 1000,\r\n            ease: \'Power2\'\r\n        });\r\n        setTimeout(function () {\r\n            careerService.nRaces++;\r\n            raceFinishService.placement = _this_1._playerFinish;\r\n            raceFinishService.earnings = (50 + Math.floor(Math.random() * 8) + (careerService.nRaces * 10)) * (4 - _this_1._playerFinish);\r\n            if (careerService.nRaces > 4)\r\n                raceFinishService.earnings += 30;\r\n            if (careerService.nRaces > 8)\r\n                raceFinishService.earnings += 30;\r\n            careerService.money += raceFinishService.earnings;\r\n            _this._game.switchController(RaceFinishController_RaceFinishController);\r\n        }, 1000);\r\n    };\r\n    PlayController.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    PlayController.prototype.adjDraw = function (spr, x, y) {\r\n        this._rt.draw(spr, x + spr.x, y + spr.y);\r\n    };\r\n    PlayController.prototype.update = function () {\r\n        if (this.destroyed)\r\n            return;\r\n        _super.prototype.update.call(this);\r\n        var ps = this._racers[0];\r\n        this._tileSprite.x = ps.sprite.x - 800;\r\n        this._tileSprite.tilePositionX += ps.sprite.body.velocity.x;\r\n        this._bg1.tilePositionX += ps.sprite.body.velocity.x * 0.2;\r\n        this._bg2.tilePositionX += ps.sprite.body.velocity.x * 0.8;\r\n        this._bg3.tilePositionX += ps.sprite.body.velocity.x * 0.5;\r\n        this._rt.clear();\r\n        var shakeX = 0;\r\n        var shakeY = 0;\r\n        var player = this._racers[0];\r\n        if (player.boosting && player.hasRocket && player.fuel > 0) {\r\n            shakeX = (Math.random() * 8) - 4;\r\n            shakeY = (Math.random() * 8) - 4;\r\n        }\r\n        var x = 300 - ps.sprite.x + shakeX;\r\n        var y = 270 - ps.sprite.y + shakeY;\r\n        var boundAdj = this.adjDraw.bind(this);\r\n        if (USE_RT) {\r\n            this.adjDraw(this._tileSprite, x, y);\r\n            this.adjDraw(this._startingTower, x, y);\r\n            this.adjDraw(this._startingTowerClose, x, y);\r\n            this.adjDraw(this._finish, x, y);\r\n            for (var _i = 0, _a = this._racers; _i < _a.length; _i++) {\r\n                var r = _a[_i];\r\n                r.draw(boundAdj, x, y);\r\n            }\r\n            for (var _b = 0, _c = this._obstacles; _b < _c.length; _b++) {\r\n                var o = _c[_b];\r\n                o.draw(boundAdj, x, y);\r\n            }\r\n        }\r\n        if (this._input.up.isDown) {\r\n            player.jump();\r\n        }\r\n        if (this._input.right.isDown) {\r\n            player.move(1);\r\n        }\r\n        if (this._input.left.isDown) {\r\n            player.move(-1);\r\n        }\r\n        player.boosting = this._input.space.isDown;\r\n        this._speedText.text = Math.floor(player.sprite.body.velocity.x * 5).toString();\r\n        for (var _d = 0, _e = this._racers; _d < _e.length; _d++) {\r\n            var r = _e[_d];\r\n            if (r.sprite.x > this._finish.x + 10) {\r\n                if (!r.finishT) {\r\n                    r.finishT = this._scene.time.now;\r\n                    this._finishes++;\r\n                    if (r.isPlayer) {\r\n                        this._playerFinish = this._finishes;\r\n                        this.finish();\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 126\r\n        // 244\r\n        var t = this._scene.time.now;\r\n        var jt = Math.min(1, (t - player.lastJumpAt) / player.jumpDelay);\r\n        this._jumpBar.setCrop(0, 244 - (jt * (244 - 126)), 800, 600);\r\n        var ft = Math.min(1, player.fuel / 100);\r\n        this._fuelBar.setCrop(0, 244 - (ft * (244 - 126)), 800, 600);\r\n    };\r\n    return PlayController;\r\n}(BaseController_BaseController));\r\n\r\n\n// CONCATENATED MODULE: ./src/controllers/StoreController.ts\nvar StoreController_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar StoreController_StoreController = /** @class */ (function (_super) {\r\n    StoreController_extends(StoreController, _super);\r\n    function StoreController() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    StoreController.prototype.init = function () {\r\n        this._storeBg = this._scene.add.sprite(0, 0, "store");\r\n        this._storeBg.setOrigin(0, 0);\r\n        this._moneyText = this._scene.add.text(755, 18, careerService.money.toString(), {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 48,\r\n            color: "#FFFFFF",\r\n            align: "right",\r\n            antialias: false\r\n        });\r\n        this._moneyText.setOrigin(1, 0);\r\n        this.addD(this._moneyText);\r\n        this._exitText = this._scene.add.text(40, 510, "exit", {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 60,\r\n            color: "#FF0000",\r\n            antialias: false\r\n        });\r\n        this._exitText.setStroke("#000000", 4);\r\n        this._exitText.setOrigin(0, 0);\r\n        this.addD(this._exitText);\r\n        this._exitText.setInteractive();\r\n        var _this = this;\r\n        this._exitText.on("pointerdown", function (pointer) {\r\n            _this._preview.destroy();\r\n            _this.fadeOut(function () {\r\n                _this._game.switchController(PlayController_PlayController);\r\n            });\r\n        });\r\n        this._descText = this._scene.add.text(280, 386, "", {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 32,\r\n            color: "#FFFFFF",\r\n            align: "left",\r\n            antialias: false,\r\n            wordWrap: {\r\n                width: 500\r\n            }\r\n        });\r\n        this._descText.setOrigin(0, 0);\r\n        this.addD(this._descText);\r\n        this._priceText = this._scene.add.text(280, 90, "0", {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 40,\r\n            color: "#FFFFFF",\r\n            align: "left",\r\n            antialias: false,\r\n            wordWrap: {\r\n                width: 500\r\n            }\r\n        });\r\n        this._priceText.setOrigin(0, 0);\r\n        this.addD(this._priceText);\r\n        this._items = [];\r\n        var idx = 0;\r\n        var _loop_1 = function (key) {\r\n            var item = (itemService.ITEMS[key]);\r\n            var skip = false;\r\n            if (item.aiOnly || careerService.ownedItems.find(function (i) { return i.name == item.name; }))\r\n                skip = true;\r\n            if (!!item.requirements) {\r\n                var _loop_2 = function (r) {\r\n                    var has = careerService.ownedItems.findIndex(function (i) { return i.id == r; });\r\n                    console.log(r, careerService.ownedItems);\r\n                    console.log(has);\r\n                    if (has < 0) {\r\n                        skip = true;\r\n                    }\r\n                };\r\n                for (var _i = 0, _a = item.requirements; _i < _a.length; _i++) {\r\n                    var r = _a[_i];\r\n                    _loop_2(r);\r\n                }\r\n            }\r\n            if (skip)\r\n                return "continue";\r\n            var storeItem = new StoreItem(this_1._scene, item, idx, this_1);\r\n            this_1._items.push(storeItem);\r\n            idx++;\r\n        };\r\n        var this_1 = this;\r\n        for (var key in itemService.ITEMS) {\r\n            _loop_1(key);\r\n        }\r\n        this._preview = new Racer(this._scene, this._input, this._shaderManager, {\r\n            items: careerService.ownedItems\r\n        }, this);\r\n        this._preview.sprite.x = 530;\r\n        this._preview.sprite.y = 220;\r\n        this._preview.sprite.setScale(4, 4);\r\n        this._buyBtn = this._scene.add.sprite(620, 320, "buybtn");\r\n        this._buyBtn.setOrigin(0, 0);\r\n        this._buyBtn.setVisible(false);\r\n        this._buyBtn.setInteractive();\r\n        this._buyBtn.on("pointerdown", function (pointer) {\r\n            _this.buy();\r\n        });\r\n        this._startT = this._scene.time.now;\r\n    };\r\n    StoreController.prototype.buy = function () {\r\n        if (careerService.money >= this._selItem.price) {\r\n            careerService.money -= this._selItem.price;\r\n            careerService.ownedItems.push(this._selItem);\r\n            this.ignoreFade();\r\n            this._game.switchController(StoreController);\r\n            SoundManager.playsfx("chaching");\r\n        }\r\n        else {\r\n        }\r\n    };\r\n    StoreController.prototype.select = function (item) {\r\n        this._selItem = item;\r\n        this._buyBtn.setVisible(true);\r\n        this._descText.text = item.description.split("").map(function (c) { return c == " " ? "   " : c; }).join("");\r\n        this._priceText.text = item.price.toString();\r\n        this._preview.destroy();\r\n        this._preview = new Racer(this._scene, this._input, this._shaderManager, {\r\n            items: careerService.ownedItems.concat([item])\r\n        }, this);\r\n        this._preview.sprite.x = 530;\r\n        this._preview.sprite.y = 220;\r\n        this._preview.sprite.setScale(4, 4);\r\n    };\r\n    StoreController.prototype.deselectAll = function () {\r\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n            var i = _a[_i];\r\n            i.deselect();\r\n        }\r\n    };\r\n    StoreController.prototype.update = function () {\r\n        if (this._fadedOut)\r\n            return;\r\n        if (this._input.space.isDown && this._scene.time.now - this._startT > 1000) {\r\n            var _this_1 = this;\r\n            this._preview.destroy();\r\n            this.fadeOut(function () {\r\n                _this_1._game.switchController(PlayController_PlayController);\r\n            });\r\n            return;\r\n        }\r\n        this._preview.previewUpdate();\r\n    };\r\n    StoreController.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        this._preview.destroy();\r\n        this._storeBg.destroy();\r\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n            var si = _a[_i];\r\n            si.destroy();\r\n        }\r\n    };\r\n    return StoreController;\r\n}(BaseController_BaseController));\r\n\r\nvar StoreItem = /** @class */ (function () {\r\n    function StoreItem(scene, item, idx, controller) {\r\n        var _this_1 = this;\r\n        this.item = item;\r\n        this._controller = controller;\r\n        var y = 28 + (idx * 44);\r\n        this._sprite = scene.add.sprite(34, y, "storeitem");\r\n        this._sprite.setOrigin(0, 0);\r\n        this._text = scene.add.text(40, y + 8, item.name, {\r\n            fontFamily: "ARCADECLASSIC",\r\n            fontSize: 18,\r\n            color: "#FFFFFF",\r\n            align: "left"\r\n        });\r\n        this._sprite.setInteractive();\r\n        var _this = this;\r\n        this._sprite.on("pointerdown", function (pointer) {\r\n            _this._controller.deselectAll();\r\n            _this.select();\r\n            _this._controller.select(_this_1.item);\r\n        });\r\n    }\r\n    StoreItem.prototype.select = function () {\r\n        this._selected = true;\r\n        this._sprite.setTexture("storeitem_s");\r\n    };\r\n    StoreItem.prototype.deselect = function () {\r\n        this._selected = false;\r\n        this._sprite.setTexture("storeitem");\r\n    };\r\n    StoreItem.prototype.destroy = function () {\r\n        this._sprite.destroy();\r\n        this._text.destroy();\r\n    };\r\n    return StoreItem;\r\n}());\r\n\n// CONCATENATED MODULE: ./src/controllers/TitleController.ts\nvar TitleController_extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\nvar TitleController_TitleController = /** @class */ (function (_super) {\r\n    TitleController_extends(TitleController, _super);\r\n    function TitleController() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TitleController.prototype.init = function () {\r\n        this._bg = this._scene.add.sprite(0, 0, "title");\r\n        this._bg.setOrigin(0, 0);\r\n        this.addD(this._bg);\r\n    };\r\n    TitleController.prototype.update = function () {\r\n        if (this._input.space.isDown && !this._fadedOut) {\r\n            var _this_1 = this;\r\n            this.fadeOut(function () {\r\n                _this_1._game.switchController(StoreController_StoreController);\r\n            });\r\n        }\r\n    };\r\n    TitleController.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    return TitleController;\r\n}(BaseController_BaseController));\r\n\r\n\n// CONCATENATED MODULE: ./src/RockRacingGame.ts\n\r\n\r\n\r\n\r\n\r\nvar RockRacingGame_RockRacingGame = /** @class */ (function () {\r\n    function RockRacingGame() {\r\n        var _this_1 = this;\r\n        var _this = this;\r\n        this._game = new Phaser.Game({\r\n            width: 800,\r\n            height: 600,\r\n            type: Phaser.AUTO,\r\n            render: {\r\n                pixelArt: true\r\n            },\r\n            scene: {\r\n                preload: function () {\r\n                    _this._scene = this;\r\n                    window.scene = this;\r\n                    _this.preload();\r\n                },\r\n                create: function () {\r\n                    SoundManager.init(this);\r\n                    SoundManager.playBgm();\r\n                    _this._matter = this.matter;\r\n                    _this.create();\r\n                },\r\n                update: function () {\r\n                    _this.update();\r\n                }\r\n            },\r\n            physics: {\r\n                default: "matter",\r\n                matter: {\r\n                //debug: true\r\n                }\r\n            },\r\n            callbacks: {\r\n                postBoot: function () {\r\n                    new scaleManager(_this_1._game.canvas, !_this_1._game.device.os.desktop);\r\n                }\r\n            }\r\n        });\r\n        window.game = this._game;\r\n        /*\r\n        document.addEventListener("keydown", ev => {\r\n            if (ev.which === 70)  {\r\n                (<any>_this._game.canvas)[_this._game.device.fullscreen.request]();\r\n            }\r\n        });\r\n        */\r\n    }\r\n    RockRacingGame.prototype.preload = function () {\r\n        var loader = new Loader(this._scene);\r\n        loader.load();\r\n    };\r\n    RockRacingGame.prototype.switchController = function (c) {\r\n        if (!!this._controller) {\r\n            this._controller.destroy();\r\n        }\r\n        this._controller = (new c(null, this._scene, this._shaderManager, this._matter, this));\r\n    };\r\n    RockRacingGame.prototype.create = function () {\r\n        this._shaderManager = new ShaderManager(this._game, this._scene);\r\n        this.switchController(TitleController_TitleController);\r\n    };\r\n    RockRacingGame.prototype.update = function () {\r\n        if (!!this._controller) {\r\n            this._controller.update();\r\n        }\r\n        this._shaderManager.update();\r\n    };\r\n    return RockRacingGame;\r\n}());\r\n\r\n\n// CONCATENATED MODULE: ./src/index.ts\n\r\nvar src_g = new RockRacingGame_RockRacingGame();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);